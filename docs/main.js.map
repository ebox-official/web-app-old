{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/constants/abis.js","./src/app/constants/tokens.js","./src/app/constants/various.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/address-book/address-book.component.ts","./src/app/components/address-book/address-book.component.html","./src/app/components/bg-changer/bg-changer.component.ts","./src/app/components/bg-changer/bg-changer.component.html","./src/app/components/bottom-bar/bottom-bar.component.ts","./src/app/components/bottom-bar/bottom-bar.component.html","./src/app/components/boxes-received-list/box-received/box-received.component.ts","./src/app/components/boxes-received-list/box-received/box-received.component.html","./src/app/components/boxes-received-list/boxes-received-list.component.ts","./src/app/components/boxes-received-list/boxes-received-list.component.html","./src/app/components/boxes-sent-list/box-sent/box-sent.component.ts","./src/app/components/boxes-sent-list/box-sent/box-sent.component.html","./src/app/components/boxes-sent-list/boxes-sent-list.component.ts","./src/app/components/boxes-sent-list/boxes-sent-list.component.html","./src/app/components/coming-soon/coming-soon.component.ts","./src/app/components/coming-soon/coming-soon.component.html","./src/app/components/governance/governance-area/governance-area.component.ts","./src/app/components/governance/governance-area/governance-area.component.html","./src/app/components/governance/governance-proposal/governance-proposal.component.ts","./src/app/components/governance/governance-proposal/governance-proposal.component.html","./src/app/components/governance/governance.component.ts","./src/app/components/governance/governance.component.html","./src/app/components/loading-indicator/loading-indicator.component.ts","./src/app/components/loading-indicator/loading-indicator.component.html","./src/app/components/over-the-counter/over-the-counter.component.ts","./src/app/components/over-the-counter/over-the-counter.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/password-strength-visualizer/password-strength-visualizer.component.ts","./src/app/components/password-strength-visualizer/password-strength-visualizer.component.html","./src/app/components/send/send.component.ts","./src/app/components/send/send.component.html","./src/app/components/staking/staking.component.ts","./src/app/components/staking/staking.component.html","./src/app/components/toaster-notifier/toaster-notifier.component.ts","./src/app/components/toaster-notifier/toaster-notifier.component.html","./src/app/components/token-selector/token-selector.component.ts","./src/app/components/token-selector/token-selector.component.html","./src/app/components/top-bar/top-bar.component.ts","./src/app/components/top-bar/top-bar.component.html","./src/app/components/view-console/view-console.component.ts","./src/app/components/view-console/view-console.component.html","./src/app/pipes/to-fixed.pipe.ts","./src/app/services/address-book.service.ts","./src/app/services/confirm-dialog.service.ts","./src/app/services/contract.service.ts","./src/app/services/governance.service.ts","./src/app/services/loading-indicator.service.ts","./src/app/services/prompt-dialog.service.ts","./src/app/services/staking.service.ts","./src/app/services/toaster.service.ts","./src/app/services/view-console.service.ts","./src/environments/environment.ts","./src/main.ts","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\@walletconnect\\utils\\node_modules\\bn.js\\lib|buffer","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\bn.js\\lib|buffer","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\brorand|crypto","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\cipher-base|stream","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\ethereumjs-abi\\node_modules\\ethereumjs-util\\dist|assert","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\ethereumjs-util\\dist|assert","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\hash-base\\node_modules\\readable-stream\\lib\\internal\\streams|util","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\hash-base\\node_modules\\readable-stream\\lib|util","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\keccak\\node_modules\\readable-stream\\lib\\internal\\streams|util","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\keccak\\node_modules\\readable-stream\\lib|util","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\scryptsy\\lib|crypto","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\tweetnacl|crypto","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\walletlink\\node_modules\\bn.js\\lib|buffer","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\web3-utils\\node_modules\\ethereumjs-util\\dist.browser|assert","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\web3-utils\\node_modules\\ethereumjs-util\\node_modules\\bn.js\\lib|buffer","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\web3-utils\\node_modules\\rlp\\node_modules\\bn.js\\lib|buffer","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\xhr2-cookies\\dist|http","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\xhr2-cookies\\dist|https","ignored|C:\\Users\\fredo corleone\\Documents\\GitHub\\web-app\\node_modules\\xhr2-cookies\\dist|os"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","export let STAKING = {\r\n    ADDRESSES: {\r\n        ETHEREUM: \"0x37c82a143a9fafc2df10e774f1e4b8b96fd41559\",\r\n        BINANCE: \"0x668Db61f9069F252EBe978dB75e9a1B103eBC23c\"\r\n    },\r\n    ABI: [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnclaimedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"other\",\"type\":\"address\"}],\"name\":\"getUnclaimedRewardFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setContractPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct ethboxStaking.staking_reward[]\",\"name\":\"_rewards\",\"type\":\"tuple[]\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\r\n};\r\n\r\nexport let ETHBOX = {\r\n    ADDRESSES: {\r\n        ETHEREUM: \"0x501AC1D6103fB2643f2cB93985baAac6f81d1Bc9\",\r\n        ETHEREUM_TESTNET: \"0xAAa491Cf3cA23D59a77eB56Ab487169F4B49e4e2\",\r\n        BINANCE: \"0x98F8E39032B4dBEC2235B68Bd7CC2505D3793161\",\r\n        BINANCE_TESTNET: \"0xF559344bF9A51bF778fB0Ff38cc690bAF7E61081\",\r\n        MATIC: \"0xbD1E729074A14348c78E39b56992f54f0b5d37Ec\",\r\n        MATIC_TESTNET: \"0x6c1cd6434B5Ee4A75605981387cBb3cdDc5596d0\",\r\n        REEF: \"0x9928e7a8e766e1e5aa3f7c450bd4d513f8d9b141\",\r\n        REEF_TESTNET: \"0xE21Dce52e291A788956A4Fd7446F9dc4Eb1f0CF4\"\r\n    },\r\n    ABI: [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_boxIndex\",\"type\":\"uint256\"}],\"name\":\"cancelBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_boxIndex\",\"type\":\"uint256\"}],\"name\":\"cancelBoxWithPrivacy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_boxIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_passHash\",\"type\":\"bytes32\"}],\"name\":\"clearBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_boxIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_passHash\",\"type\":\"bytes32\"}],\"name\":\"clearBoxWithPrivacy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"_sendToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sendValue\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"_requestToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requestValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_passHashHash\",\"type\":\"bytes32\"}],\"name\":\"createBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_recipientHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"_sendToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sendValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_passHashHash\",\"type\":\"bytes32\"}],\"name\":\"createBoxWithPrivacy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundAllBoxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setStopDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_boxIndex\",\"type\":\"uint256\"}],\"name\":\"getBox\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"passHashHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"sendToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sendValue\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"requestToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"taken\",\"type\":\"bool\"}],\"internalType\":\"struct ethbox.Box\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoxesAll\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"passHashHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"sendToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sendValue\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"requestToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"taken\",\"type\":\"bool\"}],\"internalType\":\"struct ethbox.Box[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoxesAllWithPrivacy\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"senderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"passHashHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"sendToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sendValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"taken\",\"type\":\"bool\"}],\"internalType\":\"struct ethbox.BoxWithPrivacy[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoxesIncoming\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoxesIncomingWithPrivacy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoxesOutgoing\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBoxesOutgoingWithPrivacy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_boxIndex\",\"type\":\"uint256\"}],\"name\":\"getBoxWithPrivacy\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"senderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"passHashHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"sendToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sendValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"taken\",\"type\":\"bool\"}],\"internalType\":\"struct ethbox.BoxWithPrivacy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumBoxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumBoxesWithPrivacy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n};\r\n\r\nexport let TOKEN_DISPENSER = {\r\n    ADDRESSES: {\r\n        ETHEREUM_TESTNET: \"0x919fff8bD2888602FfaeE77E656F42E5741Cdb9A\",\r\n        BINANCE_TESTNET: \"0x0D4f413f643E23C5Cae7b3D5E9E80FE97e4fd392\",\r\n        MATIC_TESTNET: \"0x963e8acF143eD9638376923Ad14b28D39D8FbF2D\",\r\n        REEF_TESTNET: \"0xa48EdA4585b791550909a30d14fc4e375806B7ae\"\r\n    },\r\n    ABI: [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_token\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"giveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenC\",\"outputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n};\r\n\r\nexport let ERC20_ABI = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\r\n","export let chainTokenDictionary = {\r\n  // Ethereum mainnet\r\n  1: [\r\n    {\r\n      \"name\": \"Ethereum\",\r\n      \"symbol\": \"ETH\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/279/thumb/ethereum.png\",\r\n      \"address\": \"0x0000000000000000000000000000000000000000\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Ethbox Token\",\r\n      \"symbol\": \"ebox\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/14528/thumb/ethbox.PNG\",\r\n      \"address\": \"0x33840024177a7daca3468912363bed8b425015c5\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"USD Tether\",\r\n      \"symbol\": \"usdt\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/325/thumb/Tether-logo.png\",\r\n      \"address\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\r\n      \"decimals\": 6\r\n    },\r\n    {\r\n      \"name\": \"Uniswap\",\r\n      \"symbol\": \"uni\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12504/thumb/uniswap-uni.png\",\r\n      \"address\": \"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Chainlink\",\r\n      \"symbol\": \"link\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/877/thumb/chainlink-new-logo.png\",\r\n      \"address\": \"0x514910771af9ca656af840dff83e8264ecf986ca\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"USD Coin\",\r\n      \"symbol\": \"usdc\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/6319/thumb/USD_Coin_icon.png\",\r\n      \"address\": \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n      \"decimals\": 6\r\n    },\r\n    {\r\n      \"name\": \"Wrapped Bitcoin\",\r\n      \"symbol\": \"wbtc\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/7598/thumb/wrapped_bitcoin_wbtc.png\",\r\n      \"address\": \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Binance USD\",\r\n      \"symbol\": \"busd\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png\",\r\n      \"address\": \"0x4fabb145d64652a948d72533023f6e7a623c7c53\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"OKB\",\r\n      \"symbol\": \"okb\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/4463/thumb/okb_token.png\",\r\n      \"address\": \"0x75231f58b43240c9718dd58b4967c5114342a86c\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Crypto.com Coin\",\r\n      \"symbol\": \"cro\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/7310/thumb/cypto.png\",\r\n      \"address\": \"0xa0b73e1ff0b80914ab6fe0444e65848c4c34450b\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Aave\",\r\n      \"symbol\": \"aave\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png\",\r\n      \"address\": \"0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"cUSDC\",\r\n      \"symbol\": \"cusdc\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/9442/thumb/Compound_USDC.png\",\r\n      \"address\": \"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"cETH\",\r\n      \"symbol\": \"ceth\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/10643/thumb/ceth2.JPG\",\r\n      \"address\": \"0x4ddc2d193948926d02f9b1fe9e1daa0718270ed5\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"FTX Token\",\r\n      \"symbol\": \"ftt\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/9026/thumb/F.png\",\r\n      \"address\": \"0x50d1c9771902476076ecfc8b2a83ad6b9355a4c9\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Maker\",\r\n      \"symbol\": \"mkr\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/1364/thumb/Mark_Maker.png\",\r\n      \"address\": \"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Huobi Token\",\r\n      \"symbol\": \"ht\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/2822/thumb/huobi-token-logo.png\",\r\n      \"address\": \"0x6f259637dcd74c767781e37bc6133cd6a68aa161\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Dai\",\r\n      \"symbol\": \"dai\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/9956/thumb/dai-multi-collateral-mcd.png\",\r\n      \"address\": \"0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"cDAI\",\r\n      \"symbol\": \"cdai\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/9281/thumb/cDAI.png\",\r\n      \"address\": \"0x5d3a536e4d6dbd6114cc1ead35777bab948e3643\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Compound\",\r\n      \"symbol\": \"comp\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/10775/thumb/COMP.png\",\r\n      \"address\": \"0xc00e94cb662c3520282e6f5717214004a7f26888\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Chiliz\",\r\n      \"symbol\": \"chz\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/8834/thumb/Chiliz.png\",\r\n      \"address\": \"0x3506424f91fd33084466f402d5d97f05f8e3b4af\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Synthetix Network Token\",\r\n      \"symbol\": \"snx\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3406/thumb/SNX.png\",\r\n      \"address\": \"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Holo\",\r\n      \"symbol\": \"hot\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3348/thumb/Holologo_Profile.png\",\r\n      \"address\": \"0x6c6ee5e31d828de241282b9606c8e98ea48526e2\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Celsius Network\",\r\n      \"symbol\": \"cel\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3263/thumb/CEL_logo.png\",\r\n      \"address\": \"0xaaaebe6fe48e54f431b0c390cfaf0b017d09d42d\",\r\n      \"decimals\": 4\r\n    },\r\n    {\r\n      \"name\": \"LEO Token\",\r\n      \"symbol\": \"leo\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/8418/thumb/leo-token.png\",\r\n      \"address\": \"0x2af5d2ad76741191d15dfe7bf6ac92d4bd912ca3\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Enjin Coin\",\r\n      \"symbol\": \"enj\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/1102/thumb/enjin-coin-logo.png\",\r\n      \"address\": \"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"NEXO\",\r\n      \"symbol\": \"nexo\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3695/thumb/nexo.png\",\r\n      \"address\": \"0xb62132e35a6c13ee1ee0f84dc5d40bad8d815206\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Polygon\",\r\n      \"symbol\": \"matic\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/4713/thumb/matic___polygon.jpg\",\r\n      \"address\": \"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Sushi\",\r\n      \"symbol\": \"sushi\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png\",\r\n      \"address\": \"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"TerraUSD\",\r\n      \"symbol\": \"ust\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12681/thumb/UST.png\",\r\n      \"address\": \"0xa47c8bf37f92abed4a126bda807a7b7498661acd\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"The Graph\",\r\n      \"symbol\": \"grt\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13397/thumb/Graph_Token.png\",\r\n      \"address\": \"0xc944e90c64b2c07662a292be6244bdf05cda44a7\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Amp\",\r\n      \"symbol\": \"amp\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12409/thumb/amp-200x200.png\",\r\n      \"address\": \"0xff20817765cb7f73d4bde2e66e067e58d11095c2\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Fei Protocol\",\r\n      \"symbol\": \"fei\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/14570/thumb/ZqsF51Re_400x400.png\",\r\n      \"address\": \"0x956f47f50a910163d8bf957cf5846d573e7f87ca\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"yearn.finance\",\r\n      \"symbol\": \"yfi\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png\",\r\n      \"address\": \"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Decentraland\",\r\n      \"symbol\": \"mana\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/878/thumb/decentraland-mana.png\",\r\n      \"address\": \"0x0f5d2fb29fb7d3cfee444a200298f468908cc942\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Basic Attention Token\",\r\n      \"symbol\": \"bat\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/677/thumb/basic-attention-token.png\",\r\n      \"address\": \"0x0d8775f648430679a709e98d2b0cb6250d2887ef\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"UMA\",\r\n      \"symbol\": \"uma\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/10951/thumb/UMA.png\",\r\n      \"address\": \"0x04fa0d235c4abf4bcf4787af4cf447de572ef828\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Huobi BTC\",\r\n      \"symbol\": \"hbtc\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12407/thumb/Unknown-5.png\",\r\n      \"address\": \"0x0316eb71485b0ab14103307bf65a021042c6d380\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Liquity USD\",\r\n      \"symbol\": \"lusd\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/14666/thumb/Group_3.png\",\r\n      \"address\": \"0x5f98805a4e8be255a32880fdec7f6728c6568ba0\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Waves\",\r\n      \"symbol\": \"waves\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/425/thumb/waves.png\",\r\n      \"address\": \"0x1cf4592ebffd730c7dc92c1bdffdfc3b9efcf29a\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"0x\",\r\n      \"symbol\": \"zrx\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/863/thumb/0x.png\",\r\n      \"address\": \"0xe41d2489571d322189246dafa5ebde1f4699f498\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Reserve Rights Token\",\r\n      \"symbol\": \"rsr\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/8365/thumb/Reserve_Rights.png\",\r\n      \"address\": \"0x8762db106b2c2a0bccb3a80d1ed41273552616e8\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Bancor Network Token\",\r\n      \"symbol\": \"bnt\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/736/thumb/bancor.png\",\r\n      \"address\": \"0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Paxos Standard\",\r\n      \"symbol\": \"pax\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/6013/thumb/paxos_standard.png\",\r\n      \"address\": \"0x8e870d67f660d95d5be530380d0ec0bd388289e1\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SwissBorg\",\r\n      \"symbol\": \"chsb\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/2117/thumb/YJUrRy7r_400x400.png\",\r\n      \"address\": \"0xba9d4199fab4f26efe3551d490e3821486f135ba\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"OMG Network\",\r\n      \"symbol\": \"omg\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/776/thumb/OMG_Network.jpg\",\r\n      \"address\": \"0xd26114cd6ee289accf82350c8d8487fedb8a0c07\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Ankr\",\r\n      \"symbol\": \"ankr\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/4324/thumb/U85xTl2.png\",\r\n      \"address\": \"0x8290333cef9e6d528dd5618fb97a76f268f3edd4\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"KuCoin Token\",\r\n      \"symbol\": \"kcs\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/1047/thumb/sa9z79.png\",\r\n      \"address\": \"0xf34960d9d60be18cc1d5afc1a6f012a723a28811\",\r\n      \"decimals\": 6\r\n    },\r\n    {\r\n      \"name\": \"Fantom\",\r\n      \"symbol\": \"ftm\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/4001/thumb/Fantom.png\",\r\n      \"address\": \"0x4e15361fd6b4bb609fa63c81a2be19d873717870\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"HUSD\",\r\n      \"symbol\": \"husd\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/9567/thumb/HUSD.jpg\",\r\n      \"address\": \"0xdf574c24545e5ffecb9a659c229253d4111d87e1\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Bitmax Token\",\r\n      \"symbol\": \"btmx\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/5003/thumb/BTMX.jpg\",\r\n      \"address\": \"0xcca0c9c383076649604ee31b20248bc04fdf61ca\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Pundi X [OLD]\",\r\n      \"symbol\": \"npxs\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/2170/thumb/pundi-x.png\",\r\n      \"address\": \"0xa15c7ebe1f07caf6bff097d8a589fb8ac49ae5b3\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Curve DAO Token\",\r\n      \"symbol\": \"crv\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12124/thumb/Curve.png\",\r\n      \"address\": \"0xd533a949740bb3306d119cc777fa900ba034cd52\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Pundi X\",\r\n      \"symbol\": \"pundix\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/14571/thumb/vDyefsXq_400x400.jpg\",\r\n      \"address\": \"0x0fd10b9899882a6f2fcb5c371e17e70fdee00c38\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"xSUSHI\",\r\n      \"symbol\": \"xsushi\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13725/thumb/xsushi.png\",\r\n      \"address\": \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"1inch\",\r\n      \"symbol\": \"1inch\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png\",\r\n      \"address\": \"0x111111111117dc0aa78b770fa6a738034120c302\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"REN\",\r\n      \"symbol\": \"ren\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3139/thumb/REN.png\",\r\n      \"address\": \"0x408e41876cccdc0f92210600ef50372656052a38\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Livepeer\",\r\n      \"symbol\": \"lpt\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/7137/thumb/logo-circle-green.png\",\r\n      \"address\": \"0x58b6a8a3302369daec383334672404ee733ab239\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Dent\",\r\n      \"symbol\": \"dent\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/1152/thumb/gLCEA2G.png\",\r\n      \"address\": \"0x3597bfd533a99c9aa083587b074434e61eb0a258\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Voyager Token\",\r\n      \"symbol\": \"vgx\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/794/thumb/Voyager-vgx.png\",\r\n      \"address\": \"0x5af2be193a6abca9c8817001f45744777db30756\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Bounce [old]\",\r\n      \"symbol\": \"bot\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/11984/thumb/photo_2020-10-19_09.17.57.jpeg\",\r\n      \"address\": \"0x5beabaebb3146685dd74176f68a0721f91297d37\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Loopring\",\r\n      \"symbol\": \"lrc\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/913/thumb/LRC.png\",\r\n      \"address\": \"0xbbbbca6a901c926f240b89eacb641d8aec7aeafd\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Nexus Mutual\",\r\n      \"symbol\": \"nxm\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/11810/thumb/nexus-mutual.jpg\",\r\n      \"address\": \"0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"renBTC\",\r\n      \"symbol\": \"renbtc\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/11370/thumb/renBTC.png\",\r\n      \"address\": \"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Status\",\r\n      \"symbol\": \"SNT\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/779/thumb/status.png\",\r\n      \"address\": \"0x744d70fdbe2ba4cf95131626614a1763df805b9e\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Balancer\",\r\n      \"symbol\": \"bal\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/11683/thumb/Balancer.png\",\r\n      \"address\": \"0xba100000625a3754423978a60c9317c58a424e3d\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Lido Staked Ether\",\r\n      \"symbol\": \"steth\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13442/thumb/steth_logo.png\",\r\n      \"address\": \"0xae7ab96520de3a18e5e111b5eaab095312d7fe84\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Oxygen\",\r\n      \"symbol\": \"oxy\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13509/thumb/8DjBZ79V_400x400.jpg\",\r\n      \"address\": \"0x965697b4ef02f0de01384d0d4f9f782b1670c163\",\r\n      \"decimals\": 6\r\n    },\r\n    {\r\n      \"name\": \"cUSDT\",\r\n      \"symbol\": \"cusdt\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/11621/thumb/cUSDT.png\",\r\n      \"address\": \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Mirror Protocol\",\r\n      \"symbol\": \"mir\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13295/thumb/mirror_logo_transparent.png\",\r\n      \"address\": \"0x09a3ecafa817268f77be1283176b946c4ff2e608\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"GateToken\",\r\n      \"symbol\": \"gt\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/8183/thumb/gt.png\",\r\n      \"address\": \"0xe66747a101bff2dba3697199dcce5b743b454759\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Quant\",\r\n      \"symbol\": \"qnt\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3370/thumb/5ZOu7brX_400x400.jpg\",\r\n      \"address\": \"0x4a220e6096b25eadb88358cb44068a3248254675\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"ZKSwap\",\r\n      \"symbol\": \"zks\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13585/thumb/hfmvDpha_400x400.jpg\",\r\n      \"address\": \"0xe4815ae53b124e7263f08dcdbbb757d41ed658c6\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Tribe\",\r\n      \"symbol\": \"tribe\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/14575/thumb/tribe.PNG\",\r\n      \"address\": \"0xc7283b66eb1eb5fb86327f08e1b5816b0720212b\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Ocean Protocol\",\r\n      \"symbol\": \"ocean\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3687/thumb/ocean-protocol-logo.jpg\",\r\n      \"address\": \"0x967da4048cd07ab37855c090aaf366e4ce1b9f48\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Kyber Network Crystal Legacy\",\r\n      \"symbol\": \"kncl\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/947/thumb/logo-kncl.png\",\r\n      \"address\": \"0xdd974d5c2e2928dea5f71b9825b8b646686bd200\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Axie Infinity\",\r\n      \"symbol\": \"axs\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13029/thumb/axie_infinity_logo.png\",\r\n      \"address\": \"0xf5d669627376ebd411e34b98f19c868c8aba5ada\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Band Protocol\",\r\n      \"symbol\": \"band\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/9545/thumb/band-protocol.png\",\r\n      \"address\": \"0xba11d00c5f74255f56a5e366f4f77f5a186d7f55\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Reef Finance\",\r\n      \"symbol\": \"reef\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13504/thumb/Group_10572.png\",\r\n      \"address\": \"0xfe3e6a25e6b192a42a44ecddcd13796471735acf\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"cUNI\",\r\n      \"symbol\": \"cuni\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12696/thumb/compound-uni.png\",\r\n      \"address\": \"0x35a18000230da775cac24873d00ff85bccded550\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"NKN\",\r\n      \"symbol\": \"nkn\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3375/thumb/nkn.png\",\r\n      \"address\": \"0x5cf04716ba20127f1e2297addcf4b5035000c9eb\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Golem\",\r\n      \"symbol\": \"glm\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/542/thumb/Golem_Submark_Positive_RGB.png\",\r\n      \"address\": \"0x7dd9c5cba05e151c895fde1cf355c9a1d5da6429\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Tokamak Network\",\r\n      \"symbol\": \"ton\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12260/thumb/D919x5-s_400x400.png\",\r\n      \"address\": \"0x2be5e8c109e2197d077d13a82daead6a9b3433c5\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"StormX\",\r\n      \"symbol\": \"stmx\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/1369/thumb/StormX.png\",\r\n      \"address\": \"0xbe9375c6a420d2eeb258962efb95551a5b722803\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"DODO\",\r\n      \"symbol\": \"dodo\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12651/thumb/dodo_logo.png\",\r\n      \"address\": \"0x43dfc4159d86f3a37a5a4b3d4580b888ad7d4ddd\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Numeraire\",\r\n      \"symbol\": \"nmr\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/752/thumb/numeraire.png\",\r\n      \"address\": \"0x1776e1f26f98b1a5df9cd347953a26dd3cb46671\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Origin Protocol\",\r\n      \"symbol\": \"ogn\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3296/thumb/op.jpg\",\r\n      \"address\": \"0x8207c1ffc5b6804f6024322ccf34f29c3541ae26\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Ampleforth\",\r\n      \"symbol\": \"ampl\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/4708/thumb/Ampleforth.png\",\r\n      \"address\": \"0xd46ba6d942050d489dbd938a2c909a5d5039a161\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"Telcoin\",\r\n      \"symbol\": \"tel\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/1899/thumb/tel.png\",\r\n      \"address\": \"0x467bccd9d29f223bce8043b84e8c8b282827790f\",\r\n      \"decimals\": 2\r\n    },\r\n    {\r\n      \"name\": \"Alpha Finance\",\r\n      \"symbol\": \"alpha\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12738/thumb/AlphaToken_256x256.png\",\r\n      \"address\": \"0xa1faa113cbe53436df28ff0aee54275c13b40975\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SKALE\",\r\n      \"symbol\": \"skl\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/13245/thumb/SKALE_token_300x300.png\",\r\n      \"address\": \"0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Serum\",\r\n      \"symbol\": \"srm\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/11970/thumb/serum-logo.png\",\r\n      \"address\": \"0x476c5e26a75bd202a9683ffd34359c0cc15be0ff\",\r\n      \"decimals\": 6\r\n    },\r\n    {\r\n      \"name\": \"RedFOX Labs\",\r\n      \"symbol\": \"rfox\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12956/thumb/logo-200.png\",\r\n      \"address\": \"0xa1d6df714f91debf4e0802a542e13067f31b8262\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"TrueUSD\",\r\n      \"symbol\": \"tusd\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/3449/thumb/tusd.png\",\r\n      \"address\": \"0x0000000000085d4780b73119b644ae5ecd22b376\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Orbs\",\r\n      \"symbol\": \"orbs\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/4630/thumb/Orbs.jpg\",\r\n      \"address\": \"0xff56cc6b1e6ded347aa0b7676c85ab0b3d08b0fa\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"FUNToken\",\r\n      \"symbol\": \"fun\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/761/thumb/funfair.png\",\r\n      \"address\": \"0x419d0d8bdd9af5e606ae2232ed285aff190e711b\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Civic\",\r\n      \"symbol\": \"cvc\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/788/thumb/civic.png\",\r\n      \"address\": \"0x41e5560054824ea6b0732e656e3ad64e20e94e45\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Alien Worlds\",\r\n      \"symbol\": \"tlm\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/14676/thumb/kY-C4o7RThfWrDQsLCAG4q4clZhBDDfJQVhWUEKxXAzyQYMj4Jmq1zmFwpRqxhAJFPOa0AsW_PTSshoPuMnXNwq3rU7Imp15QimXTjlXMx0nC088mt1rIwRs75GnLLugWjSllxgzvQ9YrP4tBgclK4_rb17hjnusGj_c0u2fx0AvVokjSNB-v2poTj0xT9BZRCbzRE3-lF1.jpg\",\r\n      \"address\": \"0x888888848b652b3e3a0f34c96e00eec0f3a23f72\",\r\n      \"decimals\": 4\r\n    },\r\n    {\r\n      \"name\": \"SAND\",\r\n      \"symbol\": \"sand\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12129/thumb/sandbox_logo.jpg\",\r\n      \"address\": \"0x3845badade8e6dff049820680d1f14bd3903a5d0\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Wootrade Network\",\r\n      \"symbol\": \"woo\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/12921/thumb/w2UiemF__400x400.jpg\",\r\n      \"address\": \"0x4691937a7508860f876c9c0a2a617e7d9e945d4b\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Swipe\",\r\n      \"symbol\": \"sxp\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/9368/thumb/swipe.png\",\r\n      \"address\": \"0x8ce9137d39326ad0cd6491fb5cc0cba0e089b6a9\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"sETH\",\r\n      \"symbol\": \"seth\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/8843/thumb/sETH.png\",\r\n      \"address\": \"0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb\",\r\n      \"decimals\": 18\r\n    }\r\n  ],\r\n  // Ethereum testnet\r\n  4: [\r\n    {\r\n      name: \"Ethereum\",\r\n      symbol: \"ETH\",\r\n      thumb: \"https://assets.coingecko.com/coins/images/279/thumb/ethereum.png\",\r\n      address: \"0x0000000000000000000000000000000000000000\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"AAA\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0xB89f9673c46b126d7A0052D972cdB9C448f92D35\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"BBB\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0x0b91f9d9657e8edc725a519BC9e9fB3C785815a0\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"CCC\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0x4B73517Ae7Ac55B46b8B993A41842Af399fbfa25\",\r\n      decimals: 18,\r\n    }\r\n  ],\r\n  // Binance mainnet\r\n  56: [\r\n    {\r\n      \"name\": \"Binance Coin\",\r\n      \"symbol\": \"BNB\",\r\n      \"thumb\": \"https://v1exchange.pancakeswap.finance/images/coins/bnb.png\",\r\n      \"address\": \"0x0000000000000000000000000000000000000000\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Ethbox Token\",\r\n      \"symbol\": \"ebox\",\r\n      \"thumb\": \"https://assets.coingecko.com/coins/images/14528/thumb/ethbox.PNG\",\r\n      \"address\": \"0x33840024177a7daca3468912363bed8b425015c5\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Wrapped BNB\",\r\n      \"symbol\": \"WBNB\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c.png\",\r\n      \"address\": \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"BUSD Token\",\r\n      \"symbol\": \"BUSD\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56.png\",\r\n      \"address\": \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SafeMoon\",\r\n      \"symbol\": \"SAFEMOON\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3.png\",\r\n      \"address\": \"0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"Tether USD\",\r\n      \"symbol\": \"USDT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x55d398326f99059fF775485246999027B3197955.png\",\r\n      \"address\": \"0x55d398326f99059fF775485246999027B3197955\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"BELT Token\",\r\n      \"symbol\": \"BELT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f.png\",\r\n      \"address\": \"0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Ethereum Token\",\r\n      \"symbol\": \"ETH\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x2170Ed0880ac9A755fd29B2688956BD959F933F8.png\",\r\n      \"address\": \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Bunny Token\",\r\n      \"symbol\": \"BUNNY\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51.png\",\r\n      \"address\": \"0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"BTCB Token\",\r\n      \"symbol\": \"BTCB\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c.png\",\r\n      \"address\": \"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"USD Coin\",\r\n      \"symbol\": \"USDC\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d.png\",\r\n      \"address\": \"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Dai Token\",\r\n      \"symbol\": \"DAI\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3.png\",\r\n      \"address\": \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Polkadot Token\",\r\n      \"symbol\": \"DOT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402.png\",\r\n      \"address\": \"0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"AUTOv2\",\r\n      \"symbol\": \"AUTO\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xa184088a740c695E156F91f5cC086a06bb78b827.png\",\r\n      \"address\": \"0xa184088a740c695E156F91f5cC086a06bb78b827\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"VAI Stablecoin\",\r\n      \"symbol\": \"VAI\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7.png\",\r\n      \"address\": \"0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Uniswap\",\r\n      \"symbol\": \"UNI\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xBf5140A22578168FD562DCcF235E5D43A02ce9B1.png\",\r\n      \"address\": \"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Wrapped UST Token\",\r\n      \"symbol\": \"UST\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x23396cF899Ca06c4472205fC903bDB4de249D6fC.png\",\r\n      \"address\": \"0x23396cF899Ca06c4472205fC903bDB4de249D6fC\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Cardano Token\",\r\n      \"symbol\": \"ADA\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47.png\",\r\n      \"address\": \"0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Ellipsis\",\r\n      \"symbol\": \"EPS\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xA7f552078dcC247C2684336020c03648500C6d9F.png\",\r\n      \"address\": \"0xA7f552078dcC247C2684336020c03648500C6d9F\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"ChainLink Token\",\r\n      \"symbol\": \"LINK\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD.png\",\r\n      \"address\": \"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Helmet.insure Governance Token\",\r\n      \"symbol\": \"Helmet\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8.png\",\r\n      \"address\": \"0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"AlphaToken\",\r\n      \"symbol\": \"ALPHA\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xa1faa113cbE53436Df28FF0aEe54275c13B40975.png\",\r\n      \"address\": \"0xa1faa113cbE53436Df28FF0aEe54275c13B40975\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"XRP Token\",\r\n      \"symbol\": \"XRP\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE.png\",\r\n      \"address\": \"0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"ElonGate\",\r\n      \"symbol\": \"ElonGate\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x2A9718defF471f3Bb91FA0ECEAB14154F150a385.png\",\r\n      \"address\": \"0x2A9718defF471f3Bb91FA0ECEAB14154F150a385\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"Band Protocol Token\",\r\n      \"symbol\": \"BAND\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18.png\",\r\n      \"address\": \"0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Mobox\",\r\n      \"symbol\": \"MBOX\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377.png\",\r\n      \"address\": \"0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Binance Beacon ETH\",\r\n      \"symbol\": \"BETH\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B.png\",\r\n      \"address\": \"0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SafePal Token\",\r\n      \"symbol\": \"SFP\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb.png\",\r\n      \"address\": \"0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Venus\",\r\n      \"symbol\": \"XVS\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63.png\",\r\n      \"address\": \"0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Swipe\",\r\n      \"symbol\": \"SXP\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A.png\",\r\n      \"address\": \"0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Wault Finance\",\r\n      \"symbol\": \"WAULT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x6Ff2d9e5891a7a7c554b80e0D1B791483C78BcE9.png\",\r\n      \"address\": \"0x6Ff2d9e5891a7a7c554b80e0D1B791483C78BcE9\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"BGOV Token\",\r\n      \"symbol\": \"BGOV\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xf8E026dC4C0860771f691EcFFBbdfe2fa51c77CF.png\",\r\n      \"address\": \"0xf8E026dC4C0860771f691EcFFBbdfe2fa51c77CF\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"AlpacaToken\",\r\n      \"symbol\": \"ALPACA\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F.png\",\r\n      \"address\": \"0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Compound Coin\",\r\n      \"symbol\": \"COMP\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8.png\",\r\n      \"address\": \"0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Trust Wallet\",\r\n      \"symbol\": \"TWT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x4B0F1812e5Df2A09796481Ff14017e6005508003.png\",\r\n      \"address\": \"0x4B0F1812e5Df2A09796481Ff14017e6005508003\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Woonkly Power\",\r\n      \"symbol\": \"WOOP\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x8b303d5BbfBbf46F1a4d9741E491e06986894e18.png\",\r\n      \"address\": \"0x8b303d5BbfBbf46F1a4d9741E491e06986894e18\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SushiToken\",\r\n      \"symbol\": \"SUSHI\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x947950BcC74888a40Ffa2593C5798F11Fc9124C4.png\",\r\n      \"address\": \"0x947950BcC74888a40Ffa2593C5798F11Fc9124C4\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Nerve\",\r\n      \"symbol\": \"NRV\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096.png\",\r\n      \"address\": \"0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Badger Sett Badger\",\r\n      \"symbol\": \"bBADGER\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x1F7216fdB338247512Ec99715587bb97BBf96eae.png\",\r\n      \"address\": \"0x1F7216fdB338247512Ec99715587bb97BBf96eae\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SafeMars\",\r\n      \"symbol\": \"SAFEMARS\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x3aD9594151886Ce8538C1ff615EFa2385a8C3A88.png\",\r\n      \"address\": \"0x3aD9594151886Ce8538C1ff615EFa2385a8C3A88\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"DODO bird\",\r\n      \"symbol\": \"DODO\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2.png\",\r\n      \"address\": \"0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Litentry\",\r\n      \"symbol\": \"LIT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723.png\",\r\n      \"address\": \"0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Reef.finance\",\r\n      \"symbol\": \"REEF\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e.png\",\r\n      \"address\": \"0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"TokenPocket Token\",\r\n      \"symbol\": \"TPT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xECa41281c24451168a37211F0bc2b8645AF45092.png\",\r\n      \"address\": \"0xECa41281c24451168a37211F0bc2b8645AF45092\",\r\n      \"decimals\": 4\r\n    },\r\n    {\r\n      \"name\": \"Wrapped SOTE\",\r\n      \"symbol\": \"wSOTE\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x541E619858737031A1244A5d0Cd47E5ef480342c.png\",\r\n      \"address\": \"0x541E619858737031A1244A5d0Cd47E5ef480342c\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Bella Protocol\",\r\n      \"symbol\": \"BEL\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x8443f091997f06a61670B735ED92734F5628692F.png\",\r\n      \"address\": \"0x8443f091997f06a61670B735ED92734F5628692F\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"bDollar\",\r\n      \"symbol\": \"BDO\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454.png\",\r\n      \"address\": \"0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Goose Golden Egg\",\r\n      \"symbol\": \"EGG\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xF952Fc3ca7325Cc27D15885d37117676d25BfdA6.png\",\r\n      \"address\": \"0xF952Fc3ca7325Cc27D15885d37117676d25BfdA6\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Berry Tributes\",\r\n      \"symbol\": \"BRY\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830.png\",\r\n      \"address\": \"0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Zilliqa\",\r\n      \"symbol\": \"ZIL\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787.png\",\r\n      \"address\": \"0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787\",\r\n      \"decimals\": 12\r\n    },\r\n    {\r\n      \"name\": \"Fuel Token\",\r\n      \"symbol\": \"Fuel\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x2090c8295769791ab7A3CF1CC6e0AA19F35e441A.png\",\r\n      \"address\": \"0x2090c8295769791ab7A3CF1CC6e0AA19F35e441A\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Tokocrypto Token\",\r\n      \"symbol\": \"TKO\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x9f589e3eabe42ebC94A44727b3f3531C0c877809.png\",\r\n      \"address\": \"0x9f589e3eabe42ebC94A44727b3f3531C0c877809\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Switcheo Token\",\r\n      \"symbol\": \"SWTH\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C.png\",\r\n      \"address\": \"0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"BSCX\",\r\n      \"symbol\": \"BSCX\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587.png\",\r\n      \"address\": \"0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SafeGalaxy\",\r\n      \"symbol\": \"SAFEGALAXY\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x6b51231c43B1604815313801dB5E9E614914d6e4.png\",\r\n      \"address\": \"0x6b51231c43B1604815313801dB5E9E614914d6e4\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"StandardBTCHashrateToken\",\r\n      \"symbol\": \"BTCST\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x78650B139471520656b9E7aA7A5e9276814a38e9.png\",\r\n      \"address\": \"0x78650B139471520656b9E7aA7A5e9276814a38e9\",\r\n      \"decimals\": 17\r\n    },\r\n    {\r\n      \"name\": \"Injective Protocol\",\r\n      \"symbol\": \"INJ\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xa2B726B1145A4773F68593CF171187d8EBe4d495.png\",\r\n      \"address\": \"0xa2B726B1145A4773F68593CF171187d8EBe4d495\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Eleven.finance\",\r\n      \"symbol\": \"ELE\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xAcD7B3D9c10e97d0efA418903C0c7669E702E4C0.png\",\r\n      \"address\": \"0xAcD7B3D9c10e97d0efA418903C0c7669E702E4C0\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"IoTeX Network\",\r\n      \"symbol\": \"IOTX\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x9678E42ceBEb63F23197D726B29b1CB20d0064E5.png\",\r\n      \"address\": \"0x9678E42ceBEb63F23197D726B29b1CB20d0064E5\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Linear Token\",\r\n      \"symbol\": \"LINA\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x762539b45A1dCcE3D36d080F74d1AED37844b878.png\",\r\n      \"address\": \"0x762539b45A1dCcE3D36d080F74d1AED37844b878\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Nominex\",\r\n      \"symbol\": \"NMX\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xd32d01A43c869EdcD1117C640fBDcfCFD97d9d65.png\",\r\n      \"address\": \"0xd32d01A43c869EdcD1117C640fBDcfCFD97d9d65\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SafeStar\",\r\n      \"symbol\": \"SAFESTAR\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x3C00F8FCc8791fa78DAA4A480095Ec7D475781e2.png\",\r\n      \"address\": \"0x3C00F8FCc8791fa78DAA4A480095Ec7D475781e2\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"τBitcoin\",\r\n      \"symbol\": \"τBTC\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c.png\",\r\n      \"address\": \"0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"dego.finance\",\r\n      \"symbol\": \"DEGO\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC.png\",\r\n      \"address\": \"0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"OPEN Governance Token\",\r\n      \"symbol\": \"bOPEN\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xF35262a9d427F96d2437379eF090db986eaE5d42.png\",\r\n      \"address\": \"0xF35262a9d427F96d2437379eF090db986eaE5d42\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Cosmos Token\",\r\n      \"symbol\": \"ATOM\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x0Eb3a705fc54725037CC9e008bDede697f62F335.png\",\r\n      \"address\": \"0x0Eb3a705fc54725037CC9e008bDede697f62F335\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"FOX\",\r\n      \"symbol\": \"FOX\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xFAd8E46123D7b4e77496491769C167FF894d2ACB.png\",\r\n      \"address\": \"0xFAd8E46123D7b4e77496491769C167FF894d2ACB\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"beefy.finance\",\r\n      \"symbol\": \"BIFI\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xCa3F508B8e4Dd382eE878A314789373D80A5190A.png\",\r\n      \"address\": \"0xCa3F508B8e4Dd382eE878A314789373D80A5190A\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Badger Sett Digg\",\r\n      \"symbol\": \"bDIGG\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA.png\",\r\n      \"address\": \"0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"ALICE\",\r\n      \"symbol\": \"ALICE\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xAC51066d7bEC65Dc4589368da368b212745d63E8.png\",\r\n      \"address\": \"0xAC51066d7bEC65Dc4589368da368b212745d63E8\",\r\n      \"decimals\": 6\r\n    },\r\n    {\r\n      \"name\": \"Standard on xDai on BSC\",\r\n      \"symbol\": \"xMARK\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x26A5dFab467d4f58fB266648CAe769503CEC9580.png\",\r\n      \"address\": \"0x26A5dFab467d4f58fB266648CAe769503CEC9580\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"SWINGBY token\",\r\n      \"symbol\": \"SWINGBY\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739.png\",\r\n      \"address\": \"0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Nuls\",\r\n      \"symbol\": \"NULS\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B.png\",\r\n      \"address\": \"0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B\",\r\n      \"decimals\": 8\r\n    },\r\n    {\r\n      \"name\": \"Bogged Finance\",\r\n      \"symbol\": \"BOG\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xD7B729ef857Aa773f47D37088A1181bB3fbF0099.png\",\r\n      \"address\": \"0xD7B729ef857Aa773f47D37088A1181bB3fbF0099\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"RAMP DEFI\",\r\n      \"symbol\": \"RAMP\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x8519EA49c997f50cefFa444d240fB655e89248Aa.png\",\r\n      \"address\": \"0x8519EA49c997f50cefFa444d240fB655e89248Aa\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Frontier Token\",\r\n      \"symbol\": \"FRONT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b.png\",\r\n      \"address\": \"0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"IceToken\",\r\n      \"symbol\": \"ICE\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xf16e81dce15B08F326220742020379B855B87DF9.png\",\r\n      \"address\": \"0xf16e81dce15B08F326220742020379B855B87DF9\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Multiplier\",\r\n      \"symbol\": \"bMXX\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x4131b87F74415190425ccD873048C708F8005823.png\",\r\n      \"address\": \"0x4131b87F74415190425ccD873048C708F8005823\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Sheesha Finance\",\r\n      \"symbol\": \"SHEESHA\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x232FB065D9d24c34708eeDbF03724f2e95ABE768.png\",\r\n      \"address\": \"0x232FB065D9d24c34708eeDbF03724f2e95ABE768\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"UNFI\",\r\n      \"symbol\": \"UNFI\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B.png\",\r\n      \"address\": \"0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"The Force Token\",\r\n      \"symbol\": \"FOR\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x658A109C5900BC6d2357c87549B651670E5b0539.png\",\r\n      \"address\": \"0x658A109C5900BC6d2357c87549B651670E5b0539\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"BitcoinAsset\",\r\n      \"symbol\": \"BTA\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xAd9787017e82f6368BbE4893b475CaadA2258564.png\",\r\n      \"address\": \"0xAd9787017e82f6368BbE4893b475CaadA2258564\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Moon Token\",\r\n      \"symbol\": \"MOONTOKEN\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x81E4d494b85A24a58a6BA45c9B418b32a4E039de.png\",\r\n      \"address\": \"0x81E4d494b85A24a58a6BA45c9B418b32a4E039de\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"EOS Token\",\r\n      \"symbol\": \"EOS\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6.png\",\r\n      \"address\": \"0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Hakka Finance on xDai on BSC\",\r\n      \"symbol\": \"HAKKA\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC.png\",\r\n      \"address\": \"0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"yearn.finance\",\r\n      \"symbol\": \"YFI\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e.png\",\r\n      \"address\": \"0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"pTokens BTC\",\r\n      \"symbol\": \"pBTC\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C.png\",\r\n      \"address\": \"0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Cyclone Protocol\",\r\n      \"symbol\": \"CYC\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x810EE35443639348aDbbC467b33310d2AB43c168.png\",\r\n      \"address\": \"0x810EE35443639348aDbbC467b33310d2AB43c168\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"DFuture Token\",\r\n      \"symbol\": \"DFT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x42712dF5009c20fee340B245b510c0395896cF6e.png\",\r\n      \"address\": \"0x42712dF5009c20fee340B245b510c0395896cF6e\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"SafeBTC\",\r\n      \"symbol\": \"SAFEBTC\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x380624A4a7e69dB1cA07deEcF764025FC224D056.png\",\r\n      \"address\": \"0x380624A4a7e69dB1cA07deEcF764025FC224D056\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"AllianceBlock Token\",\r\n      \"symbol\": \"bALBT\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x72fAa679E1008Ad8382959FF48E392042A8b06f7.png\",\r\n      \"address\": \"0x72fAa679E1008Ad8382959FF48E392042A8b06f7\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"yieldwatch\",\r\n      \"symbol\": \"WATCH\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0.png\",\r\n      \"address\": \"0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Euler.Tools\",\r\n      \"symbol\": \"EULER\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x3920123482070C1a2dff73AaD695c60e7c6F6862.png\",\r\n      \"address\": \"0x3920123482070C1a2dff73AaD695c60e7c6F6862\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Zeppelin.dao\",\r\n      \"symbol\": \"ZEP\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x2E291e1c9f85a86d0C58Ae15621aaC005a8b2EAD.png\",\r\n      \"address\": \"0x2E291e1c9f85a86d0C58Ae15621aaC005a8b2EAD\",\r\n      \"decimals\": 9\r\n    },\r\n    {\r\n      \"name\": \"Tixl Token\",\r\n      \"symbol\": \"TXL\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5.png\",\r\n      \"address\": \"0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"LTO Network\",\r\n      \"symbol\": \"LTO\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd.png\",\r\n      \"address\": \"0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"UniTrade\",\r\n      \"symbol\": \"TRADE\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x7af173F350D916358AF3e218Bdf2178494Beb748.png\",\r\n      \"address\": \"0x7af173F350D916358AF3e218Bdf2178494Beb748\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"DeXe\",\r\n      \"symbol\": \"DEXE\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x039cB485212f996A9DBb85A9a75d898F94d38dA6.png\",\r\n      \"address\": \"0x039cB485212f996A9DBb85A9a75d898F94d38dA6\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"pTokens CGG\",\r\n      \"symbol\": \"CGG\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2.png\",\r\n      \"address\": \"0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"BoringDAO Token\",\r\n      \"symbol\": \"BOR\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x92D7756c60dcfD4c689290E8A9F4d263b3b32241.png\",\r\n      \"address\": \"0x92D7756c60dcfD4c689290E8A9F4d263b3b32241\",\r\n      \"decimals\": 18\r\n    },\r\n    {\r\n      \"name\": \"Exeedme\",\r\n      \"symbol\": \"XED\",\r\n      \"thumb\": \"https://pancakeswap.finance/images/tokens/0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f.png\",\r\n      \"address\": \"0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f\",\r\n      \"decimals\": 18\r\n    }\r\n  ],\r\n  // Binance testnet\r\n  97: [\r\n    {\r\n      name: \"Binance Coin\",\r\n      symbol: \"BNB\",\r\n      thumb: \"https://v1exchange.pancakeswap.finance/images/coins/bnb.png\",\r\n      address: \"0x0000000000000000000000000000000000000000\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"AAA\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0xbF2EBD4b347732F96C95f2D3116A34095baB3F90\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"BBB\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0x6b0b8E503696076AAB140C10c689f22DC15FF87D\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"CCC\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0x69f90E517C21E3117e1535fA2092dC1f3633F560\",\r\n      decimals: 18,\r\n    }\r\n  ],\r\n  // Matic mainnet\r\n  137: [\r\n    {\r\n      name: \"Polygon\",\r\n      symbol: \"MATIC\",\r\n      thumb:\r\n        \"https://assets.coingecko.com/coins/images/4713/thumb/matic___polygon.jpg\",\r\n      address: \"0x0000000000000000000000000000000000000000\",\r\n      decimals: \"18\",\r\n    }\r\n  ],\r\n  // Matic testnet\r\n  80001: [\r\n    {\r\n      name: \"Polygon\",\r\n      symbol: \"MATIC\",\r\n      thumb: \"https://assets.coingecko.com/coins/images/4713/thumb/matic___polygon.jpg\",\r\n      address: \"0x0000000000000000000000000000000000000000\",\r\n      decimals: \"18\",\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"AAA\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0xE38A5C3da5FFf6E2865BF64cF6674265cFfd9e7f\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"BBB\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0xb40d2f3B8e2465DF9132ae2DF43E80Dbb67d3369\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"CCC\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0x7190Bb56c586Bf9Dd8013C450af8C51af5EaE156\",\r\n      decimals: 18,\r\n    }\r\n  ],\r\n  // Reef mainnet\r\n  \"reef-mainnet\": [\r\n    {\r\n      name: \"Reef\",\r\n      symbol: \"REEF\",\r\n      thumb: \"https://assets.coingecko.com/coins/images/13504/small/Group_10572.png?1610534130\",\r\n      address: \"0x0000000000000000000000000000000000000000\",\r\n      decimals: 18,\r\n    }\r\n  ],\r\n  // Reef testnet\r\n  \"reef-testnet\": [\r\n    {\r\n      name: \"Reef\",\r\n      symbol: \"REEF\",\r\n      thumb: \"https://assets.coingecko.com/coins/images/13504/small/Group_10572.png?1610534130\",\r\n      address: \"0x0000000000000000000000000000000000000000\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"AAA\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0xd8ee8B891B2800ea03D4AbBa2033b0AC80d85f79\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"BBB\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0xe14b1a577110d94fDe19CFd01659E8041da71d83\",\r\n      decimals: 18,\r\n    },\r\n    {\r\n      name: \"Test Token\",\r\n      symbol: \"CCC\",\r\n      thumb: \"assets/img/crash-test.png\",\r\n      address: \"0xCcCb0F09A72bbf7f8593D5e74d0aD7f3D687aD98\",\r\n      decimals: 18,\r\n    }\r\n  ]\r\n};\r\n","export let ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\r\nexport let ZERO = '0';\r\nexport let MAX_VALUE = '115792089237316195423570985008687907853269984665640564039457584007913129639935';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BoxesReceivedListComponent } from './components/boxes-received-list/boxes-received-list.component';\r\nimport { BoxesSentListComponent } from './components/boxes-sent-list/boxes-sent-list.component';\r\nimport { GovernanceComponent } from './components/governance/governance.component';\r\nimport { OverTheCounterComponent } from './components/over-the-counter/over-the-counter.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { SendComponent } from './components/send/send.component';\r\nimport { StakingComponent } from './components/staking/staking.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: SendComponent },\r\n  { path: 'send', component: SendComponent },\r\n  { path: 'over-the-counter', component: OverTheCounterComponent },\r\n  { path: 'boxes/received', component: BoxesReceivedListComponent },\r\n  { path: 'boxes/sent', component: BoxesSentListComponent },\r\n  { path: 'staking', component: StakingComponent },\r\n  { path: 'governance', component: GovernanceComponent },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { AfterViewInit, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ContractService } from './services/contract.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n\r\n  title = 'ethbox-dapp';\r\n\r\n  constructor(\r\n    public contractServ: ContractService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    let menuTrigger: any = document.querySelector(\"#menu-trigger\");\r\n    let mainContent = document.querySelector(\"#main-content\");\r\n    menuTrigger.addEventListener(\"click\", () => {\r\n  \r\n      function uncheckTrigger() {\r\n        menuTrigger.checked = false;\r\n        mainContent.removeEventListener(\"click\", uncheckTrigger);\r\n      }\r\n      \r\n      if (menuTrigger.checked) {\r\n        mainContent.addEventListener(\"click\", uncheckTrigger);\r\n      } else {\r\n        mainContent.removeEventListener(\"click\", uncheckTrigger);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<app-loading-indicator></app-loading-indicator>\r\n\r\n<input hidden #triggerMenu id=\"menu-trigger\" type=\"checkbox\">\r\n<label for=\"menu-trigger\"></label>\r\n\r\n<div id=\"main-content-wrapper\">\r\n  <div id=\"main-content-shadow\"></div>\r\n  <div id=\"main-content\">\r\n\r\n    <app-top-bar></app-top-bar>\r\n    \r\n    <router-outlet></router-outlet>\r\n    \r\n    <app-bottom-bar></app-bottom-bar>\r\n    \r\n  </div>\r\n</div>\r\n\r\n<div id=\"main-slide-menu\">\r\n  <a\r\n    href=\"/\"\r\n    class=\"p-3 d-block text-uppercase text-reset text-decoration-none\"\r\n  >\r\n    <i class=\"bi bi-box-arrow-left me-1\"></i>\r\n    Main Site\r\n  </a>\r\n  <a\r\n    href=\"#\"\r\n    routerLink=\"/\"\r\n    routerLinkActive=\"active\"\r\n    [routerLinkActiveOptions]=\"{ exact: true }\"\r\n    (mouseenter)=\"router.navigate([''])\"\r\n    (click)=\"triggerMenu.checked = false;\"\r\n    class=\"m-3 d-block text-uppercase text-reset text-decoration-none\"\r\n  >\r\n    <i class=\"bi bi-box me-1\"></i>\r\n    Send\r\n  </a>\r\n  <a\r\n    href=\"#\"\r\n    routerLink=\"/over-the-counter\"\r\n    routerLinkActive=\"active\"\r\n    (mouseenter)=\"router.navigate(['over-the-counter'])\"\r\n    (click)=\"triggerMenu.checked = false;\"\r\n    class=\"m-3 d-block text-uppercase text-reset text-decoration-none\"\r\n  >\r\n    <i class=\"bi bi-shuffle me-1\"></i>\r\n    OTC\r\n  </a>\r\n  <a\r\n    href=\"#\"\r\n    routerLink=\"/boxes/received\"\r\n    routerLinkActive=\"active\"\r\n    (mouseenter)=\"router.navigate(['boxes', 'received'])\"\r\n    (click)=\"triggerMenu.checked = false;\"\r\n    class=\"m-3 d-block text-uppercase text-reset text-decoration-none\"\r\n  >\r\n    <i class=\"bi bi-list-task me-1\"></i>\r\n    Incoming\r\n  </a>\r\n  <a\r\n    href=\"#\"\r\n    routerLink=\"/boxes/sent\"\r\n    routerLinkActive=\"active\"\r\n    (mouseenter)=\"router.navigate(['boxes', 'sent'])\"\r\n    (click)=\"triggerMenu.checked = false;\"\r\n    class=\"m-3 d-block text-uppercase text-reset text-decoration-none\"\r\n  >\r\n    <i class=\"bi bi-clock-history me-1\"></i>\r\n    Outgoing\r\n  </a>\r\n  <a\r\n    href=\"#\"\r\n    routerLink=\"/staking\"\r\n    routerLinkActive=\"active\"\r\n    (mouseenter)=\"router.navigate(['staking'])\"\r\n    (click)=\"triggerMenu.checked = false;\"\r\n    class=\"m-3 d-block text-uppercase text-reset text-decoration-none\"\r\n  >\r\n    <i class=\"bi bi-cash-stack me-1\"></i>\r\n    Staking\r\n  </a>\r\n  <a\r\n    href=\"#\"\r\n    routerLink=\"/governance\"\r\n    routerLinkActive=\"active\"\r\n    (mouseenter)=\"router.navigate(['governance'])\"\r\n    (click)=\"triggerMenu.checked = false;\"\r\n    class=\"m-3 d-block text-uppercase text-reset text-decoration-none\"\r\n  >\r\n    <i class=\"bi bi-people me-1\"></i>\r\n    Governance\r\n  </a>\r\n\r\n  <div *ngIf=\"(contractServ.isAppReady$ | async) && (contractServ.isEthereumTestnet() || contractServ.isBinanceTestnet() || contractServ.isMaticTestnet() || contractServ.isReefTestnet())\" class=\"p-3\">\r\n    <div class=\"text-uppercase my-3 fst-italic\">\r\n      <div class=\"spinner-grow spinner-grow-sm text-danger me-1\"></div>\r\n      Get test tokens\r\n      <i class=\"bi bi-arrow-down\"></i>\r\n    </div>\r\n    <div class=\"d-grid gap-3 p-3\" style=\"justify-content: start;\">\r\n      <button\r\n        (click)=\"contractServ.give100TestToken(0)\"\r\n        class=\"btn btn-outline-eboxprimary rounded-alot\"\r\n      >\r\n        <span class=\"fs-5 me-2 text-warning\">100</span>\r\n        Token AAA\r\n      </button>\r\n      <button\r\n        (click)=\"contractServ.give100TestToken(1)\"\r\n        class=\"btn btn-outline-eboxprimary rounded-alot\"\r\n      >\r\n        <span class=\"fs-5 me-2 text-warning\">100</span>\r\n        Token BBB\r\n      </button>\r\n      <button\r\n        (click)=\"contractServ.give100TestToken(2)\"\r\n        class=\"btn btn-outline-eboxprimary rounded-alot\"\r\n      >\r\n        <span class=\"fs-5 me-2 text-warning\">100</span>\r\n        Token CCC\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<app-view-console></app-view-console>\r\n<app-toaster-notifier></app-toaster-notifier>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TopBarComponent } from './components/top-bar/top-bar.component';\r\nimport { BottomBarComponent } from './components/bottom-bar/bottom-bar.component';\r\nimport { SendComponent } from './components/send/send.component';\r\nimport { BoxesReceivedListComponent } from './components/boxes-received-list/boxes-received-list.component';\r\nimport { OverTheCounterComponent } from './components/over-the-counter/over-the-counter.component';\r\nimport { BoxesSentListComponent } from './components/boxes-sent-list/boxes-sent-list.component';\r\nimport { StakingComponent } from './components/staking/staking.component';\r\nimport { PasswordStrengthVisualizerComponent } from './components/password-strength-visualizer/password-strength-visualizer.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { BoxReceivedComponent } from './components/boxes-received-list/box-received/box-received.component';\r\nimport { BgChangerComponent } from './components/bg-changer/bg-changer.component';\r\nimport { BoxSentComponent } from './components/boxes-sent-list/box-sent/box-sent.component';\r\nimport { TokenSelectorComponent } from './components/token-selector/token-selector.component';\r\nimport { ComingSoonComponent } from './components/coming-soon/coming-soon.component';\r\nimport { LoadingIndicatorComponent } from './components/loading-indicator/loading-indicator.component';\r\nimport { AddressBookComponent } from './components/address-book/address-book.component';\r\nimport { ToasterNotifierComponent } from './components/toaster-notifier/toaster-notifier.component';\r\nimport { GovernanceComponent } from './components/governance/governance.component';\r\nimport { GovernanceProposalComponent } from './components/governance/governance-proposal/governance-proposal.component';\r\nimport { ToFixedPipe } from './pipes/to-fixed.pipe';\r\nimport { GovernanceAreaComponent } from './components/governance/governance-area/governance-area.component';\r\nimport { ViewConsoleComponent } from './components/view-console/view-console.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    BottomBarComponent,\r\n    SendComponent,\r\n    BoxesReceivedListComponent,\r\n    OverTheCounterComponent,\r\n    BoxesSentListComponent,\r\n    StakingComponent,\r\n    PasswordStrengthVisualizerComponent,\r\n    PageNotFoundComponent,\r\n    BoxReceivedComponent,\r\n    BgChangerComponent,\r\n    BoxSentComponent,\r\n    TokenSelectorComponent,\r\n    ComingSoonComponent,\r\n    ToasterNotifierComponent,\r\n    LoadingIndicatorComponent,\r\n    AddressBookComponent,\r\n    GovernanceComponent,\r\n    GovernanceProposalComponent,\r\n    ToFixedPipe,\r\n    GovernanceAreaComponent,\r\n    ViewConsoleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { AddressBookService } from 'src/app/services/address-book.service';\r\nimport { ContractService } from 'src/app/services/contract.service';\r\nimport { LoadingIndicatorService } from 'src/app/services/loading-indicator.service';\r\n\r\n@Component({\r\n    selector: 'app-address-book',\r\n    templateUrl: './address-book.component.html',\r\n    styleUrls: ['./address-book.component.css']\r\n})\r\nexport class AddressBookComponent implements OnInit {\r\n\r\n    @Output() onAddressSelected = new EventEmitter();\r\n\r\n    randomId = `address-book_${Math.random().toString(36).substring(2)}`;\r\n    name = '';\r\n    address = '';\r\n    search = '';\r\n    addresses;\r\n    filteredAddresses;\r\n\r\n    constructor(\r\n        public loadingIndicatorServ: LoadingIndicatorService,\r\n        public contractServ: ContractService,\r\n        private addressBookServ: AddressBookService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.addresses = this.addressBookServ.getAddressesFromLS();\r\n        this.filteredAddresses = this.addresses;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n        // Moves the modal to the body (backdrop hackfix)\r\n        let modal = document.getElementById(this.randomId);\r\n        document.body.appendChild(modal);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        // Removes the modal from the body (backdrop hackfix)\r\n        document.getElementById(this.randomId).remove();\r\n    }\r\n\r\n    onAddClicked() {\r\n\r\n        let addresses = this.addressBookServ.addAddress(this.name, this.address);\r\n        if (addresses) {\r\n            this.addresses = addresses;\r\n            this.name = null;\r\n            this.address = null;\r\n            this.filterAddresses();\r\n        }\r\n    }\r\n\r\n    onDelClicked(address) {\r\n\r\n        let addresses = this.addressBookServ.removeAddress(address);\r\n        if (addresses) {\r\n            this.addresses = addresses;\r\n            this.filterAddresses();\r\n        }\r\n    }\r\n\r\n    filterAddresses() {\r\n\r\n        this.filteredAddresses = this.addresses\r\n            .filter(addr => {\r\n\r\n                let lcSearch = this.search.trim().toLowerCase();\r\n                let lcLabel = addr.label.toLowerCase();\r\n                let lcAddress = addr.address.toLowerCase();\r\n                return !this.search || lcLabel.includes(lcSearch) || lcAddress.includes(lcSearch);\r\n            });\r\n    }\r\n\r\n}\r\n","<div class=\"d-flex flex-column align-items-center\">\r\n  <button\r\n    data-bs-toggle=\"modal\"\r\n    [attr.data-bs-target]=\"'#' + randomId\"\r\n    class=\"btn text-white\"\r\n    [disabled]=\"!(contractServ.isAppReady$ | async) || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\"\r\n  >\r\n    <i class=\"bi bi-bookmarks-fill\"></i>\r\n  </button>\r\n</div>\r\n\r\n<div [id]=\"randomId\" class=\"modal\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n    <div class=\"modal-content rounded-alot\" style=\"height: 95vh\">\r\n      <div class=\"modal-header\">\r\n        <div class=\"flex-grow-1\">\r\n          <div class=\"d-flex justify-content-between mb-3\">\r\n            <div>\r\n              <h5 class=\"modal-title\">Address Book</h5>\r\n              <small>There are {{ addresses.length }} addresses saved.</small>\r\n            </div>\r\n            <button class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n          </div>\r\n          <div class=\"row g-3 mb-3\">\r\n            <div class=\"col-12 col-md\">\r\n              <input\r\n                #nameInput\r\n                (input)=\"name = nameInput.value\"\r\n                [value]=\"name\"\r\n                type=\"text\"\r\n                class=\"form-control rounded-alot\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 col-md\">\r\n              <input\r\n                #addressInput\r\n                (input)=\"address = addressInput.value\"\r\n                [value]=\"address\"\r\n                type=\"text\"\r\n                class=\"form-control rounded-alot\"\r\n                placeholder=\"Address\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 col-md-auto\">\r\n              <button\r\n                (click)=\"onAddClicked()\"\r\n                class=\"btn btn-outline-eboxprimary rounded-alot w-100\"\r\n              >\r\n                Add\r\n                <i class=\"bi bi-bookmark-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <input\r\n            #searchInput\r\n            (input)=\"search = searchInput.value; filterAddresses()\"\r\n            type=\"text\"\r\n            class=\"form-control rounded-alot\"\r\n            placeholder=\"Search in the list\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div\r\n          *ngFor=\"let addr of filteredAddresses\"\r\n          class=\"align-items-center border d-flex mb-3 p-3 rounded-alot\"\r\n        >\r\n          <!-- address item -->\r\n          <div class=\"d-flex flex-column flex-md-row align-items-center col-12\">\r\n            <a\r\n              href=\"#\"\r\n              data-bs-dismiss=\"modal\"\r\n              (click)=\"onAddressSelected.emit(addr)\"\r\n              class=\"mb-3 mb-md-0 me-auto text-decoration-none text-reset text-truncate col-12 col-sm-9\"\r\n            >\r\n              <span class=\"fs-5\">{{ addr.label }}</span>\r\n              <br />\r\n              <small>{{ addr.address }}</small>\r\n            </a>\r\n            <button\r\n              (click)=\"onDelClicked(addr.address)\"\r\n              class=\"btn btn-outline-eboxprimary rounded-alot col-12 col-md-auto\"\r\n            >\r\n              Del\r\n              <i class=\"bi bi-bookmark-x\"></i>\r\n            </button>\r\n          </div>\r\n          <!-- end of address item -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnDestroy, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-bg-changer',\r\n    templateUrl: './bg-changer.component.html',\r\n    styleUrls: ['./bg-changer.component.css']\r\n})\r\nexport class BgChangerComponent {\r\n\r\n    @Input() imgSrc;\r\n\r\n    constructor() { }\r\n\r\n}\r\n","<div id=\"bg-changer\" class=\"bg-cover parallax\" [style.background-image]=\"'url(' + imgSrc + ')'\"></div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-bottom-bar',\r\n    templateUrl: './bottom-bar.component.html',\r\n    styleUrls: ['./bottom-bar.component.css']\r\n})\r\nexport class BottomBarComponent {\r\n\r\n    darkMode = false;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        let _darkMode = JSON.parse(localStorage.getItem(\"darkMode\"));\r\n        if (_darkMode) {\r\n            this.darkMode = _darkMode;\r\n        }\r\n        this.setTheme();\r\n    }\r\n\r\n    toggleDarkMode() {\r\n        this.darkMode = !this.darkMode;\r\n        localStorage.setItem(\"darkMode\", JSON.stringify(this.darkMode));\r\n        this.setTheme();\r\n    }\r\n\r\n    setTheme() {\r\n        let html = document.querySelector(\"html\");\r\n        if (this.darkMode) {\r\n            html.setAttribute(\"theme\", \"dark-mode\");\r\n        } else {\r\n            html.setAttribute(\"theme\", \"light-mode\");\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"bg-lightalpha row row-cols-1 row-cols-md-2\">\r\n    <div\r\n      class=\"align-items-center bar-height col d-flex justify-content-center justify-content-md-start\"\r\n    >\r\n      <a\r\n        href=\"https://app.uniswap.org/#/swap?inputCurrency=ETH&outputCurrency=0x33840024177a7daca3468912363bed8b425015c5&use=V2\"\r\n        target=\"_blank\"\r\n        class=\"scale-on-hover btn fs-5\"\r\n      >\r\n        <img class=\"taptarget-height\" src=\"assets/img/uniswap.png\"/>\r\n      </a>\r\n      <a\r\n        href=\"https://exchange.pancakeswap.finance/#/swap?inputCurrency=BNB&outputCurrency=0x33840024177a7daca3468912363bed8b425015c5\"\r\n        target=\"_blank\"\r\n        class=\"scale-on-hover btn fs-5\"\r\n      >\r\n        <img class=\"taptarget-height\" src=\"assets/img/pancakeswap.png\"/>\r\n      </a>\r\n      <a class=\"btn\">\r\n        <img *ngIf=\"!darkMode\" (click)=\"toggleDarkMode()\" style=\"height: 24px\" src=\"assets/img/light-mode.png\"/>\r\n        <img *ngIf=\"darkMode\" (click)=\"toggleDarkMode()\" style=\"height: 24px\" src=\"assets/img/dark-mode.png\"/>\r\n      </a>\r\n    </div>\r\n    <div\r\n      class=\"align-items-center bar-height col d-flex justify-content-center justify-content-md-end\"\r\n    >\r\n      <a\r\n        href=\"https://www.github.com/ethbox-official\"\r\n        target=\"_blank\"\r\n        class=\"scale-on-hover btn fs-3\"\r\n      >\r\n        <i class=\"bi bi-github\"></i>\r\n      </a>\r\n      <a\r\n        href=\"https://www.t.me/ethbox_official\"\r\n        target=\"_blank\"\r\n        class=\"scale-on-hover btn fs-3 text-info\"\r\n      >\r\n        <i class=\"bi bi-telegram\"></i>\r\n      </a>\r\n      <a\r\n        href=\"https://www.twitter.com/ethbox_official\"\r\n        target=\"_blank\"\r\n        class=\"scale-on-hover btn fs-3 text-info\"\r\n      >\r\n        <i class=\"bi bi-twitter\"></i>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Box } from 'src/app/interfaces';\r\nimport { LoadingIndicatorService } from 'src/app/services/loading-indicator.service';\r\nimport { ContractService } from '../../../services/contract.service';\r\n\r\n@Component({\r\n    selector: 'app-box-received',\r\n    templateUrl: './box-received.component.html',\r\n    styleUrls: ['./box-received.component.css']\r\n})\r\nexport class BoxReceivedComponent implements OnInit {\r\n\r\n    @Input() box: Box;\r\n\r\n    password = '';\r\n    isBoxUnlocked;\r\n    isExpanded = false;\r\n    sendTokenBalance;\r\n    requestTokenBalance;\r\n    message = \"Loading...\";\r\n\r\n    constructor(\r\n        public contractServ: ContractService,\r\n        public loadingIndicatorServ: LoadingIndicatorService) { }\r\n\r\n    ngOnInit() {\r\n        this.isBoxUnlocked = this.contractServ.isValidPassword(this.box, this.password);\r\n    }\r\n\r\n    async onBoxToggle() {\r\n\r\n        this.isExpanded = !this.isExpanded;\r\n\r\n        // Only updates balances when expanded\r\n        if (this.isExpanded) {\r\n            this.sendTokenBalance = await this.contractServ\r\n                .getTokenBalance(this.box.sendTokenInfo.address);\r\n\r\n            if (this.box.requestToken) {\r\n                this.requestTokenBalance = await this.contractServ\r\n                    .getTokenBalance(this.box.requestTokenInfo.address);\r\n            }\r\n            \r\n            // Get the message from Pipedream\r\n            let { message } = await this.contractServ.receiveBoxFromPipedream(this.box);\r\n            this.message = message || \"-\";\r\n            \r\n            console.log(\"Opened box\", this.box);\r\n        }\r\n    }\r\n\r\n    onPasswordInput(value) {\r\n\r\n        this.password = value;\r\n        this.isBoxUnlocked = this.contractServ.isValidPassword(this.box, this.password);\r\n    }\r\n\r\n}\r\n","<div class=\"box-wrapper position-relative\">\r\n  <!-- animated rainbow behind -->\r\n  <div *ngIf=\"!box.taken && isBoxUnlocked\" class=\"highlight\"></div>\r\n  <div\r\n    class=\"bg-lightalpha rounded-alot\"\r\n    [class.shadow]=\"!box.taken\"\r\n    [class.text-muted]=\"box.taken\"\r\n    [class.bg-disabled]=\"box.taken\"\r\n  >\r\n    <div class=\"d-flex flex-column flex-md-row align-items-center justify-content-center justify-content-md-between gap-3 p-3 position-relative\">\r\n      <div class=\"col-md-4 d-flex flex-column flex-md-row align-items-center\">\r\n        <img\r\n          *ngIf=\"!box.taken && box.hasPrivacy\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/box-privacy-close.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"box.taken && box.hasPrivacy\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/box-privacy-open.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"!box.taken && !box.hasPrivacy && box.requestValue === '0'\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/box-close.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"box.taken && !box.hasPrivacy && box.requestValue === '0'\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/box-open.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"!box.taken && box.requestValue !== '0'\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/boxes-exchange-close.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"box.taken && box.requestValue !== '0'\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/boxes-exchange-open.png\"\r\n        />\r\n        <div class=\"ms-md-3 text-center text-md-start\">\r\n          <div class=\"fs-4\">{{ box.requestValue !== \"0\" ? \"OTC Trade\" : \"One-way\" }} {{ box.hasPrivacy ? \"Privacy\" : \"\" }}</div>\r\n          <small class=\"text-muted\">\r\n            <a\r\n              class=\"stretched-link text-reset text-decoration-none\"\r\n              data-bs-toggle=\"collapse\"\r\n              [href]=\"'#box-collapse_' + box.timestamp\"\r\n              (click)=\"onBoxToggle()\"\r\n            >\r\n              <i class=\"bi {{ isExpanded ? 'bi-arrows-collapse' : 'bi-arrows-expand' }}\"></i>\r\n              {{ isExpanded ? 'Collapse' : 'Expand' }}\r\n            </a>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"fs-5 font-monospace flex-grow-1\">\r\n        <div class=\"d-flex align-items-center justify-content-end gap-2\">\r\n          <span>\r\n            {{ box.sendDecimalValue.length < 7 ? box.sendDecimalValue : box.sendDecimalValue.slice(0, 6) + '...' }}</span>\r\n          <span class=\"fw-bold\">\r\n            {{ box.sendTokenInfo.symbol }}\r\n          </span>\r\n          <img\r\n            [src]=\"box.sendTokenInfo.thumb\"\r\n            style=\"width: 1.5rem; height: 1.5rem\">\r\n        </div>\r\n        <div *ngIf=\"box.requestValue !== '0'\" class=\"d-flex align-items-center justify-content-end gap-2\">\r\n          <span>\r\n            {{ box.requestDecimalValue.length < 7 ? box.requestDecimalValue : box.requestDecimalValue.slice(0, 6) + '...' }}</span>\r\n          <span class=\"fw-bold\">\r\n            {{ box.requestTokenInfo.symbol }}\r\n          </span>\r\n          <img\r\n            [src]=\"box.requestTokenInfo.thumb\"\r\n            style=\"width: 1.5rem; height: 1.5rem\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4 text-center text-md-end\">\r\n        <div \r\n          *ngIf=\"!box.hasPrivacy\"\r\n          class=\"fs-4\"\r\n        >\r\n          <ng-container *ngIf=\"box.addressBookName; else address\">\r\n            {{ box.addressBookName.slice(0, 17) }}\r\n          </ng-container>\r\n          <ng-template #address>\r\n            {{ box.sender.slice(0, 8) }}...{{ box.sender.slice(-6) }}\r\n          </ng-template>\r\n        </div>\r\n        <small class=\"text-muted\">{{ box.readableTimestamp }}</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"collapse\" [id]=\"'box-collapse_' + box.timestamp\">\r\n      <div class=\"p-3\">\r\n\r\n        <div class=\"d-grid gap-2 mb-3\">\r\n          <!-- mini header -->\r\n          <div class=\"text-muted d-flex align-items-end justify-content-between px-3\">\r\n            <small>\r\n              From:\r\n              <span *ngIf=\"box.hasPrivacy\">Private</span>\r\n              <a\r\n                *ngIf=\"!box.hasPrivacy\"\r\n                [href]=\"\r\n                  contractServ.networkInfo(\r\n                    contractServ.connection.chainId$.getValue()\r\n                  ).accountScannerUrl(\r\n                    box.sender\r\n                  )\r\n                \"\r\n                target=\"_blank\"\r\n                class=\"text-reset\"\r\n              >\r\n                <span *ngIf=\"box.addressBookName; else address\">\r\n                  {{ box.addressBookName.slice(0, 11) }}\r\n                </span>\r\n                <ng-template #address>\r\n                  {{ box.sender.slice(0, 8) }}...{{ box.sender.slice(-6) }}\r\n                </ng-template>\r\n              </a>\r\n            </small>\r\n            <small class=\"text-end\">\r\n              Your balance(s)\r\n            </small>\r\n          </div>\r\n          <!-- end of mini header -->\r\n  \r\n          <!-- sent amount -->\r\n          <div\r\n            class=\"rounded-alot position-relative p-3\"\r\n            [class.text-white]=\"!box.taken\"\r\n            [class.bg-eboxdark]=\"!box.taken\"\r\n            [class.bg-completed]=\"box.taken\"\r\n            [class.text-muted]=\"box.taken\"\r\n          >\r\n            <div class=\"lead\">\r\n              Value sent\r\n            </div>\r\n            <div class=\"fs-4\">\r\n              {{ box.sendDecimalValue }}\r\n            </div>\r\n            <div class=\"token-info-wrapper rounded-alot text-end\">\r\n              <div>\r\n                {{ sendTokenBalance?.decimalValue | toFixed: 3 }}\r\n              </div>\r\n              <div class=\"d-flex align-items-center justify-content-end gap-2\">\r\n                {{ box.sendTokenInfo?.symbol }}\r\n                <img\r\n                  [src]=\"box.sendTokenInfo?.thumb\"\r\n                  style=\"width: 1.5rem; height: 1.5rem\">\r\n              </div>\r\n              <div>\r\n                <a\r\n                  [href]=\"\r\n                    contractServ.networkInfo(\r\n                      contractServ.connection.chainId$.getValue()\r\n                    ).accountScannerUrl(\r\n                      box.sendTokenInfo.address\r\n                    )\r\n                  \"\r\n                  target=\"_blank\"\r\n                  class=\"text-reset text-break\"\r\n                >\r\n                  {{ box.sendTokenInfo.address.slice(0, 8) }}...{{ box.sendTokenInfo.address.slice(-6) }}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- end of sent amount -->\r\n  \r\n          <!-- request amount -->\r\n          <div\r\n            class=\"rounded-alot position-relative p-3\"\r\n            [class.text-white]=\"!box.taken\"\r\n            [class.bg-eboxdark]=\"!box.taken\"\r\n            [class.bg-completed]=\"box.taken\"\r\n            [class.text-muted]=\"box.taken\"\r\n            *ngIf=\"box.requestValue !== '0'\"\r\n          >\r\n            <div class=\"lead\">\r\n              Requested\r\n            </div>\r\n            <div class=\"fs-4\">\r\n              {{ box.requestDecimalValue }}\r\n            </div>\r\n            <div class=\"token-info-wrapper rounded-alot text-end\">\r\n              <div>\r\n                {{ requestTokenBalance?.decimalValue | toFixed: 3 }}\r\n              </div>\r\n              <div class=\"d-flex align-items-center justify-content-end gap-2\">\r\n                {{ box.requestTokenInfo?.symbol }}\r\n                <img\r\n                  [src]=\"box.requestTokenInfo?.thumb\"\r\n                  style=\"width: 1.5rem; height: 1.5rem\">\r\n              </div>\r\n              <div>\r\n                <a\r\n                  [href]=\"\r\n                    contractServ.networkInfo(\r\n                      contractServ.connection.chainId$.getValue()\r\n                    ).accountScannerUrl(\r\n                      box.requestTokenInfo.address\r\n                    )\r\n                  \"\r\n                  target=\"_blank\"\r\n                  class=\"text-reset text-break\"\r\n                >\r\n                  {{ box.requestTokenInfo.address.slice(0, 8) }}...{{ box.requestTokenInfo.address.slice(-6) }}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- end of request amount -->\r\n\r\n          <!-- message textarea -->\r\n          <div *ngIf=\"contractServ.isTestnet()\" class=\"p-3 mb-3 rounded-alot\"\r\n            [class.text-white]=\"!box.taken\"\r\n            [class.bg-eboxdark]=\"!box.taken\"\r\n            [class.bg-completed]=\"box.taken\"\r\n            [class.text-muted]=\"box.taken\"\r\n          >\r\n            <label for=\"message-textarea\" class=\"w-100\">\r\n              Message\r\n            </label>\r\n            <div class=\"d-flex flex-column flex-lg-row my-2 my-lg-0 gap-2\">\r\n              <textarea\r\n                [value]=\"message\"\r\n                class=\"input-nostyle flex-grow-1\"\r\n                disabled\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <!-- end of message textarea -->\r\n\r\n          <!-- passphrase -->\r\n          <div\r\n            *ngIf=\"!box.taken\"\r\n            class=\"bg-eboxdark text-white rounded-alot position-relative p-3\"\r\n          >\r\n            <div class=\"lead\">\r\n              Passphrase\r\n            </div>\r\n            <div class=\"fs-5\">\r\n              <input\r\n                type=\"password\"\r\n                #passwordInput\r\n                (input)=\"onPasswordInput(passwordInput.value)\"\r\n                [placeholder]=\"\r\n                  isBoxUnlocked ? 'No passphrase needed' : 'Insert the passphrase'\r\n                \"\r\n                [disabled]=\"isBoxUnlocked ? 'disabled' : null\"\r\n                class=\"flex-grow-1 w-100 input-nostyle\"\r\n                [class.text-muted]=\"isBoxUnlocked\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!-- end of passphrase -->\r\n        </div>\r\n\r\n        <div *ngIf=\"!box.taken\" class=\"text-end\">\r\n          <button\r\n            *ngIf=\"!box.hasPrivacy\"\r\n            (click)=\"contractServ.acceptBox(box, password)\"\r\n            [disabled]=\"\r\n              !isBoxUnlocked || (loadingIndicatorServ.isLoading$ | async)\r\n                ? 'disabled'\r\n                : null\r\n            \"\r\n            class=\"col-12 col-md-auto btn btn-eboxprimary rounded-alot\"\r\n            [class.btn-eboxpulser]=\"isBoxUnlocked\"\r\n          >\r\n            Accept box\r\n          </button>\r\n          <button\r\n            *ngIf=\"box.hasPrivacy\"\r\n            (click)=\"contractServ.acceptBoxWithPrivacy(box, password)\"\r\n            [disabled]=\"\r\n              !isBoxUnlocked || (loadingIndicatorServ.isLoading$ | async)\r\n                ? 'disabled'\r\n                : null\r\n            \"\r\n            class=\"col-12 col-md-auto btn btn-eboxprimary rounded-alot\"\r\n            [class.btn-eboxpulser]=\"isBoxUnlocked\"\r\n          >\r\n            Accept privacy box\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ContractService } from '../../services/contract.service';\r\nimport { AddressBookService } from 'src/app/services/address-book.service';\r\n\r\n@Component({\r\n    selector: 'app-boxes-received-list',\r\n    templateUrl: './boxes-received-list.component.html',\r\n    styleUrls: ['./boxes-received-list.component.css']\r\n})\r\nexport class BoxesReceivedListComponent implements OnInit, OnDestroy {\r\n\r\n    paginatedBoxes = null;\r\n    paginationText = '0-0 / 0';\r\n    \r\n    order = 'desc';\r\n    state;\r\n    type;\r\n    \r\n    chainId;\r\n    isChainSupported;\r\n    selectedAccount;\r\n    isAppReady;\r\n    message;\r\n\r\n    private subscriptions = [];\r\n\r\n    private pageIndex = 0;\r\n    private pageSize = 15;\r\n    \r\n    private fetchedBoxes;\r\n    private filteredBoxes;\r\n\r\n    private addressBookMap;\r\n    \r\n    constructor(\r\n        public contractServ: ContractService,\r\n        private addressBookServ: AddressBookService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // Setting up the reactive code to show some messages to the user and eventually load the boxes into the component\r\n        [\r\n            this.contractServ.chainId$,\r\n            this.contractServ.isChainSupported$,\r\n            this.contractServ.selectedAccount$,\r\n            this.contractServ.isAppReady$,\r\n            this.contractServ.boxInteraction$,\r\n            this.contractServ.incomingBoxes$\r\n        ].forEach(obs => \r\n            this.subscriptions.push(\r\n                obs.subscribe(() => {\r\n\r\n                    // Resetting the component\r\n                    this.paginatedBoxes = null;\r\n                    this.filteredBoxes = null;\r\n                    this.fetchedBoxes = null;\r\n\r\n                    // Updating local variables\r\n                    this.chainId = this.contractServ.chainId$.getValue();\r\n                    this.isChainSupported = this.contractServ.isChainSupported$.getValue();\r\n                    this.selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n                    this.isAppReady = this.contractServ.isAppReady$.getValue();\r\n\r\n                    // Calculating a message for the user\r\n                    if (!this.chainId || !this.selectedAccount) {\r\n                        this.message = 'Please connect your wallet first!';\r\n                        return;\r\n                    }\r\n                    if (!this.isChainSupported) {\r\n                        this.message = 'Wrong network – Please use Ethereum, BSC or Polygon!';\r\n                        return;\r\n                    }\r\n                    if (!this.isAppReady) {\r\n                        this.message = 'Initializing ethbox smart contract...';\r\n                        return;\r\n                    }\r\n\r\n                    this.message = 'Loading...';\r\n\r\n                    // Get boxes and the address book\r\n                    let boxes = this.contractServ.incomingBoxes$.getValue();\r\n                    this.addressBookMap = this.addressBookServ.getAddressesMap();\r\n\r\n                    if (!boxes) {\r\n                        return;\r\n                    }\r\n\r\n                    if (boxes.length === 0) {\r\n                        this.message = 'No incoming transactions!';\r\n                        return;\r\n                    }\r\n\r\n                    this.fetchedBoxes = boxes\r\n                        .map(box => ({\r\n                            addressBookName: this.addressBookMap[box.sender],\r\n                            ...box\r\n                        }));\r\n                    \r\n                    this.filterBoxes();\r\n                })));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        // When the component gets destroyed unsubscribe from everything to prevent memory leaks\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    onPaginationPreviousClick() {\r\n\r\n        if (this.pageIndex < 1) {\r\n            return;\r\n        }\r\n        this.pageIndex--;\r\n        this.updatePagination();\r\n    }\r\n\r\n    onPaginationNextClick() {\r\n\r\n        if (this.pageIndex * this.pageSize + this.pageSize > this.filteredBoxes.length - 1) {\r\n            return;\r\n        }\r\n        this.pageIndex++;\r\n        this.updatePagination();\r\n    }\r\n\r\n    async updatePagination() {\r\n\r\n        let start = this.pageIndex * this.pageSize,\r\n            end = this.pageIndex * this.pageSize + this.pageSize;\r\n        if (end > this.filteredBoxes.length) {\r\n            end = this.filteredBoxes.length;\r\n        }\r\n        this.paginationText = `${start + 1}-${end} / ${this.filteredBoxes.length}`;\r\n        let boxesInView = this.filteredBoxes.slice(start, end);\r\n        \r\n        // Remove \"Loading...\" message\r\n        this.message = null;\r\n\r\n        this.paginatedBoxes = boxesInView;\r\n    }\r\n\r\n    filterBoxes() {\r\n\r\n        if (!this.fetchedBoxes) {\r\n            return;\r\n        }\r\n\r\n        // Should I move the predicates below into contract.service.ts?\r\n        this.filteredBoxes = this.fetchedBoxes\r\n            .filter(box => {\r\n                let isTaken = box.taken && box.taken == true;\r\n                switch(this.state) {\r\n                    case \"pending\":\r\n                        return !isTaken;\r\n                    case \"completed\":\r\n                        return isTaken;\r\n                    default:\r\n                        return true;\r\n                }\r\n            })\r\n            .filter(box => {\r\n                let isExchange = box.requestValue && box.requestValue != \"0\";\r\n                let isWithdraw = !box.requestValue || box.requestValue == \"0\";\r\n                switch(this.type) {\r\n                    case \"withdraw\":\r\n                        return isWithdraw;\r\n                    case \"exchange\":\r\n                        return isExchange;\r\n                    default:\r\n                        return true;\r\n                }\r\n            });\r\n\r\n        if (this.order) {\r\n            this.filteredBoxes.sort((a, b) =>\r\n                this.order == 'asc' ? a.timestamp - b.timestamp : b.timestamp - a.timestamp);\r\n        }\r\n\r\n        this.pageIndex = 0;\r\n        this.updatePagination();\r\n    }\r\n\r\n    // This piece of code tells Angular how to track boxes efficiently\r\n    // when and where to touch the DOM\r\n    boxId(index, box) {\r\n        return  `${box.sender}-${box.recipient}-${box.taken}-${box.timestamp}`;\r\n    }\r\n}\r\n","<app-bg-changer [imgSrc]=\"'assets/img/receive.jpg'\"></app-bg-changer>\r\n\r\n<div class=\"main py-5 px-3\">\r\n  <!-- header -->\r\n  <header class=\"container-medium text-center mb-5\">\r\n    <h1>Incoming Transactions</h1>\r\n    <p class=\"lead\">\r\n      All the boxes sent to you by others are listed here, and can easily be searched and filtered to only show open or completed transactions.\r\n    </p>\r\n  </header>\r\n  <!-- end of header -->\r\n\r\n  <!-- filters -->\r\n  <div class=\"container-medium mb-5\">\r\n    <div class=\"row row-cols-1 row-cols-md-auto g-2\">\r\n      <!-- state, type and date -->\r\n      <div class=\"col\">\r\n        <select\r\n          #stateInput\r\n          (input)=\"state = stateInput.value; filterBoxes()\"\r\n          class=\"bg-lightalpha form-select rounded-alot\"\r\n          [disabled]=\"!isAppReady ? 'disabled' : null\"\r\n        >\r\n          <option value=\"\" selected>Open / completed</option>\r\n          <option value=\"pending\">Open</option>\r\n          <option value=\"completed\">Completed</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col\">\r\n        <select\r\n          #typeInput\r\n          (input)=\"type = typeInput.value; filterBoxes()\"\r\n          class=\"bg-lightalpha form-select rounded-alot\"\r\n          [disabled]=\"!isAppReady ? 'disabled' : null\"\r\n        >\r\n          <option value=\"\" selected>Type</option>\r\n          <option value=\"withdraw\">One-way</option>\r\n          <option value=\"exchange\">OTC Trade</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col me-auto\">\r\n        <select\r\n          #orderInput\r\n          (input)=\"order = orderInput.value; filterBoxes()\"\r\n          class=\"bg-lightalpha form-select rounded-alot\"\r\n          [disabled]=\"!isAppReady ? 'disabled' : null\"\r\n        >\r\n          <option value=\"desc\" selected>Date: descending</option>\r\n          <option value=\"asc\">Date: ascending</option>\r\n        </select>\r\n      </div>\r\n      <!-- end of state, type and date -->\r\n      <!-- pagination -->\r\n      <div class=\"col\">\r\n        <ul class=\"pagination mb-0 justify-content-center rounded-alot\">\r\n          <li class=\"page-item\">\r\n            <a\r\n              (click)=\"$event.preventDefault(); onPaginationPreviousClick()\"\r\n              class=\"bg-light page-link rounded-alot-start\"\r\n              href=\"#\"\r\n              >&laquo;</a\r\n            >\r\n          </li>\r\n          <li class=\"page-item disabled\">\r\n            <a class=\"bg-lightalpha page-link\" href=\"#\" tabindex=\"-1\">{{\r\n              paginationText\r\n            }}</a>\r\n          </li>\r\n          <li class=\"page-item\">\r\n            <a\r\n              (click)=\"$event.preventDefault(); onPaginationNextClick()\"\r\n              class=\"bg-light rounded-alot-end page-link\"\r\n              href=\"#\"\r\n              >&raquo;</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- end of pagination -->\r\n    </div>\r\n  </div>\r\n  <!-- end of filters -->\r\n\r\n  <!-- message -->\r\n  <div *ngIf=\"message\" class=\"container-medium text-center\">\r\n    <h2>{{ message }}</h2>\r\n  </div>\r\n  <!-- end of message -->\r\n\r\n  <!-- boxes -->\r\n  <div class=\"container-medium d-grid gap-2\">\r\n    <app-box-received\r\n      *ngFor=\"let box of paginatedBoxes; index as i; trackBy: boxId\"\r\n      [box]=\"box\"\r\n      class=\"box\"\r\n      style=\"--animation-order: {{ i }}\"\r\n    ></app-box-received>\r\n  </div>\r\n  <!-- end of boxes -->\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Box } from 'src/app/interfaces';\r\nimport { LoadingIndicatorService } from 'src/app/services/loading-indicator.service';\r\nimport { ContractService } from '../../../services/contract.service';\r\n\r\n@Component({\r\n    selector: 'app-box-sent',\r\n    templateUrl: './box-sent.component.html',\r\n    styleUrls: ['./box-sent.component.css']\r\n})\r\nexport class BoxSentComponent {\r\n\r\n    @Input() box: Box;\r\n\r\n    isExpanded = false;\r\n    sendTokenBalance;\r\n    requestTokenBalance;\r\n    message = \"Loading...\";\r\n\r\n    constructor(\r\n        public contractServ: ContractService,\r\n        public loadingIndicatorServ: LoadingIndicatorService) { }\r\n\r\n        async onBoxToggle() {\r\n\r\n            this.isExpanded = !this.isExpanded;\r\n    \r\n            // Only updates balances when expanded\r\n            if (this.isExpanded) {\r\n                this.sendTokenBalance = await this.contractServ\r\n                    .getTokenBalance(this.box.sendTokenInfo.address);\r\n                \r\n                if (this.box.requestToken) {\r\n                    this.requestTokenBalance = await this.contractServ\r\n                        .getTokenBalance(this.box.requestTokenInfo.address);\r\n                }\r\n\r\n                // Get the message from Pipedream\r\n                let { message } = await this.contractServ.receiveBoxFromPipedream(this.box);\r\n                this.message = message || \"-\";\r\n                \r\n                console.log(\"Opened box\", this.box);\r\n            }\r\n        }\r\n\r\n}\r\n","<div class=\"box-wrapper position-relative\">\r\n  <div\r\n    class=\"bg-lightalpha rounded-alot\"\r\n    [class.shadow]=\"!box.taken\"\r\n    [class.text-muted]=\"box.taken\"\r\n    [class.bg-disabled]=\"box.taken\"\r\n  >\r\n    <div class=\"d-flex flex-column flex-md-row align-items-center justify-content-center justify-content-md-between gap-3 p-3 position-relative\">\r\n      <div class=\"col-md-4 d-flex flex-column flex-md-row align-items-center\">\r\n        <img\r\n          *ngIf=\"!box.taken && box.hasPrivacy\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/box-privacy-close.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"box.taken && box.hasPrivacy\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/box-privacy-open.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"!box.taken && !box.hasPrivacy && box.requestValue === '0'\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/box-close.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"box.taken && !box.hasPrivacy && box.requestValue === '0'\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/box-open.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"!box.taken && box.requestValue !== '0'\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/boxes-exchange-close.png\"\r\n        />\r\n        <img\r\n          *ngIf=\"box.taken && box.requestValue !== '0'\"\r\n          style=\"height: 64px\"\r\n          src=\"assets/img/boxes-exchange-open.png\"\r\n        />\r\n        <div class=\"ms-md-3 text-center text-md-start\">\r\n          <div class=\"fs-4\">{{ box.requestValue !== \"0\" ? \"OTC Trade\" : \"One-way\" }} {{ box.hasPrivacy ? \"Privacy\" : \"\" }}</div>\r\n          <small class=\"text-muted\">\r\n            <a\r\n              class=\"stretched-link text-reset text-decoration-none\"\r\n              data-bs-toggle=\"collapse\"\r\n              [href]=\"'#box-collapse_' + box.timestamp\"\r\n              (click)=\"onBoxToggle()\"\r\n            >\r\n              <i class=\"bi {{ isExpanded ? 'bi-arrows-collapse' : 'bi-arrows-expand' }}\"></i>\r\n              {{ isExpanded ? 'Collapse' : 'Expand' }}\r\n            </a>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"fs-5 font-monospace flex-grow-1\">\r\n        <div class=\"d-flex align-items-center justify-content-end gap-2\">\r\n          <span>\r\n            {{ box.sendDecimalValue.length < 7 ? box.sendDecimalValue : box.sendDecimalValue.slice(0, 6) + '...' }}\r\n          </span>\r\n          <span class=\"fw-bold\">\r\n            {{ box.sendTokenInfo.symbol }}\r\n          </span>\r\n          <img\r\n            *ngIf=\"box.sendTokenInfo.thumb\"\r\n            [src]=\"box.sendTokenInfo.thumb\"\r\n            style=\"width: 1.5rem; height: 1.5rem\">\r\n        </div>\r\n        <div *ngIf=\"box.requestValue !== '0'\" class=\"d-flex align-items-center justify-content-end gap-2\">\r\n          <span>\r\n            {{ box.requestDecimalValue.length < 7 ? box.requestDecimalValue : box.requestDecimalValue.slice(0, 6) + '...' }}\r\n          </span>\r\n          <span class=\"fw-bold\">\r\n            {{ box.requestTokenInfo.symbol }}\r\n          </span>\r\n          <img\r\n            *ngIf=\"box.requestTokenInfo.thumb\"\r\n            [src]=\"box.requestTokenInfo.thumb\"\r\n            style=\"width: 1.5rem; height: 1.5rem\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4 text-center text-md-end\">\r\n        <div \r\n          *ngIf=\"!box.hasPrivacy\"\r\n          class=\"fs-4\"\r\n        >\r\n          <ng-container *ngIf=\"box.addressBookName; else address\">\r\n            {{ box.addressBookName.slice(0, 17) }}\r\n          </ng-container>\r\n          <ng-template #address>\r\n            {{ box.recipient.slice(0, 8) }}...{{ box.recipient.slice(-6) }}\r\n          </ng-template>\r\n        </div>\r\n        <small class=\"text-muted\">{{ box.readableTimestamp }}</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"collapse\" [id]=\"'box-collapse_' + box.timestamp\">\r\n      <div class=\"p-3\">\r\n\r\n        <div class=\"d-grid gap-2 mb-3\">\r\n          <!-- mini header -->\r\n          <div class=\"text-muted d-flex align-items-end justify-content-between px-3\">\r\n            <small>\r\n              To:\r\n              <span *ngIf=\"box.hasPrivacy\">Private</span>\r\n              <a\r\n                *ngIf=\"!box.hasPrivacy\"\r\n                [href]=\"\r\n                  contractServ.networkInfo(\r\n                      contractServ.connection.chainId$.getValue()\r\n                    ).accountScannerUrl(\r\n                      box.recipient\r\n                    )\r\n                \"\r\n                target=\"_blank\"\r\n                class=\"text-reset\"\r\n              >\r\n                <span *ngIf=\"box.addressBookName; else address\">\r\n                  {{ box.addressBookName.slice(0, 11) }}\r\n                </span>\r\n                <ng-template #address>\r\n                  {{ box.recipient.slice(0, 8) }}...{{ box.recipient.slice(-6) }}\r\n                </ng-template>\r\n              </a>\r\n            </small>\r\n            <small class=\"text-end\">\r\n              Your balance(s)\r\n            </small>\r\n          </div>\r\n          <!-- end of mini-header -->\r\n  \r\n          <!-- sent amount -->\r\n          <div\r\n            class=\"rounded-alot position-relative p-3\"\r\n            [class.text-white]=\"!box.taken\"\r\n            [class.bg-eboxdark]=\"!box.taken\"\r\n            [class.bg-completed]=\"box.taken\"\r\n            [class.text-muted]=\"box.taken\"\r\n          >\r\n            <div class=\"lead\">\r\n              Value sent\r\n            </div>\r\n            <div class=\"fs-4\">\r\n              {{ box.sendDecimalValue }}\r\n            </div>\r\n            <div class=\"token-info-wrapper rounded-alot text-end\">\r\n              <div>\r\n                {{ sendTokenBalance?.decimalValue | toFixed: 3 }}\r\n              </div>\r\n              <div class=\"d-flex align-items-center justify-content-end gap-2\">\r\n                {{ box.sendTokenInfo?.symbol }}\r\n                <img\r\n                  *ngIf=\"box.sendTokenInfo.thumb\"\r\n                  [src]=\"box.sendTokenInfo.thumb\"\r\n                  style=\"width: 1.5rem; height: 1.5rem\">\r\n              </div>\r\n              <div>\r\n                <a\r\n                  [href]=\"\r\n                    contractServ.networkInfo(\r\n                      contractServ.connection.chainId$.getValue()\r\n                    ).accountScannerUrl(\r\n                      box.sendTokenInfo.address\r\n                    )\r\n                  \"\r\n                  target=\"_blank\"\r\n                  class=\"text-reset text-break\"\r\n                >\r\n                  {{ box.sendTokenInfo.address.slice(0, 8) }}...{{ box.sendTokenInfo.address.slice(-6) }}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- end of sent amount -->\r\n  \r\n          <!-- request amount -->\r\n          <div\r\n            class=\"rounded-alot position-relative p-3\"\r\n            [class.text-white]=\"!box.taken\"\r\n            [class.bg-eboxdark]=\"!box.taken\"\r\n            [class.bg-completed]=\"box.taken\"\r\n            [class.text-muted]=\"box.taken\"\r\n            *ngIf=\"box.requestValue !== '0'\"\r\n          >\r\n            <div class=\"lead\">\r\n              Requested\r\n            </div>\r\n            <div class=\"fs-4\">\r\n              {{ box.requestDecimalValue }}\r\n            </div>\r\n            <div class=\"token-info-wrapper rounded-alot text-end\">\r\n              <div>\r\n                {{ requestTokenBalance?.decimalValue | toFixed: 3 }}\r\n              </div>\r\n              <div class=\"d-flex align-items-center justify-content-end gap-2\">\r\n                {{ box.requestTokenInfo?.symbol }}\r\n                <img\r\n                  *ngIf=\"box.requestTokenInfo.thumb\"\r\n                  [src]=\"box.requestTokenInfo.thumb\"\r\n                  style=\"width: 1.5rem; height: 1.5rem\">\r\n              </div>\r\n              <div>\r\n                <a\r\n                  [href]=\"\r\n                    contractServ.networkInfo(\r\n                      contractServ.connection.chainId$.getValue()\r\n                    ).accountScannerUrl(\r\n                      box.requestTokenInfo.address\r\n                    )\r\n                  \"\r\n                  target=\"_blank\"\r\n                  class=\"text-reset text-break\"\r\n                >\r\n                  {{ box.requestTokenInfo.address.slice(0, 8) }}...{{ box.requestTokenInfo.address.slice(-6) }}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- end of request amount -->\r\n\r\n          <!-- message textarea -->\r\n          <div *ngIf=\"contractServ.isTestnet()\" class=\"p-3 mb-3 rounded-alot\"\r\n            [class.text-white]=\"!box.taken\"\r\n            [class.bg-eboxdark]=\"!box.taken\"\r\n            [class.bg-completed]=\"box.taken\"\r\n            [class.text-muted]=\"box.taken\"\r\n          >\r\n            <label for=\"message-textarea\" class=\"w-100\">\r\n              Message\r\n            </label>\r\n            <div class=\"d-flex flex-column flex-lg-row my-2 my-lg-0 gap-2\">\r\n              <textarea\r\n                [value]=\"message\"\r\n                class=\"input-nostyle flex-grow-1\"\r\n                disabled\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <!-- end of message textarea -->\r\n        </div>\r\n\r\n        <div *ngIf=\"!box.taken\" class=\"text-end\">\r\n          <button\r\n            *ngIf=\"!box.hasPrivacy\"\r\n            (click)=\"contractServ.cancelBox(box.index)\"\r\n            class=\"col-12 col-md-auto btn btn-outline-eboxprimary rounded-alot\"\r\n            [disabled]=\"\r\n              (loadingIndicatorServ.isLoading$ | async)\r\n                ? 'disabled'\r\n                : null\r\n            \"\r\n          >\r\n            Cancel box\r\n          </button>\r\n          <button\r\n            *ngIf=\"box.hasPrivacy\"\r\n            (click)=\"contractServ.cancelBoxWithPrivacy(box.index)\"\r\n            class=\"col-12 col-md-auto btn btn-outline-eboxprimary rounded-alot\"\r\n            [disabled]=\"\r\n              (loadingIndicatorServ.isLoading$ | async)\r\n                ? 'disabled'\r\n                : null\r\n            \"\r\n          >\r\n            Cancel privacy box\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ContractService } from '../../services/contract.service';\r\nimport { AddressBookService } from 'src/app/services/address-book.service';\r\n\r\n@Component({\r\n    selector: 'app-boxes-sent-list',\r\n    templateUrl: './boxes-sent-list.component.html',\r\n    styleUrls: ['./boxes-sent-list.component.css']\r\n})\r\nexport class BoxesSentListComponent implements OnInit, OnDestroy {\r\n\r\n    paginatedBoxes = null;\r\n    paginationText = '0-0 / 0';\r\n    \r\n    order = 'desc';\r\n    state;\r\n    type;\r\n    \r\n    chainId;\r\n    isChainSupported;\r\n    selectedAccount;\r\n    isAppReady;\r\n    message;\r\n\r\n    private subscriptions = [];\r\n\r\n    private pageIndex = 0;\r\n    private pageSize = 15;\r\n    \r\n    private fetchedBoxes;\r\n    private filteredBoxes;\r\n\r\n    private addressBookMap;\r\n    \r\n    constructor(\r\n        public contractServ: ContractService,\r\n        private addressBookServ: AddressBookService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // Setting up the reactive code to show some messages to the user and eventually load the boxes into the component\r\n        [\r\n            this.contractServ.chainId$,\r\n            this.contractServ.isChainSupported$,\r\n            this.contractServ.selectedAccount$,\r\n            this.contractServ.isAppReady$,\r\n            this.contractServ.boxInteraction$,\r\n            this.contractServ.outgoingBoxes$\r\n        ].forEach(obs => \r\n            this.subscriptions.push(\r\n                obs.subscribe(() => {\r\n\r\n                    // Resetting the component\r\n                    this.paginatedBoxes = null;\r\n                    this.filteredBoxes = null;\r\n                    this.fetchedBoxes = null;\r\n\r\n                    // Updating local variables\r\n                    this.chainId = this.contractServ.chainId$.getValue();\r\n                    this.isChainSupported = this.contractServ.isChainSupported$.getValue();\r\n                    this.selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n                    this.isAppReady = this.contractServ.isAppReady$.getValue();\r\n\r\n                    // Calculating a message for the user\r\n                    if (!this.chainId || !this.selectedAccount) {\r\n                        this.message = 'Please connect your wallet first!';\r\n                        return;\r\n                    }\r\n                    if (!this.isChainSupported) {\r\n                        this.message = 'Wrong network – Please use Ethereum, BSC or Polygon!';\r\n                        return;\r\n                    }\r\n                    if (!this.isAppReady) {\r\n                        this.message = 'Initializing ethbox smart contract...';\r\n                        return;\r\n                    }\r\n\r\n                    this.message = 'Loading...';\r\n\r\n                    // Get boxes and the address book\r\n                    let boxes = this.contractServ.outgoingBoxes$.getValue();\r\n                    this.addressBookMap = this.addressBookServ.getAddressesMap();\r\n\r\n                    if (!boxes) {\r\n                        return;\r\n                    }\r\n\r\n                    if (boxes.length === 0) {\r\n                        this.message = 'No incoming transactions!';\r\n                        return;\r\n                    }\r\n\r\n                    this.fetchedBoxes = boxes\r\n                        .map(box => ({\r\n                            addressBookName: this.addressBookMap[box.recipient],\r\n                            ...box\r\n                        }));\r\n                    \r\n                    this.filterBoxes();\r\n                })));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        // When the component gets destroyed unsubscribe from everything to prevent memory leaks\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    onPaginationPreviousClick() {\r\n\r\n        if (this.pageIndex < 1) {\r\n            return;\r\n        }\r\n        this.pageIndex--;\r\n        this.updatePagination();\r\n    }\r\n\r\n    onPaginationNextClick() {\r\n\r\n        if (this.pageIndex * this.pageSize + this.pageSize > this.filteredBoxes.length - 1) {\r\n            return;\r\n        }\r\n        this.pageIndex++;\r\n        this.updatePagination();\r\n    }\r\n\r\n    async updatePagination() {\r\n\r\n        let start = this.pageIndex * this.pageSize,\r\n            end = this.pageIndex * this.pageSize + this.pageSize;\r\n        if (end > this.filteredBoxes.length) {\r\n            end = this.filteredBoxes.length;\r\n        }\r\n        this.paginationText = `${start + 1}-${end} / ${this.filteredBoxes.length}`;\r\n        let boxesInView = this.filteredBoxes.slice(start, end);\r\n        \r\n        // Remove \"Loading...\" message\r\n        this.message = null;\r\n\r\n        this.paginatedBoxes = boxesInView;\r\n    }\r\n\r\n    filterBoxes() {\r\n\r\n        if (!this.fetchedBoxes) {\r\n            return;\r\n        }\r\n\r\n        // Should I move the predicates below into contract.service.ts?\r\n        this.filteredBoxes = this.fetchedBoxes\r\n            .filter(box => {\r\n                let isTaken = box.taken && box.taken == true;\r\n                switch(this.state) {\r\n                    case \"pending\":\r\n                        return !isTaken;\r\n                    case \"completed\":\r\n                        return isTaken;\r\n                    default:\r\n                        return true;\r\n                }\r\n            })\r\n            .filter(box => {\r\n                let isExchange = box.requestValue && box.requestValue != \"0\";\r\n                let isWithdraw = !box.requestValue || box.requestValue == \"0\";\r\n                switch(this.type) {\r\n                    case \"withdraw\":\r\n                        return isWithdraw;\r\n                    case \"exchange\":\r\n                        return isExchange;\r\n                    default:\r\n                        return true;\r\n                }\r\n            });\r\n\r\n        if (this.order) {\r\n            this.filteredBoxes.sort((a, b) =>\r\n                this.order == 'asc' ? a.timestamp - b.timestamp : b.timestamp - a.timestamp);\r\n        }\r\n\r\n        this.pageIndex = 0;\r\n        this.updatePagination();\r\n    }\r\n\r\n    // This piece of code tells Angular how to track boxes efficiently\r\n    // when and where to touch the DOM\r\n    boxId(index, box) {\r\n        return  `${box.sender}-${box.recipient}-${box.taken}-${box.timestamp}`;\r\n    }\r\n}\r\n","<app-bg-changer [imgSrc]=\"'assets/img/history.jpg'\"></app-bg-changer>\r\n\r\n<div class=\"main py-5 px-3\">\r\n  <!-- header -->\r\n  <header class=\"container-medium text-center mb-5\">\r\n    <h1>Outgoing Transactions</h1>\r\n    <p class=\"lead\">\r\n      All the boxes sent to you by others are listed here, and can easily be searched and filtered to only show open or completed transactions.\r\n    </p>\r\n  </header>\r\n  <!-- end of header -->\r\n\r\n  <!-- filters -->\r\n  <div class=\"container-medium mb-5\">\r\n    <div class=\"row row-cols-1 row-cols-md-auto g-2\">\r\n      <!-- state, type and date -->\r\n      <div class=\"col\">\r\n        <select\r\n          #stateInput\r\n          (input)=\"state = stateInput.value; filterBoxes()\"\r\n          class=\"bg-lightalpha form-select rounded-alot\"\r\n          [disabled]=\"!isAppReady ? 'disabled' : null\"\r\n        >\r\n          <option value=\"\" selected>Open / completed</option>\r\n          <option value=\"pending\">Open</option>\r\n          <option value=\"completed\">Completed</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col\">\r\n        <select\r\n          #typeInput\r\n          (input)=\"type = typeInput.value; filterBoxes()\"\r\n          class=\"bg-lightalpha form-select rounded-alot\"\r\n          [disabled]=\"!isAppReady ? 'disabled' : null\"\r\n        >\r\n          <option value=\"\" selected>Type</option>\r\n          <option value=\"withdraw\">One-way</option>\r\n          <option value=\"exchange\">OTC Trade</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col me-auto\">\r\n        <select\r\n          #orderInput\r\n          (input)=\"order = orderInput.value; filterBoxes()\"\r\n          class=\"bg-lightalpha form-select rounded-alot\"\r\n          [disabled]=\"!isAppReady ? 'disabled' : null\"\r\n        >\r\n          <option value=\"desc\" selected>Date: descending</option>\r\n          <option value=\"asc\">Date: ascending</option>\r\n        </select>\r\n      </div>\r\n      <!-- end of state, type and date -->\r\n      <!-- pagination -->\r\n      <div class=\"col\">\r\n        <ul class=\"pagination mb-0 justify-content-center rounded-alot\">\r\n          <li class=\"page-item\">\r\n            <a\r\n              (click)=\"$event.preventDefault(); onPaginationPreviousClick()\"\r\n              class=\"bg-light page-link rounded-alot-start\"\r\n              href=\"#\"\r\n              >&laquo;</a\r\n            >\r\n          </li>\r\n          <li class=\"page-item disabled\">\r\n            <a class=\"bg-lightalpha page-link\" href=\"#\" tabindex=\"-1\">{{\r\n              paginationText\r\n            }}</a>\r\n          </li>\r\n          <li class=\"page-item\">\r\n            <a\r\n              (click)=\"$event.preventDefault(); onPaginationNextClick()\"\r\n              class=\"bg-light rounded-alot-end page-link\"\r\n              href=\"#\"\r\n              >&raquo;</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- end of pagination -->\r\n    </div>\r\n  </div>\r\n  <!-- end of filters -->\r\n\r\n  <!-- message -->\r\n  <div *ngIf=\"message\" class=\"container-medium text-center\">\r\n    <h2>{{ message }}</h2>\r\n  </div>\r\n  <!-- end of message -->\r\n\r\n  <!-- boxes -->\r\n  <div class=\"container-medium d-grid gap-2\">\r\n    <app-box-sent\r\n      *ngFor=\"let box of paginatedBoxes; index as i; trackBy: boxId\"\r\n      [box]=\"box\"\r\n      class=\"box\"\r\n      style=\"--animation-order: {{ i }}\"\r\n    ></app-box-sent>\r\n  </div>\r\n  <!-- end of boxes -->\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-coming-soon',\r\n    templateUrl: './coming-soon.component.html',\r\n    styleUrls: ['./coming-soon.component.css']\r\n})\r\nexport class ComingSoonComponent {\r\n\r\n    constructor() { }\r\n\r\n}\r\n","<app-bg-changer\r\n  [imgSrc]=\"'assets/img/bg-blob-seashore.jpg'\"\r\n></app-bg-changer>\r\n\r\n<div class=\"centerer main\">\r\n  <div class=\"text-center\">\r\n    <h2 class=\"display-1\">Coming soon</h2>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-governance-area',\r\n    templateUrl: './governance-area.component.html',\r\n    styleUrls: ['./governance-area.component.css']\r\n})\r\nexport class GovernanceAreaComponent implements OnInit {\r\n\r\n    @Input() title;\r\n    @Input() proposals;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    injectEligibleUsers(proposal) {\r\n        console.log(proposal);\r\n        let lengthLabel: HTMLElement = document.querySelector(\"#numberOfEligibleUsers\");\r\n        let eligibleUsersList: HTMLElement = document.querySelector(\"#eligibleUsersList\");\r\n        lengthLabel.innerText = (proposal.eligibleUsers || { length: 0 }).length;\r\n        eligibleUsersList.innerHTML = \"\";\r\n        proposal.eligibleUsers.forEach(voter => {\r\n            let voterWrapper = document.createElement(\"DIV\");\r\n            voterWrapper.innerHTML = `<div class=\"bg-eboxdark text-white p-3 rounded-alot mb-3\">\r\n    <div class=\"mb-2\">\r\n        <div class=\"fs-5 fw-bold mb-1\">Address</div>\r\n        <div class=\"text-truncate font-monospace\">\r\n            <a href=\"https://etherscan.io/address/${voter.address}\" target=\"_blank\" class=\"text-reset\">\r\n                ${voter.address}\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"bg-white mx-auto p-3 rounded-alot text-center\">\r\n        <div class=\"text-eboxprimary\">\r\n        <div>\r\n            <div class=\"fs-5 fw-bold mb-1\">Voting power</div>\r\n            <div class=\"display-6 fw-bold\">\r\n                ${Number(voter.voting_power).toFixed(0)}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>`;\r\n            eligibleUsersList.appendChild(voterWrapper.firstElementChild);\r\n        });\r\n    }\r\n\r\n}\r\n","<div class=\"bg-white rounded-alot shadow\">\r\n    <!-- header -->\r\n    <div class=\"d-flex flex-wrap align-items-center justify-content-between p-3 position-relative\">\r\n      <div class=\"fs-2 text-eboxprimary\">\r\n        <span class=\"me-2\">{{ title }}</span>\r\n      </div>\r\n      <div>{{ proposals.length }} Votings</div>\r\n    </div>\r\n    <!-- end of header -->\r\n\r\n    <!-- proposals -->\r\n    <div class=\"d-grid gap-2 p-3 pt-0\">\r\n      <div\r\n        class=\"bg-eboxdark text-white rounded-alot p-3\" \r\n        *ngFor=\"let proposal of proposals\">\r\n\r\n        <!-- proposal header -->\r\n        <div class=\"position-relative\" (click)=\"proposal._isCollapsed = !proposal._isCollapsed\">\r\n          <div class=\"d-flex flex-wrap align-items-center justify-content-between gap-2 mb-2\">\r\n            <div class=\"fs-5 fw-bold\">\r\n              <span class=\"me-2\">\r\n                Voting #{{ proposal.n }}\r\n              </span>\r\n              <a href=\"#collapse_{{proposal._id}}\" data-bs-toggle=\"collapse\" class=\"stretched-link text-reset text-decoration-none me-2\">\r\n                <i\r\n                  class=\"bi\"\r\n                  [class.bi-arrows-expand]=\"proposal._isCollapsed\"\r\n                  [class.bi-arrows-collapse]=\"!proposal._isCollapsed\"></i>\r\n              </a>\r\n              <small *ngIf=\"proposal.hasExpired\">\r\n                (Finished)\r\n              </small>\r\n            </div>\r\n            <div>{{ proposal.answers.length }} Options</div>\r\n          </div>\r\n          <div>{{ proposal.question }}</div>\r\n        </div>\r\n        <!-- end of proposal header -->\r\n\r\n        <div class=\"collapse\" [class.show]=\"!proposal.hasExpired\" [id]=\"'collapse_' + proposal._id\">\r\n\r\n          <!-- eligible users trigger -->\r\n          <div class=\"text-center mt-3 mb-2\">\r\n            <a href=\"#eligibleUsersModal\" class=\"text-reset\" data-bs-toggle=\"modal\" (click)=\"injectEligibleUsers(proposal)\">\r\n              Eligible voters\r\n            </a>\r\n          </div>\r\n          <!-- end of eligible users trigger -->\r\n\r\n          <app-governance-proposal [proposal]=\"proposal\"></app-governance-proposal>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- end of proposals -->\r\n</div>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ContractService } from 'src/app/services/contract.service';\r\nimport { GovernanceService } from 'src/app/services/governance.service';\r\n\r\n@Component({\r\n    selector: 'app-governance-proposal',\r\n    templateUrl: './governance-proposal.component.html',\r\n    styleUrls: ['./governance-proposal.component.css']\r\n})\r\nexport class GovernanceProposalComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() proposal;\r\n\r\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n    proposalId = `proposal_${Math.random().toString(36).substring(2)}`;\r\n    startDatetime;\r\n    endDatetime;\r\n    selectedChoice;\r\n\r\n    chainId;\r\n    isEthereumMainnet;\r\n    selectedAccount;\r\n\r\n    buttonMessage;\r\n    buttonFunction;\r\n    isButtonDisabled;\r\n\r\n    private subscriptions = [];\r\n\r\n    constructor(\r\n        private contractServ: ContractService,\r\n        private governanceServ: GovernanceService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.startDatetime = new Date(this.proposal.time_start * 1e3).toUTCString().replace(\"GMT\", \"UTC\");\r\n        this.endDatetime = new Date(this.proposal.time_end * 1e3).toUTCString().replace(\"GMT\", \"UTC\");\r\n\r\n        [\r\n            this.contractServ.chainId$,\r\n            this.contractServ.isEthereumMainnet$,\r\n            this.contractServ.selectedAccount$\r\n        ].forEach(\r\n            obs => obs.subscribe(\r\n                async () => {\r\n\r\n                    // Updating local variables\r\n                    this.chainId = this.contractServ.chainId$.getValue();\r\n                    this.isEthereumMainnet = true; //this.contractServ.isEthereumMainnet$.getValue();\r\n                    this.selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n\r\n                    // Calculating a message for the user\r\n                    if (!this.chainId || !this.selectedAccount) {\r\n                        this.buttonMessage = 'Please connect your wallet first!';\r\n                        this.buttonFunction = () => this.contractServ.connect();\r\n                        this.isButtonDisabled = false;\r\n                        return;\r\n                    }\r\n                    if (!this.isEthereumMainnet) {\r\n                        this.buttonMessage = 'Wrong network – Please use the Ethereum Mainnet!';\r\n                        this.isButtonDisabled = true;\r\n                        return;\r\n                    }\r\n\r\n                    // Checking if the proposal has expired\r\n                    if (this.proposal.hasExpired) {\r\n                        this.buttonMessage = 'Voting has finished!';\r\n                        this.isButtonDisabled = true;\r\n                        return;\r\n                    }\r\n\r\n                    // Setting and checking if user is eligible\r\n                    this.proposal.isEligible = await this.governanceServ.isEligible({ \r\n                        votingNumber: this.proposal.n,\r\n                        area: this.proposal.area });\r\n                    if (!this.proposal.isEligible) {\r\n                        this.buttonMessage = 'Not eligible';\r\n                        this.isButtonDisabled = true;\r\n                        return;\r\n                    }\r\n                    \r\n                    // Setting and checking if user has already voted\r\n                    this.proposal.hasVoted = await this.governanceServ.hasVoted({ \r\n                        votingNumber: this.proposal.n,\r\n                        area: this.proposal.area });\r\n                    if (this.proposal.hasVoted) {\r\n                        this.buttonMessage = 'Already voted';\r\n                        this.isButtonDisabled = true;\r\n                        return;\r\n                    }\r\n\r\n                    // If the voting hasn't started disable the button along with a meaningful message\r\n                    if (this.proposal.time_start * 1e3 > Date.now()) {\r\n                        this.buttonMessage = \"Voting hasn't started yet\";\r\n                        this.isButtonDisabled = true;\r\n                        return;\r\n                    }\r\n                    \r\n                    // All checks are passed\r\n                    this.buttonMessage = 'Vote';\r\n                    this.buttonFunction = () => this.governanceServ.vote(\r\n                        this.proposal,\r\n                        this.selectedChoice);\r\n                    this.isButtonDisabled = false;\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    injectVoters(proposal) {\r\n        console.log(proposal);\r\n        let lengthLabel: HTMLElement = document.querySelector(\"#numberOfVoters\");\r\n        let votersList: HTMLElement = document.querySelector(\"#votersList\");\r\n        lengthLabel.innerText = (proposal.votersDetail || { length: 0 }).length;\r\n        votersList.innerHTML = \"\";\r\n        proposal.votersDetail.forEach(voter => {\r\n            let voterWrapper = document.createElement(\"DIV\");\r\n            voterWrapper.innerHTML = `<li class=\"bg-eboxdark text-white p-3 rounded-alot mb-3\">\r\n    <div class=\"text-end mb-2\">${new Date(voter.time * 1e3).toLocaleDateString()}</div>\r\n    <div class=\"mb-2\">\r\n        <div class=\"fs-5 fw-bold mb-1\">Address</div>\r\n        <div class=\"text-truncate font-monospace\">\r\n            <a href=\"https://etherscan.io/address/${voter.address}\" target=\"_blank\" class=\"text-reset\">\r\n                ${voter.address}\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <div class=\"fs-5 fw-bold mb-1\">Signed message</div>\r\n        <div class=\"text-truncate font-monospace\">\r\n            ${voter.signed_msg}\r\n        </div>\r\n    </div>\r\n    <div class=\"bg-white mx-auto p-3 rounded-alot text-center\">\r\n        <div class=\"text-eboxprimary\">\r\n        <div class=\"mb-2\">\r\n            <div class=\"fs-5 fw-bold mb-1\">Voted for</div>\r\n            <div class=\"display-6 fw-bold\">${\"abcdefghijklmnopqrstuvwxyz\"[voter.vote - 1]}</div>\r\n        </div>\r\n        <div>\r\n            <div class=\"fs-5 fw-bold mb-1\">Voting power</div>\r\n            <div class=\"display-6 fw-bold\">\r\n                ${Number(voter.voting_power).toFixed(0)}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</li>`;\r\n            votersList.appendChild(voterWrapper.firstElementChild);\r\n        });\r\n    }\r\n\r\n}\r\n","<div class=\"bg-white text-dark rounded-alot p-3\">\r\n  <!-- deadline -->\r\n  <div class=\"d-grid gap-2 mb-3 text-center\">\r\n    <div>\r\n      <div class=\"lh-1\">Start</div>\r\n      <small class=\"text-muted\">{{ proposal.startDatetime }}</small>\r\n    </div>\r\n    <div>\r\n      <div class=\"lh-1\">End</div>\r\n      <small class=\"text-muted\">{{ proposal.endDatetime }}</small>\r\n    </div>\r\n  </div>\r\n  <!-- end of deadline -->\r\n  \r\n  <!-- choices -->\r\n  <div class=\"d-grid gap-2 mb-3\">\r\n    <div\r\n      *ngFor=\"let answer of proposal.answers; let i = index\"\r\n      class=\"form-check\"\r\n    >\r\n      {{ alphabet[i] }})\r\n      <input\r\n        [id]=\"proposalId + '-input-' + i\"\r\n        class=\"form-check-input\"\r\n        type=\"radio\"\r\n        (change)=\"selectedChoice = $event.target.value\"\r\n        [name]=\"proposalId + '_answers'\"\r\n        [value]=\"i + 1\"\r\n        [disabled]=\"isButtonDisabled ? 'disabled' : ''\"\r\n      />\r\n      <label [for]=\"proposalId + '-input-' + i\" class=\"form-check-label mb-1\">\r\n        {{ answer.answer }}\r\n      </label>\r\n      <div *ngIf=\"proposal.votes?.votes\" class=\"progress bg-light rounded-alot align-items-center\">\r\n        <div class=\"progress-bar bg-eboxprimary rounded-alot\" style=\"width: {{ 100 * proposal.votes.votes[i].answer / proposal.votes.sum }}%; height: 1rem\">\r\n        </div>\r\n        <span class=\"ms-2\">\r\n          {{\r\n            (100 * proposal.votes.votes[i].answer / proposal.votes.sum) | toFixed: 2\r\n          }}%\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- end of choices -->\r\n  \r\n  <!-- button -->\r\n  <div class=\"text-center\">\r\n\r\n    <div class=\"d-inline-flex flex-column align-items-center\">\r\n      <a href=\"#votersModal\" class=\"text-reset mb-2\" data-bs-toggle=\"modal\" (click)=\"injectVoters(proposal)\">\r\n        Detailed voting results\r\n      </a>\r\n      <button\r\n        [disabled]=\"isButtonDisabled ? 'disabled' : null\"\r\n        class=\"btn btn-eboxprimary rounded-alot\"\r\n        (click)=\"buttonFunction()\"\r\n        >\r\n        {{ buttonMessage }}\r\n      </button>\r\n    </div>\r\n  \r\n  </div>\r\n  <!-- end of button -->\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ContractService } from 'src/app/services/contract.service';\r\nimport { GovernanceService } from 'src/app/services/governance.service';\r\nimport { LoadingIndicatorService } from 'src/app/services/loading-indicator.service';\r\n\r\n@Component({\r\n    selector: 'app-governance',\r\n    templateUrl: './governance.component.html',\r\n    styleUrls: ['./governance.component.css']\r\n})\r\nexport class GovernanceComponent implements OnInit {\r\n\r\n    datetime = new Date().toUTCString().replace(\"GMT\", \"UTC\");\r\n    governance = [];\r\n    community = [];\r\n    pageData;\r\n    clockTimer;\r\n\r\n    constructor(\r\n        private loadingIndicatorServ: LoadingIndicatorService,\r\n        private governanceServ: GovernanceService) { }\r\n\r\n    async ngOnInit() {\r\n\r\n        this.clockTimer = setInterval(() =>\r\n            this.datetime = (new Date()).toUTCString().replace(\"GMT\", \"UTC\"),\r\n            1000\r\n        );\r\n\r\n        this.loadingIndicatorServ.on();\r\n        Promise.all([\r\n            this.governanceServ.getVotings({ isCommunity: false }),\r\n            this.governanceServ.getVotings({ isCommunity: true })\r\n        ]).then(([governance, community]) => {\r\n            this.governance = this.enrichProposal(governance, false);\r\n            this.community = this.enrichProposal(community, true);\r\n            this.loadingIndicatorServ.off();\r\n        });\r\n\r\n        // Append to the body the two modals for eligible users and voters\r\n        let eligibleUsersModalWrapper = document.createElement(\"DIV\");\r\n        eligibleUsersModalWrapper.innerHTML = `<div class=\"modal fade text-dark\" id=\"eligibleUsersModal\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-dialog-scrollable\">\r\n        <div class=\"modal-content rounded-alot\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Eligible voters</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"mb-3 text-center\">\r\n                    <small>There are <span id=\"numberOfEligibleUsers\"></span> eligible voters.</small>\r\n                </div>\r\n                <ul class=\"p-0\" id=\"eligibleUsersList\"></ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`;\r\n        let votersModalWrapper = document.createElement(\"DIV\");\r\n        votersModalWrapper.innerHTML = `<div class=\"modal fade text-start\" id=\"votersModal\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-dialog-scrollable\">\r\n        <div class=\"modal-content rounded-alot\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Detailed voting results</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"mb-3 text-center\">\r\n                <small>A total of <span id=\"numberOfVoters\" votes were cast.</small>\r\n                </div>\r\n                <ul class=\"p-0\" id=\"votersList\"></ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`;\r\n        document.body.appendChild(eligibleUsersModalWrapper.firstElementChild);\r\n        document.body.appendChild(votersModalWrapper.firstElementChild);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearInterval(this.clockTimer);\r\n\r\n        // Remove eligible users and voters modals from body\r\n        document.body.removeChild(document.querySelector(\"#eligibleUsersModal\"));\r\n        document.body.removeChild(document.querySelector(\"#votersModal\"));\r\n    }\r\n\r\n    private enrichProposal(proposals, isCommunity) {\r\n\r\n        for (let p of proposals) {\r\n            p._id = 'proposal_' + Math.random().toString(36).substring(2);\r\n            p._isCollapsed = true;\r\n            p.startDatetime = new Date(p.time_start * 1e3).toUTCString().replace(\"GMT\", \"UTC\");\r\n            p.endDatetime = new Date(p.time_end * 1e3).toUTCString().replace(\"GMT\", \"UTC\");\r\n            p.hasExpired = Date.now() > p.time_end * 1e3;\r\n\r\n            p.isEligible = false;\r\n            p.hasVoted = false;\r\n            p.eligibleUsers = [];\r\n            p.votersDetail = [];\r\n\r\n            this.governanceServ.getVotes({\r\n                votingNumber: p.n,\r\n                isCommunity: isCommunity\r\n            })\r\n            .then(r => p.votes = r);\r\n\r\n            this.governanceServ.getVoters({\r\n                votingNumber: p.n,\r\n                isCommunity: isCommunity\r\n            })\r\n            .then(r => p.eligibleUsers = r);\r\n\r\n            this.governanceServ.getVotesDetails({\r\n                votingNumber: p.n,\r\n                isCommunity: isCommunity\r\n            })\r\n            .then(r => p.votersDetail = r);\r\n        }\r\n\r\n        // I'm reversing the proposals as they come in reverse cronological order\r\n        return proposals.reverse();\r\n    }\r\n \r\n}\r\n","<app-bg-changer\r\n  [imgSrc]=\"'assets/img/governance.jpg'\"\r\n></app-bg-changer>\r\n\r\n<div class=\"main py-5 px-3\">\r\n  <!-- header -->\r\n  <header class=\"container-medium text-center mb-5\">\r\n    <h1>Governance</h1>\r\n    <p class=\"lead\">\r\n        Everyone holding 1 EBOX or above is eligible to voice their opinion in community-related decisions.\r\n        Votes are weighted accordingly with token balance.\r\n    </p>\r\n    <p>For further understanding, please have a look at our <a class=\"text-reset\" href=\"https://ethbox.medium.com/ethbox-introducing-governance-540f237cda3e\" target=\"_blank\">Medium article</a> on governance.</p>\r\n  </header>\r\n  <!-- end of header -->\r\n\r\n  <!-- clock -->\r\n  <div class=\"container-medium text-center mb-5\">\r\n    <h2>{{ datetime }}</h2>\r\n  </div>\r\n  <!-- end of clock -->\r\n\r\n  <!-- proposals -->\r\n  <div class=\"container col-xxl-8\">\r\n\r\n    <div class=\"row g-3\">\r\n      <div class=\"col-lg-6\">\r\n        <app-governance-area title=\"Governance\" [proposals]=\"governance\"></app-governance-area>\r\n      </div>\r\n      <div class=\"col-lg-6\">\r\n        <app-governance-area title=\"Community\" [proposals]=\"community\"></app-governance-area>\r\n      </div>\r\n    </div>\r\n\r\n    \r\n  </div>\r\n  <!-- end of proposals -->\r\n</div>","import { Component } from '@angular/core';\r\nimport { LoadingIndicatorService } from '../../services/loading-indicator.service';\r\n\r\n@Component({\r\n    selector: 'app-loading-indicator',\r\n    templateUrl: './loading-indicator.component.html',\r\n    styleUrls: ['./loading-indicator.component.css']\r\n})\r\nexport class LoadingIndicatorComponent {\r\n\r\n    constructor(public loadingIndicatorServ: LoadingIndicatorService) { }\r\n\r\n}\r\n","<div\r\n  *ngIf=\"loadingIndicatorServ.isLoading$ | async\"\r\n  class=\"progress-line position-fixed\"\r\n  style=\"bottom: 0; right: 0; z-index: 999\"\r\n></div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LoadingIndicatorService } from 'src/app/services/loading-indicator.service';\r\nimport { ContractService } from '../../services/contract.service';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n@Component({\r\n    selector: 'app-over-the-counter',\r\n    templateUrl: './over-the-counter.component.html',\r\n    styleUrls: ['./over-the-counter.component.css']\r\n})\r\nexport class OverTheCounterComponent implements OnInit {\r\n\r\n    @ViewChild(\"recipientInput\") recipientInput;\r\n    @ViewChild(\"passwordInput\") passphraseInput;\r\n    @ViewChild(\"sendValueInput\") sendAmountInput;\r\n    @ViewChild(\"requestValueInput\") receiveAmountInput;\r\n    @ViewChild(\"messageTextarea\") messageTextarea;\r\n\r\n    isAdvancedUser = JSON.parse(localStorage.getItem(\"isAdvancedUser\")) || false;\r\n    keepInputs = JSON.parse(localStorage.getItem(\"shouldSendKeepInputs\")) || false;\r\n    \r\n    password = '';\r\n    recipient;\r\n    sendTokenSelected;\r\n    sendTokenBalance;\r\n    sendValue;\r\n    requestTokenSelected;\r\n    requestValue;\r\n    message;\r\n\r\n    chainId;\r\n    isChainSupported;\r\n    selectedAccount;\r\n    isAppReady;\r\n\r\n    isButtonDisabled = true;\r\n    buttonFunction;\r\n    buttonMessage;\r\n\r\n    recipientInputText;\r\n    recipientInputColor = \"text-muted\";\r\n    sendValueInputText;\r\n    sendValueInputColor = \"text-muted\";\r\n    requestValueInputText;\r\n    requestValueInputColor = \"text-muted\";\r\n\r\n    private subscriptions = [];\r\n\r\n    constructor(\r\n        public contractServ: ContractService,\r\n        public loadingIndicatorServ: LoadingIndicatorService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // Setting up the reactive code to load and reload boxes\r\n        [\r\n            this.contractServ.chainId$,\r\n            this.contractServ.isChainSupported$,\r\n            this.contractServ.selectedAccount$,\r\n            this.contractServ.isAppReady$,\r\n            this.contractServ.boxInteraction$,\r\n            this.contractServ.approvalInteraction$\r\n        ].forEach(obs => \r\n            this.subscriptions.push(\r\n                obs.subscribe(() => this.syncButtonFunctionality())));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        // When the component gets destroyed unsubscribe from everything to prevent memory leaks\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    setAdvancedUser() {\r\n        this.isAdvancedUser = !this.isAdvancedUser;\r\n        localStorage.setItem(\"isAdvancedUser\", JSON.stringify(this.isAdvancedUser));\r\n    }\r\n\r\n    setKeepInputs(checkbox) {\r\n        this.keepInputs = checkbox.checked;\r\n        localStorage.setItem(\"shouldSendKeepInputs\", JSON.stringify(checkbox.checked));\r\n    }\r\n\r\n    // This is where the button gets its text and functionality updated\r\n    syncButtonFunctionality() {\r\n    \r\n        // Updating local variables\r\n        this.chainId = this.contractServ.chainId$.getValue();\r\n        this.isChainSupported = this.contractServ.isChainSupported$.getValue();\r\n        this.selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n        this.isAppReady = this.contractServ.isAppReady$.getValue();\r\n\r\n        // Calculating a message for the user\r\n        if (!this.chainId || !this.selectedAccount) {\r\n            this.buttonMessage = 'Please connect your wallet first!';\r\n            this.buttonFunction = () => this.contractServ.connect();\r\n            this.isButtonDisabled = false;\r\n            return;\r\n        }\r\n        if (!this.isChainSupported) {\r\n            this.buttonMessage = 'Wrong network – Please use Ethereum, BSC, Polygon or Reef!';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (!this.isAppReady) {\r\n            this.buttonMessage = 'Initializing ethbox smart contract...';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n\r\n        // About the passphrase\r\n        // First on top because it's NON mandatory\r\n        let { score: passStrength } = (<any>window).zxcvbn(this.password);\r\n        Array.from(document.querySelectorAll(\".pass-rect-strength\"))\r\n            .forEach((e, i) => {\r\n                if (!this.password || i > passStrength) {\r\n                    e.classList.add(\"d-none\");\r\n                } else {\r\n                    e.classList.remove(\"d-none\");\r\n                }\r\n            });\r\n\r\n        // About the recipient\r\n        if (!this.recipient) {\r\n\r\n            this.recipientInputColor = \"text-warning\";\r\n            this.recipientInputText = \"Recipient is required\";\r\n\r\n            this.buttonMessage = 'Recipient is required';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (!this.contractServ.isValidAddress(this.recipient)) {\r\n\r\n            this.recipientInputColor = \"text-danger\";\r\n            this.recipientInputText = \"Recipient is invalid\";\r\n\r\n            this.buttonMessage = 'Recipient is invalid';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        // Recipient tests are passed\r\n        this.recipientInputText = null;\r\n        // Showing a message for self-boxes\r\n        if (this.recipient === this.selectedAccount) {\r\n            this.recipientInputColor = \"text-muted\";\r\n            this.recipientInputText = \"Recipient is your own address\";\r\n        }\r\n\r\n        if (!this.sendTokenSelected || !this.requestTokenSelected) {\r\n            this.buttonMessage = 'Choose tokens';\r\n            this.isButtonDisabled = true;\r\n        }\r\n\r\n        // About the send token\r\n        if (!this.sendTokenSelected) {\r\n            this.sendValueInputColor = \"text-warning\";\r\n            this.sendValueInputText = \"Choose send token\";\r\n            return;\r\n        }\r\n        if (this.sendTokenSelected && !this.sendTokenBalance) {\r\n\r\n            this.sendValueInputColor = \"text-muted\";\r\n            this.sendValueInputText = \"Loading token balance...\";\r\n\r\n            this.buttonMessage = 'Loading token balance...';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        // If the token is selected, the balance has been read but the user has not enough allowance\r\n        if (this.sendTokenSelected \r\n        && this.sendTokenBalance.decimalAllowance == '0'\r\n        || (new BigNumber(this.sendValue)).gt(this.sendTokenBalance.decimalAllowance)) {\r\n\r\n            this.sendValueInputColor = \"text-warning\";\r\n            this.sendValueInputText = `You have to approve ${this.sendTokenSelected.symbol}`;\r\n\r\n            this.buttonMessage = `Approve ${this.sendTokenSelected.symbol}`;\r\n            this.buttonFunction = () => \r\n                this.contractServ.approveMax(this.sendTokenSelected.address);\r\n            this.isButtonDisabled = false;\r\n            return;\r\n        }\r\n        // About the send value\r\n        if (!this.sendValue) {\r\n\r\n            this.sendValueInputColor = \"text-warning\";\r\n            this.sendValueInputText = \"Send amount is required\";\r\n\r\n            this.buttonMessage = 'Send amount is required';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.isValueInvalid(this.sendValue)) {\r\n\r\n            this.sendValueInputColor = \"text-danger\";\r\n            this.sendValueInputText = \"Send amount is invalid\";\r\n\r\n            this.buttonMessage = 'Send amount is invalid';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.isValueTooLow(this.sendValue, this.sendTokenSelected.decimals)) {\r\n            \r\n            this.sendValueInputColor = \"text-danger\";\r\n            this.sendValueInputText = \"Send amount is too low\";\r\n            \r\n            this.buttonMessage = 'Send amount is too low';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.isValueTooHigh(this.sendValue, this.sendTokenBalance.decimalValue)) {\r\n            \r\n            this.sendValueInputColor = \"text-danger\";\r\n            this.sendValueInputText = \"Send amount is too high\";\r\n\r\n            this.buttonMessage = 'Send amount is too high';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        // Send Value tests are passed\r\n        this.sendValueInputText = null;\r\n\r\n        // About the request token\r\n        if (!this.requestTokenSelected) {\r\n            this.requestValueInputColor = \"text-warning\";\r\n            this.requestValueInputText = \"Choose request token\";\r\n            return;\r\n        }\r\n        // About the request value\r\n        if (!this.requestValue) {\r\n\r\n            this.requestValueInputColor = \"text-danger\";\r\n            this.requestValueInputText = \"Request amount is required\";\r\n\r\n            this.buttonMessage = 'Request amount is required';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.isValueInvalid(this.requestValue)) {\r\n\r\n            this.requestValueInputColor = \"text-danger\";\r\n            this.requestValueInputText = \"Request amount is invalid\";\r\n\r\n            this.buttonMessage = 'Request amount is invalid';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.isValueTooLow(this.requestValue, this.requestTokenSelected.decimals)) {\r\n            \r\n            this.requestValueInputColor = \"text-danger\";\r\n            this.requestValueInputText = \"Request amount is too low\";\r\n\r\n            this.buttonMessage = 'Request amount is too low';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        // Request Value tests are passed\r\n        this.requestValueInputText = null;\r\n\r\n        // All checks are passed\r\n        this.buttonMessage = 'Send';\r\n        this.buttonFunction = () => this.sendBox();\r\n        this.isButtonDisabled = false;\r\n    }\r\n\r\n    isValueInvalid(value) {\r\n        return !/^\\d*\\.?\\d+$/.test(value);\r\n    }\r\n\r\n    isValueTooLow(value, decimals) {\r\n        let multiplier = 1 + '0'.repeat(decimals);\r\n        let lowestAllowedDecimal = (new BigNumber(1)).dividedBy(multiplier);\r\n        return (new BigNumber(value)).lt(lowestAllowedDecimal);\r\n    }\r\n\r\n    isValueTooHigh(value, decimalValue) {\r\n        return (new BigNumber(value)).gt(decimalValue);\r\n    }\r\n\r\n    async sendBox() {\r\n\r\n        console.log('Recipient is', this.recipient);\r\n        console.log('Passphrase is', this.password);\r\n        console.log('Send token address is', this.sendTokenSelected.address);\r\n        console.log('Send amount is', this.sendValue);\r\n        console.log('Request token address is', this.requestTokenSelected.address);\r\n        console.log('Request amount is', this.requestValue);\r\n\r\n        try {\r\n            let receipt = await this.contractServ.createBox({\r\n                password: this.password,\r\n                recipient: this.recipient,\r\n                sender: this.contractServ.selectedAccount$.getValue(),\r\n                sendTokenAddress: this.sendTokenSelected.address,\r\n                sendDecimalValue: this.sendValue,\r\n                requestTokenAddress: this.requestTokenSelected.address,\r\n                requestDecimalValue: this.requestValue,\r\n                message: this.message\r\n            });\r\n\r\n            // Clean the inputs if keepInputs is false\r\n            if (!this.keepInputs) {\r\n                // To reset the inputs and everything tied to those I have to:\r\n                // 1. Reset the nativeElement value\r\n                // 2. Dispatch an input event\r\n                let inputsToClean = [\r\n                    this.recipientInput.nativeElement,\r\n                    this.passphraseInput.nativeElement,\r\n                    this.sendAmountInput.nativeElement,\r\n                    this.receiveAmountInput.nativeElement\r\n                ]\r\n                \r\n                if (this.contractServ.isTestnet()) {\r\n                    inputsToClean.push(this.messageTextarea.nativeElement);\r\n                }\r\n\r\n                inputsToClean.\r\n                    forEach(e => {\r\n                        e.value = \"\";\r\n                        e.dispatchEvent(\r\n                            new Event(\"input\", { bubbles: true, cancelable: true })\r\n                        );\r\n                    });\r\n            }\r\n        } catch (e) {\r\n            // NOP because the error is already shown to the user by the toaster\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n","<app-password-strength-visualizer\r\n  [data]=\"{\r\n    img: 'assets/img/over-the-counter.jpg',\r\n    bg: 'assets/img/bg-blob-emerald.jpg'\r\n  }\"\r\n></app-password-strength-visualizer>\r\n\r\n<div class=\"main centerer py-5 px-3\">\r\n  <div class=\"container-small\">\r\n    <!-- swapper -->\r\n    <div class=\"bg-lightalpha rounded-alot shadow-lg\">\r\n      <div class=\"align-items-center d-flex p-3\">\r\n        <div class=\"flex-grow-1\">\r\n          <h4>\r\n            <i class=\"bi bi-shuffle\"></i>\r\n            OTC Trade\r\n          </h4>\r\n          <small class=\"text-muted\"\r\n            >Exchange ETH and ERC-20 tokens trustlessly through ethbox. The transaction will only be fulfilled once both parties have deposited their funds.</small\r\n          >\r\n        </div>\r\n        <a href=\"#\" routerLink=\"/boxes/sent\" class=\"btn btn-lg\">\r\n          <i class=\"bi bi-clock-history\"></i>\r\n        </a>\r\n      </div>\r\n      <div class=\"d-flex flex-column p-3\">\r\n        <!-- recipient input -->\r\n        <div class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"recipient-input\" class=\"w-100\">\r\n            Recipient\r\n          </label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              #recipientInput\r\n              (input)=\"recipient = recipientInput.value; syncButtonFunctionality()\"\r\n              id=\"recipient-input\"\r\n              class=\"flex-grow-1 me-3 input-nostyle\"\r\n              type=\"text\"\r\n              placeholder=\"Insert recipient address\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n            />\r\n            <app-address-book\r\n              (onAddressSelected)=\"\r\n                recipient = $event.address;\r\n                recipientInput.value = $event.address;\r\n                syncButtonFunctionality()\r\n              \"\r\n            ></app-address-book>\r\n          </div>\r\n          <small class=\"{{ recipientInputColor }}\">{{ recipientInputText }}</small>\r\n        </div>\r\n        <!-- end of recipient input -->\r\n\r\n        <!-- passphrase input -->\r\n        <div class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"password-input\" class=\"w-100\">\r\n            Passphrase\r\n          </label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              #passwordInput\r\n              (input)=\"password = passwordInput.value; syncButtonFunctionality()\"\r\n              id=\"password-input\"\r\n              class=\"flex-grow-1 me-3 input-nostyle\"\r\n              type=\"password\"\r\n              placeholder=\"Choose a passphrase\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n            />\r\n            <button\r\n              (mousedown)=\"passwordInput.setAttribute('type', 'text')\"\r\n              (mouseup)=\"passwordInput.setAttribute('type', 'password')\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n              class=\"btn text-white\"\r\n            >\r\n              <i class=\"bi bi-eye\"></i>\r\n            </button>\r\n          </div>\r\n          <small class=\"d-flex gap-1\">\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: red; width: 15px; height: 5px;\"></div>\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: orange; width: 15px; height: 5px;\"></div>\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: yellow; width: 15px; height: 5px;\"></div>\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: greenyellow; width: 15px; height: 5px;\"></div>\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: green; width: 15px; height: 5px;\"></div>\r\n          </small>\r\n        </div>\r\n        <!-- end of passphrase input -->\r\n\r\n        <!-- send amount input -->\r\n        <div class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"send-amount-input\" class=\"w-100\">\r\n            Send amount\r\n          </label>\r\n          <div class=\"d-flex flex-column flex-lg-row my-2 my-lg-0 gap-2\">\r\n            <input\r\n              #sendValueInput\r\n              (input)=\"sendValue = sendValueInput.value; syncButtonFunctionality()\"\r\n              id=\"send-amount-input\"\r\n              class=\"input-nostyle flex-grow-1\"\r\n              type=\"text\"\r\n              placeholder=\"0.0\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n            />\r\n            <app-token-selector\r\n              (onTokenSelected)=\"sendTokenSelected = $event; syncButtonFunctionality()\"\r\n              (onTokenBalanceUpdated)=\"sendTokenBalance = $event; syncButtonFunctionality()\"\r\n            ></app-token-selector>\r\n          </div>\r\n          <small class=\"{{ sendValueInputColor }}\">{{ sendValueInputText }}</small>\r\n        </div>\r\n        <!-- end of send amount input -->\r\n\r\n        <!-- request amount input -->\r\n        <div class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"request-amount-input\" class=\"w-100\">\r\n            Request amount\r\n          </label>\r\n          <div class=\"d-flex flex-column flex-lg-row my-2 my-lg-0 gap-2\">\r\n            <input\r\n              #requestValueInput\r\n              (input)=\"requestValue = requestValueInput.value; syncButtonFunctionality()\"\r\n              id=\"request-amount-input\"\r\n              class=\"input-nostyle flex-grow-1\"\r\n              type=\"text\"\r\n              placeholder=\"0.0\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n            />\r\n            <app-token-selector\r\n              (onTokenSelected)=\"requestTokenSelected = $event; syncButtonFunctionality()\"\r\n              [isBalanceEnabled]=\"false\"\r\n            ></app-token-selector>\r\n          </div>\r\n          <small class=\"{{ requestValueInputColor }}\">{{ requestValueInputText }}</small>\r\n        </div>\r\n        <!-- end of request amount input -->\r\n\r\n        <!-- message textarea -->\r\n        <div *ngIf=\"contractServ.isTestnet()\" class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"message-textarea\" class=\"w-100\">\r\n            Message\r\n          </label>\r\n          <div class=\"d-flex flex-column flex-lg-row my-2 my-lg-0 gap-2\">\r\n            <textarea\r\n              #messageTextarea\r\n              (input)=\"message = messageTextarea.value;\"\r\n              id=\"message-textarea\"\r\n              class=\"input-nostyle flex-grow-1\"\r\n              placeholder=\"An optional message\"\r\n              [disabled]=\"\r\n                !isAppReady ||\r\n                (loadingIndicatorServ.isLoading$ | async)\r\n                  ? 'disabled'\r\n                  : null\r\n              \"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <!-- end of message textarea -->\r\n\r\n        <div class=\"text-end\">\r\n          <a class=\"btn btn-outline-eboxprimary rounded-alot\" data-bs-toggle=\"collapse\" href=\"#advanced-options\" (click)=\"setAdvancedUser()\">\r\n            Advanced options\r\n            <i class=\"bi bi-three-dots-vertical\"></i>\r\n          </a>\r\n        </div>\r\n\r\n        <div class=\"collapse\" [class.show]=\"isAdvancedUser\" id=\"advanced-options\">\r\n          <div class=\"d-flex flex-column gap-3 border p-3 mt-3 rounded-alot\">\r\n            <!-- allow partial checkbox -->\r\n            <!-- <div class=\"bg-eboxdark p-3 rounded-alot text-white\">\r\n              <input class=\"form-check-input me-3\" type=\"checkbox\" value=\"\" id=\"allow-partial-checkbox\">\r\n              <label class=\"form-check-label\" for=\"allow-partial-checkbox\">\r\n                Allow partial withdrawals\r\n              </label>\r\n            </div> -->\r\n            <!-- end of allow partial checkbox -->\r\n\r\n            <!-- timelock input -->\r\n            <!-- <div class=\"bg-eboxdark rounded-alot text-white\">\r\n              <label for=\"date-lock-input\" class=\"pt-3 px-3 w-100\">\r\n                Time available at\r\n              </label>\r\n              <div class=\"d-flex flex-column flex-lg-row gap-3 p-3\">\r\n                <input \r\n                  id=\"date-lock-input\"\r\n                  type=\"date\"\r\n                  class=\"border-0 p-2 rounded-alot\"\r\n                  style=\"outline: none\">\r\n                <input \r\n                  id=\"time-lock-input\"\r\n                  type=\"time\"\r\n                  class=\"border-0 p-2 rounded-alot\"\r\n                  style=\"outline: none\">\r\n              </div>\r\n            </div> -->\r\n            <!-- end of timelock input -->\r\n\r\n            <!-- email address input -->\r\n            <!-- <div class=\"bg-eboxdark rounded-alot text-muted\">\r\n              <label for=\"recipient-input\" class=\"pt-3 px-3 w-100\" style=\"opacity: .5\">\r\n                Notify email addresses (not yet available)\r\n              </label>\r\n              <div class=\"d-flex p-3 pt-1\" style=\"opacity: .5\">\r\n                <ul class=\"list-unstyled flex-grow-1 mb-0\">\r\n                  <li>\r\n                    <button class=\"btn text-muted\">\r\n                      <i class=\"bi bi-dash-circle-fill\"></i>\r\n                    </button>\r\n                    abc@abc.com\r\n                  </li>\r\n                </ul>\r\n                <button class=\"btn text-muted\">\r\n                  <i class=\"bi bi-plus-circle-fill\"></i>\r\n                </button>\r\n              </div>\r\n            </div> -->\r\n            <!-- end of email address input -->\r\n\r\n            <!-- privacy checkbox -->\r\n            <div class=\"bg-eboxdark p-3 rounded-alot text-white\">\r\n              <input class=\"form-check-input me-3\" type=\"checkbox\" value=\"\" id=\"privacy-checkbox\" disabled>\r\n              <label class=\"form-check-label\" for=\"privacy-checkbox\">\r\n                Enable privacy mode (not yet available)\r\n              </label>\r\n            </div>\r\n            <!-- end of privacy checkbox -->\r\n\r\n            <!-- keep inputs checkbox -->\r\n            <div class=\"bg-eboxdark p-3 rounded-alot text-white\">\r\n              <input\r\n                #keepInputsCheckbox\r\n                class=\"form-check-input me-3\"\r\n                type=\"checkbox\"\r\n                [checked]=\"keepInputs ? 'checked' : ''\"\r\n                (change)=\"setKeepInputs(keepInputsCheckbox)\"\r\n                id=\"keep-inputs\"\r\n              >\r\n              <label class=\"form-check-label\" for=\"keep-inputs\">\r\n                Keep inputs after sending\r\n              </label>\r\n            </div>\r\n            <!-- end of keep inputs checkbox -->\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          class=\"btn btn-eboxprimary rounded-alot p-3 mt-3\"\r\n          (click)=\"buttonFunction()\"\r\n          [disabled]=\"\r\n            isButtonDisabled || (loadingIndicatorServ.isLoading$ | async)\r\n              ? 'disabled'\r\n              : null\r\n          \"\r\n        >\r\n          {{ buttonMessage }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!-- end of swapper -->\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-page-not-found',\r\n    templateUrl: './page-not-found.component.html',\r\n    styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent {\r\n\r\n    constructor() { }\r\n\r\n}\r\n","<app-bg-changer\r\n  [imgSrc]=\"'assets/img/bg-blob-seashore.jpg'\"\r\n></app-bg-changer>\r\n\r\n<div class=\"centerer main\">\r\n  <div class=\"text-center\">\r\n    <h2 class=\"display-1\">404</h2>\r\n    <div class=\"lead\">Page not found</div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, Input, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-password-strength-visualizer',\r\n    templateUrl: './password-strength-visualizer.component.html',\r\n    styleUrls: ['./password-strength-visualizer.component.css']\r\n})\r\nexport class PasswordStrengthVisualizerComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() data;\r\n\r\n    private onWindowResize = () => {\r\n\r\n        this.setCanvasSize();\r\n        this.render();\r\n    };\r\n    private passwordInput;\r\n    private canvas;\r\n    private img = new Image();\r\n    private pxFactor = 100;\r\n    private posterImg;\r\n    private ctx;\r\n    private imgRatio;\r\n    private wrapperRatio;\r\n    private newWidth;\r\n    private newHeight;\r\n    private newX;\r\n    private newY;\r\n\r\n    ngAfterViewInit() {\r\n\r\n        this.passwordInput = document.querySelector('#password-input');\r\n        this.canvas = document.querySelector('#password-canvas');\r\n        this.posterImg = this.canvas.getAttribute('data-img-src');\r\n\r\n        // The following code was taken and modified from http://jsfiddle.net/u6apxgfk/390/ and merged with https://codepen.io/bassta/pen/OPVzyB?editors=1010\r\n\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        this.passwordInput.addEventListener('input', this.onPasswordInput.bind(this));\r\n        this.img.onload = () => {\r\n\r\n            let imgWidth = this.img.width;\r\n            let imgHeight = this.img.height;\r\n            this.imgRatio = imgWidth / imgHeight;\r\n            this.setCanvasSize();\r\n            this.render();\r\n        };\r\n\r\n        this.img.src = this.posterImg;\r\n    }\r\n\r\n    private onPasswordInput() {\r\n\r\n        let val = this.passwordInput.value;\r\n        let result = (<any>window).zxcvbn(val);\r\n        // We want to reveal the image as the password gets stronger. Since the zxcvbn.score has\r\n        // only 5 different values (0-4) we will use the zxcvbn.guesses_log10 output.\r\n        // The guesses_log10 will be >= 11 when the password is considered strong,\r\n        // so we want to map a factor of 3 (pixelated) to 100 (clear image) to \r\n        // a value of 0 to 11 of guesses_log10.\r\n        // This result will be used in the render function.\r\n        this.pxFactor = -97 / 11 * Math.min(11, Math.round(result.guesses_log10)) + 100;\r\n\r\n        // so we see most of the time pixels rather than approaching a clear image sooner..\r\n        if (this.pxFactor != 3 && this.pxFactor != 100) {\r\n            this.pxFactor -= this.pxFactor / 100 * 50;\r\n        }\r\n\r\n        this.render();\r\n    }\r\n\r\n    private setCanvasSize() {\r\n\r\n        this.canvas.width = this.canvas.offsetWidth;\r\n        this.canvas.height = this.canvas.offsetHeight;\r\n    }\r\n\r\n    private render() {\r\n\r\n        let w = this.canvas.offsetWidth;\r\n        let h = this.canvas.offsetHeight;\r\n\r\n        this.newWidth = w;\r\n        this.newHeight = h;\r\n        this.newX = 0;\r\n        this.newY = 0;\r\n        this.wrapperRatio = this.newWidth / this.newHeight;\r\n\r\n        if (this.wrapperRatio > this.imgRatio) {\r\n            this.newHeight = Math.round(w / this.imgRatio);\r\n            this.newY = (h - this.newHeight) / 2;\r\n        }\r\n        else {\r\n            this.newWidth = Math.round(h * this.imgRatio);\r\n            this.newX = (w - this.newWidth) / 2;\r\n        }\r\n\r\n        // pxFactor will depend on the current typed password.\r\n        // values will be in the range [1,100].\r\n        let size = this.pxFactor * 0.01;\r\n\r\n        // turn off image smoothing - this will give the pixelated effect\r\n        this.ctx.mozImageSmoothingEnabled = size === 1 ? true : false;\r\n        this.ctx.webkitImageSmoothingEnabled = size === 1 ? true : false;\r\n        this.ctx.imageSmoothingEnabled = size === 1 ? true : false;\r\n\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        // draw original image to the scaled size\r\n        this.ctx.drawImage(this.img, 0, 0, w * size, h * size);\r\n        // then draw that scaled image thumb back to fill canvas\r\n        // As smoothing is off the result will be pixelated\r\n        this.ctx.drawImage(this.canvas, 0, 0, w * size, h * size, this.newX, this.newY, this.newWidth + .05 * w, this.newHeight + .05 * h);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n}\r\n","<canvas\r\n  id=\"password-canvas\"\r\n  [attr.data-img-src]=\"data.img\"\r\n  class=\"bg-cover\"\r\n  attr.style=\"background-image: url( {{ data.bg }} )\"\r\n></canvas>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { LoadingIndicatorService } from 'src/app/services/loading-indicator.service';\r\nimport { ContractService } from '../../services/contract.service';\r\nimport { ADDRESS_ZERO, ZERO } from '../../constants/various';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n@Component({\r\n    selector: 'app-send',\r\n    templateUrl: './send.component.html',\r\n    styleUrls: ['./send.component.css']\r\n})\r\nexport class SendComponent implements OnInit {\r\n\r\n    @ViewChild(\"recipientInput\") recipientInput;\r\n    @ViewChild(\"passwordInput\") passphraseInput;\r\n    @ViewChild(\"sendValueInput\") sendAmountInput;\r\n    @ViewChild(\"messageTextarea\") messageTextarea;\r\n\r\n    isAdvancedUser = JSON.parse(localStorage.getItem(\"isAdvancedUser\")) || false;\r\n    keepInputs = JSON.parse(localStorage.getItem(\"shouldSendKeepInputs\")) || false;\r\n    \r\n    isPrivacyEnabled = false;\r\n    password = '';\r\n    recipient;\r\n    sendTokenSelected;\r\n    sendTokenBalance;\r\n    sendValue;\r\n    message;\r\n\r\n    chainId;\r\n    isChainSupported;\r\n    selectedAccount;\r\n    isAppReady;\r\n\r\n    isButtonDisabled = true;\r\n    buttonFunction;\r\n    buttonMessage;\r\n\r\n    recipientInputText;\r\n    recipientInputColor = \"text-muted\";\r\n    sendValueInputText;\r\n    sendValueInputColor = \"text-muted\";\r\n\r\n    private subscriptions = [];\r\n\r\n    constructor(\r\n        public contractServ: ContractService,\r\n        public loadingIndicatorServ: LoadingIndicatorService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // Setting up the reactive code to load and reload boxes\r\n        [\r\n            this.contractServ.chainId$,\r\n            this.contractServ.isChainSupported$,\r\n            this.contractServ.selectedAccount$,\r\n            this.contractServ.isAppReady$,\r\n            this.contractServ.boxInteraction$,\r\n            this.contractServ.approvalInteraction$\r\n        ].forEach(obs => \r\n            this.subscriptions.push(\r\n                obs.subscribe(() => this.syncButtonFunctionality())));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        // When the component gets destroyed unsubscribe from everything to prevent memory leaks\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    setAdvancedUser() {\r\n        this.isAdvancedUser = !this.isAdvancedUser;\r\n        localStorage.setItem(\"isAdvancedUser\", JSON.stringify(this.isAdvancedUser));\r\n    }\r\n\r\n    setKeepInputs(checkbox) {\r\n        this.keepInputs = checkbox.checked;\r\n        localStorage.setItem(\"shouldSendKeepInputs\", JSON.stringify(checkbox.checked));\r\n    }\r\n\r\n    // This is where the button gets its text and functionality updated\r\n    syncButtonFunctionality() {\r\n    \r\n        // Updating local variables\r\n        this.chainId = this.contractServ.chainId$.getValue();\r\n        this.isChainSupported = this.contractServ.isChainSupported$.getValue();\r\n        this.selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n        this.isAppReady = this.contractServ.isAppReady$.getValue();\r\n\r\n        // Calculating a message for the user\r\n        if (!this.chainId || !this.selectedAccount) {\r\n            this.buttonMessage = 'Please connect your wallet first!';\r\n            this.buttonFunction = () => this.contractServ.connect();\r\n            this.isButtonDisabled = false;\r\n            return;\r\n        }\r\n        if (!this.isChainSupported) {\r\n            this.buttonMessage = 'Wrong network – Please use Ethereum, BSC, Polygon or Reef!';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (!this.isAppReady) {\r\n            this.buttonMessage = 'Initializing ethbox smart contract...';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n\r\n        // About the passphrase\r\n        // First on top because it's NON mandatory\r\n        let { score: passStrength } = (<any>window).zxcvbn(this.password);\r\n        Array.from(document.querySelectorAll(\".pass-rect-strength\"))\r\n            .forEach((e, i) => {\r\n                if (!this.password || i > passStrength) {\r\n                    e.classList.add(\"d-none\");\r\n                } else {\r\n                    e.classList.remove(\"d-none\");\r\n                }\r\n            });\r\n\r\n        // About the recipient\r\n        if (!this.recipient) {\r\n\r\n            this.recipientInputColor = \"text-warning\";\r\n            this.recipientInputText = \"Recipient is required\";\r\n\r\n            this.buttonMessage = 'Recipient is required';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (!this.contractServ.isValidAddress(this.recipient)) {\r\n\r\n            this.recipientInputColor = \"text-danger\";\r\n            this.recipientInputText = \"Recipient is invalid\";\r\n\r\n            this.buttonMessage = 'Recipient is invalid';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        // Recipient tests are passed\r\n        this.recipientInputText = null;\r\n        // Showing a message for self-boxes\r\n        if (this.recipient === this.selectedAccount) {\r\n            this.recipientInputColor = \"text-muted\";\r\n            this.recipientInputText = \"Recipient is your own address\";\r\n        }\r\n\r\n        // About the send token\r\n        if (!this.sendTokenSelected) {\r\n\r\n            this.sendValueInputColor = \"text-warning\";\r\n            this.sendValueInputText = \"Choose a token\";\r\n\r\n            this.buttonMessage = 'Choose a token';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.sendTokenSelected && !this.sendTokenBalance) {\r\n\r\n            this.sendValueInputColor = \"text-muted\";\r\n            this.sendValueInputText = \"Loading token balance...\";\r\n\r\n            this.buttonMessage = 'Loading token balance...';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        // If the token is selected, the balance has been read but the user has not enough allowance\r\n        if (this.sendTokenSelected \r\n        && this.sendTokenBalance.decimalAllowance == '0'\r\n        || (new BigNumber(this.sendValue)).gt(this.sendTokenBalance.decimalAllowance)) {\r\n\r\n            this.sendValueInputColor = \"text-warning\";\r\n            this.sendValueInputText = `You have to approve ${this.sendTokenSelected.symbol}`;\r\n\r\n            this.buttonMessage = `Approve ${this.sendTokenSelected.symbol}`;\r\n            this.buttonFunction = () => \r\n                this.contractServ.approveMax(this.sendTokenSelected.address);\r\n            this.isButtonDisabled = false;\r\n            return;\r\n        }\r\n        // About the send value\r\n        if (!this.sendValue) {\r\n\r\n            this.sendValueInputColor = \"text-warning\";\r\n            this.sendValueInputText = \"Send amount is required\";\r\n\r\n            this.buttonMessage = 'Send amount is required';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.isValueInvalid(this.sendValue)) {\r\n            \r\n            this.sendValueInputColor = \"text-danger\";\r\n            this.sendValueInputText = \"Send amount is invalid\";\r\n\r\n            this.buttonMessage = 'Send amount is invalid';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.isValueTooLow(this.sendValue, this.sendTokenSelected.decimals)) {\r\n            \r\n            this.sendValueInputColor = \"text-danger\";\r\n            this.sendValueInputText = \"Send amount is too low\";\r\n\r\n            this.buttonMessage = 'Send amount is too low';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        if (this.isValueTooHigh(this.sendValue, this.sendTokenBalance.decimalValue)) {\r\n            \r\n            this.sendValueInputColor = \"text-danger\";\r\n            this.sendValueInputText = \"Send amount is too high\";\r\n\r\n            this.buttonMessage = 'Send amount is too high';\r\n            this.isButtonDisabled = true;\r\n            return;\r\n        }\r\n        // Send Value tests are passed\r\n        this.sendValueInputText = null;\r\n\r\n        // All checks are passed\r\n        this.buttonMessage = 'Send';\r\n        this.buttonFunction = () => this.sendBox();\r\n        this.isButtonDisabled = false;\r\n    }\r\n\r\n    isValueInvalid(value) {\r\n        return !/^\\d*\\.?\\d+$/.test(value);\r\n    }\r\n\r\n    isValueTooLow(value, decimals) {\r\n        let multiplier = 1 + '0'.repeat(decimals);\r\n        let lowestAllowedDecimal = (new BigNumber(1)).dividedBy(multiplier);\r\n        return (new BigNumber(value)).lt(lowestAllowedDecimal);\r\n    }\r\n\r\n    isValueTooHigh(value, decimalValue) {\r\n        return (new BigNumber(value)).gt(decimalValue);\r\n    }\r\n\r\n    async sendBox() {\r\n\r\n        console.log('Privacy is', this.isPrivacyEnabled);\r\n        console.log('Passphrase is', this.password);\r\n        console.log('Recipient is', this.recipient);\r\n        console.log('Send token address is', this.sendTokenSelected.address);\r\n        console.log('Send amount is', this.sendValue);\r\n\r\n        try {\r\n            let receipt;\r\n            if (this.isPrivacyEnabled) {\r\n                let receipt = await this.contractServ.createBoxWithPrivacy({\r\n                    password: this.password,\r\n                    recipient: this.recipient,\r\n                    sender: this.contractServ.selectedAccount$.getValue(),\r\n                    sendTokenAddress: this.sendTokenSelected.address,\r\n                    sendDecimalValue: this.sendValue,\r\n                    requestTokenAddress: ADDRESS_ZERO,\r\n                    requestDecimalValue: ZERO,\r\n                    message: this.message\r\n                });\r\n                return;\r\n            } else {\r\n                let receipt = await this.contractServ.createBox({\r\n                    password: this.password,\r\n                    recipient: this.recipient,\r\n                    sender: this.contractServ.selectedAccount$.getValue(),\r\n                    sendTokenAddress: this.sendTokenSelected.address,\r\n                    sendDecimalValue: this.sendValue,\r\n                    requestTokenAddress: ADDRESS_ZERO,\r\n                    requestDecimalValue: ZERO,\r\n                    message: this.message\r\n                });\r\n            }\r\n\r\n            // Clean the inputs if keepInputs is false\r\n            if (!this.keepInputs) {\r\n                // To reset the inputs and everything tied to those I have to:\r\n                // 1. Reset the nativeElement value\r\n                // 2. Dispatch an input event\r\n                let inputsToClean = [\r\n                    this.recipientInput.nativeElement,\r\n                    this.passphraseInput.nativeElement,\r\n                    this.sendAmountInput.nativeElement\r\n                ];\r\n\r\n                if (this.contractServ.isTestnet()) {\r\n                    inputsToClean.push(this.messageTextarea.nativeElement);\r\n                }\r\n\r\n                inputsToClean.\r\n                    forEach(e => {\r\n                        e.value = \"\";\r\n                        e.dispatchEvent(\r\n                            new Event(\"input\", { bubbles: true, cancelable: true })\r\n                        );\r\n                    });\r\n            }\r\n        } catch(e) {\r\n            // NOP because the error is already shown to the user by the toaster\r\n        }\r\n    }\r\n\r\n}\r\n","<app-password-strength-visualizer\r\n  [data]=\"{\r\n    img: 'assets/img/send.jpg',\r\n    bg: 'assets/img/bg-blob-emerald.jpg'\r\n  }\"\r\n></app-password-strength-visualizer>\r\n\r\n<div class=\"main centerer py-5 px-3\">\r\n  <div class=\"container-small\">\r\n    <!-- swapper -->\r\n    <div class=\"bg-lightalpha rounded-alot shadow-lg\">\r\n      <div class=\"align-items-center d-flex p-3\">\r\n        <div class=\"flex-grow-1\">\r\n          <h4>\r\n            Send\r\n            <i class=\"bi bi-box\"></i>\r\n          </h4>\r\n          <small class=\"text-muted\"\r\n            >Safely send ETH and ERC-20 tokens through ethbox. Only the recipient will be able to retrieve the funds using the correct passphrase.</small\r\n          >\r\n        </div>\r\n        <a href=\"#\" [routerLink]=\"['/boxes', 'sent']\" class=\"btn btn-lg\">\r\n          <i class=\"bi bi-clock-history\"></i>\r\n        </a>\r\n      </div>\r\n      <div class=\"d-flex flex-column p-3\">\r\n        <!-- recipient input -->\r\n        <div class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"recipient-input\" class=\"w-100\">\r\n            Recipient\r\n          </label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              #recipientInput\r\n              (input)=\"recipient = recipientInput.value; syncButtonFunctionality()\"\r\n              id=\"recipient-input\"\r\n              class=\"flex-grow-1 me-3 input-nostyle\"\r\n              type=\"text\"\r\n              placeholder=\"Insert recipient address\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n            />\r\n            <app-address-book\r\n              (onAddressSelected)=\"\r\n                recipient = $event.address;\r\n                recipientInput.value = $event.address;\r\n                syncButtonFunctionality()\r\n              \"\r\n            ></app-address-book>\r\n          </div>\r\n          <small class=\"{{ recipientInputColor }}\">{{ recipientInputText }}</small>\r\n        </div>\r\n        <!-- end of recipient input -->\r\n\r\n        <!-- passphrase input -->\r\n        <div class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"password-input\" class=\"w-100\">\r\n            Passphrase\r\n          </label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              #passwordInput\r\n              (input)=\"password = passwordInput.value; syncButtonFunctionality()\"\r\n              id=\"password-input\"\r\n              class=\"flex-grow-1 me-3 input-nostyle\"\r\n              type=\"password\"\r\n              placeholder=\"Choose a passphrase\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n            />\r\n            <button\r\n              (mousedown)=\"passwordInput.setAttribute('type', 'text')\"\r\n              (mouseup)=\"passwordInput.setAttribute('type', 'password')\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n              class=\"btn text-white\"\r\n            >\r\n              <i class=\"bi bi-eye\"></i>\r\n            </button>\r\n          </div>\r\n          <small class=\"d-flex gap-1\">\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: red; width: 15px; height: 5px;\"></div>\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: orange; width: 15px; height: 5px;\"></div>\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: yellow; width: 15px; height: 5px;\"></div>\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: greenyellow; width: 15px; height: 5px;\"></div>\r\n            <div class=\"pass-rect-strength d-none\" style=\"background-color: green; width: 15px; height: 5px;\"></div>\r\n          </small>\r\n        </div>\r\n        <!-- end of passphrase input -->\r\n\r\n        <!-- send amount input -->\r\n        <div class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"send-amount-input\" class=\"w-100\">\r\n            Send amount\r\n          </label>\r\n          <div class=\"d-flex flex-column flex-lg-row my-2 my-lg-0 gap-2\">\r\n            <input\r\n              #sendValueInput\r\n              (input)=\"sendValue = sendValueInput.value; syncButtonFunctionality()\"\r\n              id=\"send-amount-input\"\r\n              class=\"input-nostyle flex-grow-1\"\r\n              type=\"text\"\r\n              placeholder=\"0.0\"\r\n              [disabled]=\"\r\n                !isAppReady || (loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\r\n              \"\r\n            />\r\n            <app-token-selector\r\n              (onTokenSelected)=\"sendTokenSelected = $event; syncButtonFunctionality()\"\r\n              (onTokenBalanceUpdated)=\"sendTokenBalance = $event; syncButtonFunctionality()\"\r\n            ></app-token-selector>\r\n          </div>\r\n          <small class=\"{{ sendValueInputColor }}\">{{ sendValueInputText }}</small>\r\n        </div>\r\n        <!-- end of send amount input -->\r\n\r\n        <!-- message textarea -->\r\n        <div *ngIf=\"contractServ.isTestnet()\" class=\"p-3 bg-eboxdark mb-3 rounded-alot text-white\">\r\n          <label for=\"message-textarea\" class=\"w-100\">\r\n            Message\r\n          </label>\r\n          <div class=\"d-flex flex-column flex-lg-row my-2 my-lg-0 gap-2\">\r\n            <textarea\r\n              #messageTextarea\r\n              (input)=\"message = messageTextarea.value;\"\r\n              id=\"message-textarea\"\r\n              class=\"input-nostyle flex-grow-1\"\r\n              placeholder=\"An optional message\"\r\n              [disabled]=\"\r\n                !isAppReady ||\r\n                (loadingIndicatorServ.isLoading$ | async)\r\n                  ? 'disabled'\r\n                  : null\r\n              \"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <!-- end of message textarea -->\r\n\r\n        <div class=\"text-end\">\r\n          <a class=\"btn btn-outline-eboxprimary rounded-alot\" data-bs-toggle=\"collapse\" href=\"#advanced-options\" (click)=\"setAdvancedUser()\">\r\n            Advanced options\r\n            <i class=\"bi bi-three-dots-vertical\"></i>\r\n          </a>\r\n        </div>\r\n\r\n        <div class=\"collapse\" [class.show]=\"isAdvancedUser\" id=\"advanced-options\">\r\n          <div class=\"d-flex flex-column gap-3 border p-3 mt-3 rounded-alot\">\r\n            <!-- allow partial checkbox -->\r\n            <!-- <div class=\"bg-eboxdark p-3 rounded-alot text-white\">\r\n              <input class=\"form-check-input me-3\" type=\"checkbox\" value=\"\" id=\"allow-partial-checkbox\">\r\n              <label class=\"form-check-label\" for=\"allow-partial-checkbox\">\r\n                Allow partial withdrawals\r\n              </label>\r\n            </div> -->\r\n            <!-- end of allow partial checkbox -->\r\n\r\n            <!-- timelock input -->\r\n            <!-- <div class=\"bg-eboxdark rounded-alot text-white\">\r\n              <label for=\"date-lock-input\" class=\"pt-3 px-3 w-100\">\r\n                Time available at\r\n              </label>\r\n              <div class=\"d-flex flex-column flex-lg-row gap-3 p-3\">\r\n                <input \r\n                  id=\"date-lock-input\"\r\n                  type=\"date\"\r\n                  class=\"border-0 p-2 rounded-alot\"\r\n                  style=\"outline: none\">\r\n                <input \r\n                  id=\"time-lock-input\"\r\n                  type=\"time\"\r\n                  class=\"border-0 p-2 rounded-alot\"\r\n                  style=\"outline: none\">\r\n              </div>\r\n            </div> -->\r\n            <!-- end of timelock input -->\r\n\r\n            <!-- email address input -->\r\n            <!-- <div class=\"bg-eboxdark rounded-alot text-muted\">\r\n              <label for=\"recipient-input\" class=\"pt-3 px-3 w-100\" style=\"opacity: .5\">\r\n                Notify email addresses (not yet available)\r\n              </label>\r\n              <div class=\"d-flex p-3 pt-1\" style=\"opacity: .5\">\r\n                <ul class=\"list-unstyled flex-grow-1 mb-0\">\r\n                  <li>\r\n                    <button class=\"btn text-muted\">\r\n                      <i class=\"bi bi-dash-circle-fill\"></i>\r\n                    </button>\r\n                    abc@abc.com\r\n                  </li>\r\n                </ul>\r\n                <button class=\"btn text-muted\">\r\n                  <i class=\"bi bi-plus-circle-fill\"></i>\r\n                </button>\r\n              </div>\r\n            </div> -->\r\n            <!-- end of email address input -->\r\n\r\n            <!-- privacy checkbox -->\r\n            <div class=\"bg-eboxdark p-3 rounded-alot text-white\">\r\n              <input\r\n                class=\"form-check-input me-3\"\r\n                type=\"checkbox\"\r\n                [checked]=\"isPrivacyEnabled ? 'checked' : ''\"\r\n                (change)=\"isPrivacyEnabled = !isPrivacyEnabled\"\r\n                id=\"privacy-checkbox\"\r\n              >\r\n              <label class=\"form-check-label\" for=\"privacy-checkbox\">\r\n                Enable privacy mode\r\n              </label>\r\n            </div>\r\n            <!-- end of privacy checkbox -->\r\n\r\n            <!-- keep inputs checkbox -->\r\n            <div class=\"bg-eboxdark p-3 rounded-alot text-white\">\r\n              <input\r\n                #keepInputsCheckbox\r\n                class=\"form-check-input me-3\"\r\n                type=\"checkbox\"\r\n                [checked]=\"keepInputs ? 'checked' : ''\"\r\n                (change)=\"setKeepInputs(keepInputsCheckbox)\"\r\n                id=\"keep-inputs\"\r\n              >\r\n              <label class=\"form-check-label\" for=\"keep-inputs\">\r\n                Keep inputs after sending\r\n              </label>\r\n            </div>\r\n            <!-- end of keep inputs checkbox -->\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          class=\"btn btn-eboxprimary rounded-alot p-3 mt-3\"\r\n          (click)=\"buttonFunction()\"\r\n          [disabled]=\"\r\n            isButtonDisabled || (loadingIndicatorServ.isLoading$ | async)\r\n              ? 'disabled'\r\n              : null\r\n          \"\r\n        >\r\n          {{ buttonMessage }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!-- end of swapper -->\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ContractService } from 'src/app/services/contract.service';\r\nimport { StakingService } from 'src/app/services/staking.service';\r\nimport { ToasterService } from 'src/app/services/toaster.service';\r\n\r\n@Component({\r\n    selector: 'app-staking',\r\n    templateUrl: './staking.component.html',\r\n    styleUrls: ['./staking.component.css']\r\n})\r\nexport class StakingComponent implements OnInit, OnDestroy {\r\n\r\n    monthsNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    today = new Date();\r\n    pageMonth;\r\n    pageDate;\r\n    userRewardObjAPI;\r\n    userRewardContract;\r\n    userPayoutReward;\r\n\r\n    chainId;\r\n    isEthereumMainnet;\r\n    selectedAccount;\r\n    isStakingReady;\r\n    message;\r\n\r\n    selectedNetwork = null; // false Ethereum, true BSC\r\n\r\n    private numberOfDaysInMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    private subscriptions = [];\r\n    private minMonth;\r\n    private minDate;\r\n    private maxMonth;\r\n    private maxDate;\r\n    private fetchedRewards;\r\n\r\n    constructor(\r\n        public contractServ: ContractService,\r\n        private stakingServ: StakingService,\r\n        private toasterServ: ToasterService) { }\r\n\r\n    async ngOnInit() {\r\n\r\n        this.pageMonth = this.today.getMonth();\r\n        this.pageDate = this.today.getDate();\r\n\r\n        // Setting up the reactive code to load the reward\r\n        [\r\n            this.contractServ.chainId$,\r\n            this.contractServ.selectedAccount$,\r\n            this.contractServ.isStakingReady$,\r\n            this.contractServ.stakingInteraction$\r\n        ].forEach(obs => \r\n            this.subscriptions.push(\r\n                obs.subscribe(async () => {\r\n\r\n                    // Resetting the component\r\n                    this.selectedAccount = null;\r\n                    this.userRewardObjAPI = null;\r\n                    this.userRewardContract = null;\r\n\r\n                    // Updating local variables\r\n                    this.chainId = this.contractServ.chainId$.getValue();\r\n                    this.selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n                    this.isStakingReady = this.contractServ.isStakingReady$.getValue();\r\n\r\n                    // Calculating a message for the user\r\n                    if (!this.chainId || !this.selectedAccount) {\r\n                        this.message = 'Please connect your wallet first!';\r\n                        return;\r\n                    }\r\n                    if (!this.contractServ.isEthereumMainnet() && !this.contractServ.isBinanceMainnet()) {\r\n                        this.message = 'Please connect to Ethereum mainnet or BSC mainnet.';\r\n                        return;\r\n                    }\r\n                    if (!this.isStakingReady) {\r\n                        this.message = 'Initializing ethbox smart contract...';\r\n                        return;\r\n                    }\r\n\r\n                    await this.setSelectedNetwork();\r\n\r\n                    // Loading message displayed to the user\r\n                    this.message = 'Loading your reward...';\r\n\r\n                    let dateLimits = await this.stakingServ.getDateLimits();\r\n\r\n                    this.minMonth = dateLimits.min_month - 1;\r\n                    this.minDate = +dateLimits.min_day;\r\n                    this.maxMonth = dateLimits.max_month - 1;\r\n                    this.maxDate = +dateLimits.max_day;\r\n\r\n                    this.pageMonth = this.maxMonth;\r\n                    this.pageDate = this.maxDate;\r\n\r\n                    this.userRewardContract = await this.contractServ.getReward();\r\n\r\n                    this.updateUserPayoutReward();\r\n\r\n                    await this.fetchRewards();\r\n                    if (!this.userRewardObjAPI) {\r\n                        this.message = 'Reward not found';\r\n                        return;\r\n                    }\r\n\r\n                    // Selected reward is available\r\n                    this.message = null;\r\n                })));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    async setSelectedNetwork() {\r\n        let endpoint = \"https://www.ethbox.org/app/set_chain.php\";\r\n        let selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n\r\n        // Send the signed message to the backend\r\n        let formData = new FormData();\r\n        formData.append(\"action\", \"get_chain\");\r\n        formData.append(\"address\", selectedAccount);\r\n\r\n        let response = await fetch(endpoint, { method: 'POST', body: formData });\r\n        let status = await response.json();\r\n\r\n        console.log(\"Status of the request is\", status);\r\n\r\n        // If error, then return error?\r\n\r\n        this.selectedNetwork = !!!status.result;\r\n    }\r\n\r\n    async rewardsToChain(checkbox) { // Be careful that the chainIndex is not the chainId\r\n\r\n        // There's a bit of confusion here because I want Ethereum on the left and to do that I need to check when the result is 0 (inverted)\r\n        let chainIndex = checkbox.checked ? '0' : '1';\r\n\r\n        let endpoint = \"https://www.ethbox.org/app/set_chain.php\";\r\n        let selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n\r\n        let newNetwork = [\"Ethereum\", \"Binance Smart Chain\"][chainIndex];\r\n\r\n        // Build a magic string as message\r\n        let msg = `ethbox Staking - Set default chain:\\r\\n${newNetwork}`;\r\n\r\n        let signature;\r\n        try {\r\n            // Sign the message\r\n            signature = await this.contractServ.signMessage(msg);\r\n        } catch (e) {\r\n            // If sign is refused then revert the checkbox\r\n            checkbox.checked = !checkbox.checked;\r\n            return;\r\n        }\r\n\r\n        console.log(\"Signed message is\", signature);\r\n\r\n        // Send the signed message to the backend\r\n        let formData = new FormData();\r\n        formData.append(\"action\", \"set_chain\");\r\n        formData.append(\"address\", selectedAccount);\r\n        formData.append(\"signed_msg\", signature);\r\n        formData.append(\"chain\", chainIndex);\r\n\r\n        let response = await fetch(endpoint, { method: 'POST', body: formData });\r\n        let status = await response.json();\r\n\r\n        console.log(\"Status of the request is\", status);\r\n\r\n        // Notify, via toaster, the fact that the server has switched the network\r\n        if (\"error\" in status && status.error === 0) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"success\",\r\n                message: `Staking rewards have successfully switched to ${newNetwork}!`,\r\n                duration: \"medium\"\r\n            });\r\n        } else {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"error\",\r\n                message: \"Something went wrong.\",\r\n                duration: \"medium\"\r\n            });\r\n            // If there's any problem with the API then revert the checkbox\r\n            checkbox.checked = !checkbox.checked ;\r\n        }\r\n    }\r\n\r\n    async onPaginationPreviousClick() {\r\n\r\n        if (this.pageDate <= this.minDate && this.pageMonth <= this.minMonth) {\r\n            return;\r\n        }\r\n        if (this.pageDate < 2) {\r\n            if (this.pageMonth == 0) {\r\n                this.pageMonth = this.monthsNames.length - 1;\r\n            }\r\n            else {\r\n                this.pageMonth--;\r\n            }\r\n            this.pageDate = this.numberOfDaysInMonths[this.pageMonth];\r\n        }\r\n        else {\r\n            this.pageDate--;\r\n        }\r\n        await this.fetchRewards();\r\n    }\r\n\r\n    async onPaginationNextClick() {\r\n\r\n        if (this.pageDate >= this.maxDate && this.pageMonth >= this.maxMonth) {\r\n            return;\r\n        }\r\n        if (this.pageDate == this.numberOfDaysInMonths[this.pageMonth]) {\r\n            if (this.pageMonth == this.monthsNames.length - 1) {\r\n                this.pageMonth = 0;\r\n            }\r\n            else {\r\n                this.pageMonth++;\r\n            }\r\n            this.pageDate = 1;\r\n        }\r\n        else {\r\n            this.pageDate++;\r\n        }\r\n        await this.fetchRewards();\r\n    }\r\n\r\n    private async fetchRewards() {\r\n\r\n        let results = await this.stakingServ.getData(this.pageMonth, this.pageDate);\r\n        this.fetchedRewards = results\r\n            .map(result => ({ \r\n                ...result,\r\n                apy: 100 * ((1 + result.reward / result.balance) ** 12 - 1)\r\n            }));\r\n\r\n        this.userRewardObjAPI = this.fetchedRewards\r\n            .find(item => item.address.toLowerCase() == this.selectedAccount.toLowerCase());\r\n\r\n        console.log(this.userRewardObjAPI);\r\n    }\r\n\r\n    async updateUserPayoutReward() {\r\n        let getPayoutRewardResponse = await this.stakingServ\r\n            .getPayoutReward(this.selectedAccount);\r\n        if (getPayoutRewardResponse.result) {\r\n            this.userPayoutReward = getPayoutRewardResponse.result;\r\n        }\r\n    }\r\n\r\n    async claimRewards() {\r\n        try {\r\n            await this.contractServ.claimReward();\r\n        } catch (e) {\r\n            return;\r\n        }\r\n        await this.stakingServ.setPayoutReward(this.selectedAccount);\r\n        await this.updateUserPayoutReward();\r\n    }\r\n\r\n}\r\n","<app-bg-changer [imgSrc]=\"'assets/img/staking.jpg'\"></app-bg-changer>\r\n\r\n<div class=\"main py-5 px-3\">\r\n  <!-- header -->\r\n  <header class=\"container-medium text-center mb-5\">\r\n    <h1>Staking rewards</h1>\r\n    <p class=\"lead\">\r\n      To support those who support us, ethbox offers staking rewards for the\r\n      first 4 years after the token generation event for everyone holding\r\n      EBOX tokens.\r\n    </p>\r\n    <p>\r\n      For details, find our staking model explained in this <a class=\"text-reset\" href=\"https://ethbox.medium.com/introducing-ebox-staking-rewards-4c65c07fc89d\" target=\"_blank\">Medium article</a>.\r\n    </p>\r\n    \r\n    <div *ngIf=\"selectedAccount\" class=\" py-3 fw-lighter\">\r\n      <p>Use the switch to choose where to claim your staking rewards: either <b>Binance Smart Chain</b> or <b>Ethereum</b>!<br><i>(Default in case of no choice: Binance Smart Chain)</i></p>\r\n\r\n      <div *ngIf=\"selectedNetwork !== null\">\r\n        <input type=\"checkbox\" name=\"checkbox\" class=\"switch\" [checked]=\"selectedNetwork\" #selectNetworkCheckbox (input)=\"rewardsToChain(selectNetworkCheckbox)\">\r\n      </div>\r\n    </div>\r\n\r\n  </header>\r\n  <!-- end of header -->\r\n\r\n  <!-- message -->\r\n  <div *ngIf=\"message && !selectedAccount\" class=\"container-medium text-center\">\r\n    <h2>{{ message }}</h2>\r\n  </div>\r\n  <!-- end of message -->\r\n\r\n  <!-- reward -->\r\n  <div *ngIf=\"selectedAccount\" class=\"container-medium\">\r\n\r\n    <div class=\"box-wrapper position-relative\">\r\n\r\n      <!-- animated rainbow behind -->\r\n      <div class=\"highlight\"></div>\r\n\r\n      <div class=\"bg-lightalpha rounded-alot p-3\">\r\n\r\n        <header class=\"d-grid gap-2 text-center d-md-flex align-items-md-center justify-content-md-between mb-3\">\r\n          <div class=\"fs-4 text-truncate p-3\">Hello {{ selectedAccount }}!</div>\r\n          <button\r\n            class=\"btn bgn-lg btn-eboxprimary rounded-alot text-uppercase\"\r\n            [disabled]=\"(!userRewardContract || userRewardContract < 1) ? 'disabled' : null\"\r\n            (click)=\"claimRewards()\"\r\n          >\r\n            <div>Claim</div>\r\n            <div>{{ userRewardContract | toFixed:2 }} EBOX</div>\r\n          </button>\r\n        </header>\r\n\r\n        <div *ngIf=\"message && !userRewardObjAPI\" class=\"container-medium text-center\">\r\n          <h4>{{ message }}</h4>\r\n        </div>\r\n\r\n        <div *ngIf=\"userRewardObjAPI\" class=\"bg-eboxdark text-white p-3 rounded-alot shadow\">\r\n\r\n          <div class=\"d-grid gap-2 text-center d-md-flex align-items-md-center justify-content-md-between mb-3\">\r\n            <div>Staking rewards are shown as if payday was on the selected day.</div>\r\n\r\n            <!-- pagination -->\r\n            <ul class=\"pagination justify-content-center mb-0\">\r\n              <li class=\"page-item\">\r\n                <a\r\n                  (click)=\"$event.preventDefault(); onPaginationPreviousClick()\"\r\n                  class=\"bg-light page-link rounded-alot-start\"\r\n                  href=\"#\"\r\n                  >&laquo;</a\r\n                >\r\n              </li>\r\n              <li class=\"page-item disabled\">\r\n                <a class=\"bg-lightalpha page-link\" href=\"#\" tabindex=\"-1\"\r\n                  >{{ monthsNames[pageMonth] }} {{ pageDate }}</a\r\n                >\r\n              </li>\r\n              <li class=\"page-item\">\r\n                <a\r\n                  (click)=\"$event.preventDefault(); onPaginationNextClick()\"\r\n                  class=\"bg-light rounded-alot-end page-link\"\r\n                  href=\"#\"\r\n                  >&raquo;</a\r\n                >\r\n              </li>\r\n            </ul>\r\n            <!-- end of pagination -->\r\n          </div>\r\n\r\n          <div class=\"row row-cols-1 row-cols-md-4 g-3 mb-3\">\r\n            <div class=\"col\">\r\n              <div class=\"d-flex flex-column justify-content-between h-100 p-3 border border-secondary rounded-alot\">\r\n                <div>Balance in EBOX</div>\r\n                <div class=\"fs-5\">{{ userRewardObjAPI.balance | toFixed:2 }}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"d-flex flex-column justify-content-between h-100 p-3 border border-secondary rounded-alot\">\r\n                <div>Reward in EBOX</div>\r\n                <div class=\"fs-5\">{{ userRewardObjAPI.reward | toFixed:2 }}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"d-flex flex-column justify-content-between h-100 p-3 border border-secondary rounded-alot\">\r\n                <div>Payout in EBOX</div>\r\n                <div class=\"fs-5\">{{ userPayoutReward | toFixed:2 }}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"d-flex flex-column justify-content-between h-100 p-3 border border-secondary rounded-alot\">\r\n                <div>APY</div>\r\n                <div class=\"fs-5\">{{ userRewardObjAPI.apy | toFixed:2 }}%</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row row-cols-1 row-cols-md-3 g-3\">\r\n            <div class=\"col\">\r\n              <div class=\"d-flex flex-column justify-content-between h-100 p-3 border border-secondary rounded-alot\">\r\n                <div>DuckDAO Bonus</div>\r\n                <div class=\"fs-5\">{{ userRewardObjAPI.bonus_duck === '1' ? 'Yes' : 'No' }}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"d-flex flex-column justify-content-between h-100 p-3 border border-secondary rounded-alot\">\r\n                <div>Liquidity Provider Bonus</div>\r\n                <div class=\"fs-5\">{{ userRewardObjAPI.bonus_lp === '1' ? 'Yes' : 'No' }}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"d-flex flex-column justify-content-between h-100 p-3 border border-secondary rounded-alot\">\r\n                <div>Long-term Holder Months</div>\r\n                <div class=\"fs-5\">{{ userRewardObjAPI.bonus_long_term_months }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <!-- end of reward -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToasterService } from 'src/app/services/toaster.service';\r\nimport { ContractService } from '../../services/contract.service';\r\n\r\n@Component({\r\n    selector: 'app-toaster-notifier',\r\n    templateUrl: './toaster-notifier.component.html',\r\n    styleUrls: ['./toaster-notifier.component.css']\r\n})\r\nexport class ToasterNotifierComponent implements OnInit {\r\n\r\n    toasterId = `toaster_${Math.random().toString(36).substring(2)}`\r\n\r\n    private defaultType = 'primary';\r\n    private typeList = ['primary', 'secondary', 'danger', 'warning', 'success', 'info'];\r\n    private colorMap = {\r\n        primary: 'white',\r\n        secondary: 'white',\r\n        danger: 'white',\r\n        warning: 'dark',\r\n        info: 'dark'\r\n    };\r\n    private defaultDuration = 'short';\r\n    private durationMap = {\r\n        short: 5e3,\r\n        medium: 8e3,\r\n        long: 14e3\r\n    };\r\n\r\n    constructor(\r\n        public contractServ: ContractService,\r\n        private toasterServ: ToasterService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.toasterServ.toastMessage$\r\n            .subscribe(({ type, message, duration }) => {\r\n\r\n                if (!this.typeList.includes(type)) {\r\n                    type = this.defaultType;\r\n                }\r\n                if (!this.durationMap[duration]) {\r\n                    duration = 'short';\r\n                }\r\n\r\n                let toastId = this.addToast(type, message);\r\n                setTimeout(\r\n                    () => this.removeToast(toastId),\r\n                    this.durationMap[this.defaultDuration]);\r\n            });\r\n    }\r\n\r\n    private addToast(type, message) {\r\n\r\n        let toastId = `toast_${Math.random().toString(36).substring(2)}`;\r\n\r\n        let html = `\r\n        <div id=\"${toastId}\" class=\"toast show align-items-center text-${this.colorMap[type]} bg-${type} border-0\" style=\"opacity: 0; transition: all 1s ease-out\">\r\n            <div class=\"d-flex\">\r\n                <div class=\"toast-body lead text-break\">${message}</div>\r\n                <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" onclick=\"this.parentElement.parentElement.classList.remove('show'); this.parentElement.parentElement.classList.add('hide')\"></button>\r\n            </div>\r\n        </div>`;\r\n\r\n        let newEl = document.createElement('div');\r\n        newEl.innerHTML = html;\r\n\r\n        let toastEl: any = newEl.firstElementChild;\r\n        let toasterEl = document.getElementById(this.toasterId);\r\n        toasterEl.prepend(toastEl);\r\n        setTimeout(() => toastEl.style.opacity = '1', 25);\r\n\r\n        return toastId;\r\n    }\r\n\r\n    private removeToast(id) {\r\n\r\n        let toastEl = document.getElementById(id);\r\n        toastEl.style.opacity = '0';\r\n        setTimeout(() => toastEl.remove(), 900);\r\n    }\r\n\r\n}\r\n","<div\r\n  [id]=\"toasterId\"\r\n  class=\"toast-container position-fixed bottom-0 start-50 translate-middle-x lead text-white p-3\"\r\n  style=\"z-index: 999999999;\"\r\n>\r\n</div>\r\n","import { EventEmitter, NgZone } from '@angular/core';\r\nimport { AfterViewInit, Component, OnDestroy, OnInit, Output, Input } from '@angular/core';\r\nimport { ContractService } from '../../services/contract.service';\r\nimport { PromptDialogService } from 'src/app/services/prompt-dialog.service';\r\nimport { ToasterService } from 'src/app/services/toaster.service';\r\nimport { LoadingIndicatorService } from 'src/app/services/loading-indicator.service';\r\n\r\nlet SmartInterval = require(\"smartinterval\");\r\n\r\n@Component({\r\n    selector: 'app-token-selector',\r\n    templateUrl: './token-selector.component.html',\r\n    styleUrls: ['./token-selector.component.css']\r\n})\r\nexport class TokenSelectorComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @Input() isBalanceEnabled = true;\r\n    @Output() onTokenSelected = new EventEmitter();\r\n    @Output() onTokenBalanceUpdated = new EventEmitter();\r\n\r\n    randomId = `modal_${Math.random().toString(36).substring(2)}`;\r\n    tokens;\r\n    filteredTokens;\r\n    selectedToken;\r\n    selectedTokenBalance;\r\n\r\n    private maxToShow = 60;\r\n    private isBalanceLoading = false;\r\n    private balancePollingCycleDelay = 6e3;\r\n    private balancePollingStartDelay = 0;\r\n    private balancePollingLoop;\r\n    private subscription;\r\n\r\n    constructor(\r\n        public loadingIndicatorServ: LoadingIndicatorService,\r\n        private contractServ: ContractService,\r\n        private ngZone: NgZone,\r\n        private promptDialogServ: PromptDialogService,\r\n        private toasterServ: ToasterService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // This loop calls getTokenBalance(), waits for the result and then repeats\r\n        // This polling loop never starts if isBalanceEnabled is set to false by the host component\r\n        this.balancePollingLoop = new SmartInterval(\r\n            async () => {\r\n\r\n                let balance = await this.contractServ\r\n                    .getTokenBalance(this.selectedToken.address);\r\n\r\n                this.ngZone.run(() => {\r\n                    this.selectedTokenBalance = balance;\r\n                    this.onTokenBalanceUpdated.emit(balance);\r\n                    console.log('Selected token balance', balance);\r\n\r\n                    this.isBalanceLoading = false;\r\n                });\r\n            },\r\n            this.balancePollingCycleDelay,\r\n            this.balancePollingStartDelay);\r\n\r\n        this.subscription = this.contractServ.tokens$\r\n            .subscribe(tokens => {\r\n\r\n                this.tokens = tokens;\r\n\r\n                this.filteredTokens = null;\r\n                this.selectedToken = null;\r\n                this.onTokenSelected.emit(null);\r\n\r\n                this.balancePollingLoop.stop();\r\n                this.selectedTokenBalance = null;\r\n                this.onTokenBalanceUpdated.emit(null);\r\n\r\n                if (tokens) {\r\n                    this.filteredTokens = tokens.slice(0, this.maxToShow);\r\n                }\r\n            });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n        // Moves the modal to the body (backdrop hackfix)\r\n        let modal = document.getElementById(this.randomId);\r\n        document.body.appendChild(modal);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        // Removes the modal from the body (backdrop hackfix)\r\n        document.getElementById(this.randomId).remove();\r\n\r\n        this.subscription.unsubscribe();\r\n        this.balancePollingLoop.stop();\r\n    }\r\n\r\n    async selectToken(token) {\r\n\r\n        this.selectedToken = token;\r\n        this.onTokenSelected.emit(token);\r\n        console.log('Selected token', token);\r\n\r\n        if (this.isBalanceEnabled) {\r\n            this.selectedTokenBalance = null;\r\n            this.onTokenBalanceUpdated.emit(null);\r\n            this.isBalanceLoading = true;\r\n            this.balancePollingLoop.stop();\r\n            this.balancePollingLoop.start();\r\n        }\r\n    }\r\n\r\n    filterTokens(search) {\r\n\r\n        this.filteredTokens = this.tokens\r\n            .filter(token => {\r\n\r\n                let trimmed = search.trim();\r\n                let lcSearch = trimmed.toLowerCase();\r\n                let lcName = token.name.toLowerCase();\r\n                let lcSymbol = token.symbol.toLowerCase();\r\n                let lcAddress = token.address.toLowerCase();\r\n                return !search || lcName.includes(lcSearch) || lcSymbol.includes(lcSearch) || lcAddress.includes(lcSearch);\r\n            })\r\n            .slice(0, this.maxToShow);\r\n    }\r\n\r\n    identifier(index, token) {\r\n        return token.address;\r\n    }\r\n\r\n    async customTokenPrompt() {\r\n\r\n        let response: any = await this.promptDialogServ.spawn({\r\n            dialogName: 'Add a new custom token',\r\n            message: 'Specify a valid token contract to add the new token',\r\n            inputs: {\r\n                address: {\r\n                    label: 'Insert token address'\r\n                }\r\n            },\r\n            submitButtonName: 'Add',\r\n            cancelButtonName: 'Cancel'\r\n        });\r\n\r\n        // While token address is set but invalid or already present keep spawning\r\n        while (response !== null \r\n            && (\r\n                !this.contractServ.isValidAddress(response.address.value) \r\n                || this.contractServ.tokensMap[response.address.value])) {\r\n\r\n            response = await this.promptDialogServ.spawn({\r\n                dialogName: 'Add a new custom token',\r\n                message: 'Specified token address ' +\r\n                    ((this.contractServ.tokensMap[response.address.value])\r\n                        ? 'is already present, try another'\r\n                        : 'was invalid, try again'),\r\n                messageColor: 'danger',\r\n                inputs: {\r\n                    address: {\r\n                        label: 'Insert token address'\r\n                    }\r\n                },\r\n                submitButtonName: 'Add',\r\n                cancelButtonName: 'Cancel'\r\n            });\r\n        }\r\n\r\n        if (response === null) {\r\n            return;\r\n        }\r\n\r\n        let tokenData = await this.contractServ.getTokenData(response.address.value);\r\n\r\n        if (!tokenData.decimals || !tokenData.name || !tokenData.symbol) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: 'danger',\r\n                message: 'Some important information of the token is missing!',\r\n                duration: 'long'\r\n            });\r\n            return;\r\n        }\r\n\r\n        let LSKey = `customTokens${this.contractServ.chainId$.getValue()}`;\r\n        let customTokens = [];\r\n        let customTokensLS = localStorage.getItem(LSKey);\r\n        if (customTokensLS) {\r\n            customTokens = JSON.parse(customTokensLS);\r\n        }\r\n        customTokens.push({\r\n            address: tokenData.address,\r\n            name: tokenData.name,\r\n            symbol: tokenData.symbol,\r\n            decimals: tokenData.decimals\r\n        });\r\n        localStorage.setItem(LSKey, JSON.stringify(customTokens));\r\n        this.contractServ.loadTokens();\r\n\r\n        this.toasterServ.toastMessage$.next({\r\n            type: 'success',\r\n            message: 'The new token has been added successfully!',\r\n            duration: 'long'\r\n        });\r\n    }\r\n\r\n}\r\n","<ng-container *ngIf=\"!tokens; else selectorReady\">\r\n  <!-- initial state -->\r\n  <button class=\"btn btn-eboxprimary rounded-alot w-100\" disabled>\r\n    <div *ngIf=\"isBalanceEnabled\">–</div>\r\n    <i class=\"bi bi-chevron-expand\"></i> –\r\n  </button>\r\n</ng-container>\r\n<ng-template #selectorReady>\r\n  <!-- ready state -->\r\n  <button\r\n    *ngIf=\"!selectedToken\"\r\n    data-bs-toggle=\"modal\"\r\n    [attr.data-bs-target]=\"'#' + randomId\"\r\n    class=\"btn btn-eboxprimary rounded-alot w-100\"\r\n  >\r\n    <div *ngIf=\"isBalanceEnabled\">–</div>\r\n    <i class=\"bi bi-chevron-expand\"></i> Choose\r\n  </button>\r\n  <!-- selected state -->\r\n  <button\r\n    *ngIf=\"selectedToken\"\r\n    data-bs-toggle=\"modal\"\r\n    [attr.data-bs-target]=\"'#' + randomId\"\r\n    class=\"btn btn-eboxprimary rounded-alot w-100\"\r\n    [disabled]=\"(loadingIndicatorServ.isLoading$ | async) ? 'disabled' : null\"\r\n  >\r\n    <ng-container *ngIf=\"isBalanceEnabled\">\r\n      <div *ngIf=\"isBalanceLoading\">\r\n        <div class=\"spinner-border spinner-border-sm\"></div>\r\n      </div>\r\n      <div *ngIf=\"!isBalanceLoading\">\r\n        {{ selectedTokenBalance.decimalValue | toFixed: 3 }}\r\n      </div>\r\n    </ng-container>\r\n    <div class=\"d-flex align-items-center justify-content-center gap-1 text-uppercase\">\r\n      <i class=\"bi bi-chevron-expand\"></i>\r\n      {{ selectedToken.symbol }}\r\n      <img\r\n        [src]=\"selectedToken.thumb\"\r\n        style=\"width: 1.5rem; height: 1.5rem\">\r\n    </div>\r\n  </button>\r\n</ng-template>\r\n\r\n<div [id]=\"randomId\" class=\"modal\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n    <div class=\"modal-content rounded-alot\" style=\"height: 90vh\">\r\n      <div class=\"modal-header\">\r\n        <div class=\"flex-grow-1\">\r\n          <div class=\"d-flex justify-content-between mb-3\">\r\n            <div>\r\n              <h5 class=\"modal-title\">Tokens</h5>\r\n              <small\r\n                >There are {{ tokens?.length }} tokens, please use the\r\n                search.</small\r\n              >\r\n            </div>\r\n            <button class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n          </div>\r\n          <input\r\n            #searchInput\r\n            (input)=\"filterTokens(searchInput.value)\"\r\n            type=\"text\"\r\n            class=\"form-control rounded-alot\"\r\n            placeholder=\"Search in the list\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"d-flex flex-column justify-content-center align-items-center gap-3 mb-3\">\r\n          <button\r\n            (click)=\"customTokenPrompt()\"\r\n            class=\"btn btn-outline-eboxprimary rounded-alot\"\r\n            >\r\n            Add new token\r\n            <i class=\"bi bi-plus-circle\"></i>\r\n          </button>\r\n          <small class=\"text-muted\">Select a token to show your balance</small>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let token of filteredTokens; trackBy: identifier\"\r\n          class=\"align-items-center btn-outline-eboxprimary border rounded-alot d-flex mb-3 p-3 position-relative\"\r\n        >\r\n          <img\r\n            class=\"flex-shrink-0 me-2\"\r\n            [src]=\"token.thumb\"\r\n            style=\"width: 2rem; height: 2rem\">\r\n          <div class=\"text-truncate\">\r\n            <h5>\r\n              <a\r\n                href=\"#\"\r\n                data-bs-dismiss=\"modal\"\r\n                (click)=\"selectToken(token)\"\r\n                class=\"stretched-link text-reset text-decoration-none\"\r\n              >\r\n                {{ token.name }}\r\n                <small class=\"text-uppercase\">{{ token.symbol }}</small>\r\n              </a>\r\n            </h5>\r\n            <ng-container *ngIf=\"token.address === '0x0000000000000000000000000000000000000000'; else showTokenAddress\">\r\n              <small>Network base token</small>\r\n            </ng-container>\r\n            <ng-template #showTokenAddress>\r\n              <small>{{ token.address }}</small>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n        <div class=\"text-center\">\r\n          <small *ngIf=\"tokens && tokens.length > 20\" class=\"text-muted\">Use the search to find more coins</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ContractService } from '../../services/contract.service';\r\n\r\n@Component({\r\n    selector: 'app-top-bar',\r\n    templateUrl: './top-bar.component.html',\r\n    styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent {\r\n    \r\n    areThereIncomingBoxes = false;\r\n    wasIncomingTouched = false;\r\n\r\n    constructor(public contractServ: ContractService) {\r\n        this.contractServ.incomingBoxes$\r\n            .subscribe(boxes => {\r\n\r\n                // This piece of code lights up a red dot on the button \"Incoming\" if there are incoming boxes that are not yet taken\r\n                if (!boxes || boxes.length == 0 || boxes.every(box => box.taken)) {\r\n                    this.areThereIncomingBoxes = false;\r\n                    return;\r\n                }\r\n                this.areThereIncomingBoxes = true;\r\n\r\n            });\r\n    }\r\n\r\n}\r\n","<div\r\n  class=\"align-items-center bar-height bg-lightalpha d-flex justify-content-between fixed-top px-3 shadow\"\r\n>\r\n  <div>\r\n    <a\r\n      style=\"margin-left: 56px;\"\r\n      href=\"#\"\r\n      routerLink=\"/\">\r\n      <img class=\"d-inline-block d-lg-none taptarget-height\" src=\"assets/img/logo.png\" />\r\n      <img class=\"d-none d-lg-inline-block taptarget-height\" src=\"assets/img/logo-text.png\" />\r\n    </a>\r\n  </div>\r\n\r\n  <!-- tabs nav -->\r\n  <div class=\"d-none d-lg-flex gap-3 align-items-center position-absolute start-50 translate-middle-x\">\r\n    <div\r\n      routerLinkActive=\"tab-active\"\r\n      [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      class=\"btn btn-eboxprimary btn-skewed position-relative shadow\"\r\n    >\r\n      <a\r\n        href=\"#\"\r\n        routerLink=\"/\"\r\n        class=\"stretched-link text-decoration-none text-uppercase text-reset\"\r\n      >\r\n        Send\r\n        <i class=\"bi bi-box\"></i>\r\n      </a>\r\n    </div>\r\n    <div\r\n      routerLinkActive=\"tab-active\"\r\n      class=\"btn btn-eboxprimary btn-skewed position-relative shadow\"\r\n    >\r\n      <a\r\n        href=\"#\"\r\n        routerLink=\"/over-the-counter\"\r\n        class=\"stretched-link text-decoration-none text-uppercase text-reset\"\r\n      >\r\n        <i class=\"bi bi-shuffle\"></i>\r\n        OTC\r\n      </a>\r\n    </div>\r\n    <div\r\n      routerLinkActive=\"tab-active\"\r\n      class=\"btn btn-eboxprimary btn-skewed position-relative\"\r\n      [class.shadow]=\"!areThereIncomingBoxes || wasIncomingTouched\"\r\n      [class.btn-eboxpulser]=\"areThereIncomingBoxes && !wasIncomingTouched\"\r\n      (click)=\"wasIncomingTouched = true\"\r\n    >\r\n      <a\r\n        href=\"#\"\r\n        routerLink=\"/boxes/received\"\r\n        class=\"stretched-link text-decoration-none text-uppercase text-reset\"\r\n      >\r\n        <i class=\"bi bi-box-arrow-in-right\"></i>\r\n        Incoming\r\n      </a>\r\n    </div>\r\n    <div\r\n      routerLinkActive=\"tab-active\"\r\n      class=\"btn btn-eboxprimary btn-skewed position-relative shadow\"\r\n    >\r\n      <a\r\n        href=\"#\"\r\n        routerLink=\"/boxes/sent\"\r\n        class=\"stretched-link text-decoration-none text-uppercase text-reset\"\r\n      >\r\n        Outgoing\r\n        <i class=\"bi bi-box-arrow-right\"></i>\r\n      </a>\r\n    </div>\r\n  </div>\r\n  <!-- end of tabs nav -->\r\n\r\n  <!-- connect toggle -->\r\n  <button\r\n    *ngIf=\"!(contractServ.selectedAccount$ | async)\"\r\n    (click)=\"contractServ.connect()\"\r\n    class=\"btn btn-eboxprimary rounded-alot\"\r\n  >\r\n    Connect\r\n  </button>\r\n  <button\r\n    *ngIf=\"contractServ.selectedAccount$ | async\"\r\n    (click)=\"contractServ.disconnect()\"\r\n    class=\"btn btn-eboxprimary rounded-alot\"\r\n  >\r\n    <img\r\n      [src]=\"\r\n        contractServ.networkInfo(\r\n          (contractServ.connection.chainId$ | async)\r\n        ).baseTokenThumb\r\n      \"\r\n      style=\"height: 21px\"\r\n    />\r\n    {{ contractServ.selectedAccount$ | async | slice: 0:6 }}...\r\n    <i class=\"bi bi-x-circle\"></i>\r\n  </button>\r\n  <!-- end of connect toggle -->\r\n\r\n  <div class=\"connection-status\" *ngIf=\"contractServ.connection.isConnected$ | async\">\r\n    <span class=\"connection-status-heading\">Network:</span>\r\n    <span>{{ \r\n      contractServ.networkInfo(\r\n        (contractServ.connection.chainId$ | async)\r\n      ).name\r\n    }}</span>\r\n    <span class=\"connection-status-heading\">Account:</span>\r\n    <span>{{ contractServ.connection.selectedAccount$ | async }}</span>\r\n    <span class=\"connection-status-heading\">Balance:</span>\r\n    <span class=\"d-flex align-items-center\">\r\n      {{ contractServ.connection.baseTokenBalance$ | async | toFixed:2 }}\r\n      <img style=\"height: 1rem; margin-left: .5rem;\" [src]=\"\r\n        contractServ.networkInfo(\r\n          (contractServ.connection.chainId$ | async)\r\n        ).baseTokenThumb\r\n      \" alt=\"Base token thumb\">\r\n    </span>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ViewConsoleService } from 'src/app/services/view-console.service';\r\n\r\n@Component({\r\n    selector: 'app-view-console',\r\n    templateUrl: './view-console.component.html',\r\n    styleUrls: ['./view-console.component.css']\r\n})\r\nexport class ViewConsoleComponent implements OnInit {\r\n\r\n    @ViewChild(\"consoleOpeningCheckbox\") consoleOpeningCheckbox;\r\n\r\n    messages;\r\n\r\n    consoleShowState = JSON.parse(localStorage.getItem(\"consoleShowState\")) || false;\r\n\r\n    constructor(private viewConsoleServ: ViewConsoleService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.messages = this.viewConsoleServ.messages;\r\n        // setInterval(() => this.viewConsoleServ.log(\"I like ice cream\"), 1000);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // Show the console if the consoleShowState is true\r\n        if (this.consoleShowState) {\r\n            this.consoleOpeningCheckbox.nativeElement.checked = true;\r\n        }\r\n    }\r\n\r\n    setConsoleShowState(checkbox) {\r\n        localStorage.setItem(\r\n            \"consoleShowState\",\r\n            JSON.stringify(checkbox.checked)\r\n        );\r\n    }\r\n\r\n}\r\n","<input hidden id=\"console-opening-trigger\" type=\"checkbox\" #consoleOpeningCheckbox (input)=\"setConsoleShowState(consoleOpeningCheckbox)\">\r\n<div id=\"view-console-wrapper\">\r\n    <label for=\"console-opening-trigger\" id=\"view-console-handle\" class=\"rounded-alot-top\">\r\n        Console\r\n    </label>\r\n    <div id=\"view-console\" class=\"px-3 pt-3 overflow-auto font-monospace text-break\">\r\n        <ul class=\"list-unstyled d-grid gap-2\">\r\n            <li\r\n                *ngFor=\"let m of messages\"\r\n                [class.text-warning]=\"m.type === 'warn'\"\r\n                [class.text-danger]=\"m.type === 'err'\"\r\n            >\r\n                <small class=\"text-info\">{{m.timestamp | date: 'medium' }}</small><br>{{m.message}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'toFixed'\r\n})\r\nexport class ToFixedPipe implements PipeTransform {\r\n\r\n\ttransform(value: number, fractionLimit?: number): unknown {\r\n\r\n\t\tif (isNaN(value) || value === undefined || value === null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet _value = value.toString();\r\n\r\n\t\tlet whole = '',\r\n\t\t\tfraction = '';\r\n\r\n\t\tif (_value.indexOf('.') > -1) {\r\n\t\t\t[whole, fraction] = _value.split('.')\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhole = _value;\r\n\t\t}\r\n\r\n\t\tlet usFormat = '';\r\n\t\tlet count = 0;\r\n\t\tfor (let c = whole.length - 1; c >= 0; c--) {\r\n\t\t\tif (count === 3) {\r\n\t\t\t\tusFormat = ',' + usFormat;\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t\tusFormat = whole[c] + usFormat;\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\tlet trimmedFraction = '';\r\n\t\tif (fractionLimit > 0) {\r\n\t\t\ttrimmedFraction = '.' + fraction.slice(0, fractionLimit);\r\n\t\t\ttrimmedFraction = trimmedFraction.padEnd(fractionLimit + 1, '0');\r\n\t\t}\r\n\t\treturn usFormat + trimmedFraction;\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContractService } from './contract.service';\r\nimport { ToasterService } from './toaster.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddressBookService {\r\n\r\n    collectionKey = 'address-book';\r\n\r\n    constructor(\r\n        private contractServ: ContractService,\r\n        private toasterServ: ToasterService) { }\r\n\r\n    getAddressesFromLS() {\r\n\r\n        let addresses = localStorage.getItem(this.collectionKey);\r\n        if (addresses) {\r\n            return JSON.parse(addresses);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    getAddressesMap() {\r\n\r\n        let addresses = this.getAddressesFromLS();\r\n        return addresses.reduce((o, e) => (o[e.address] = e.label, o), {});\r\n    }\r\n\r\n    addAddress(name, address) {\r\n\r\n        let addresses = this.getAddressesFromLS();\r\n\r\n        if (!this.checkName(addresses, name) || !this.checkAddress(addresses, address)) {\r\n            return false;\r\n        }\r\n\r\n        addresses.push({\r\n            label: name,\r\n            address: address,\r\n            timestamp: Date.now()\r\n        });\r\n        localStorage.setItem(this.collectionKey, JSON.stringify(addresses));\r\n        return addresses;\r\n    }\r\n\r\n    removeAddress(address) {\r\n\r\n        let addresses = this.getAddressesFromLS();\r\n        let foundId = addresses.findIndex(addr => addr.address == address);\r\n        if (foundId < 0) {\r\n            return false;\r\n        }\r\n        addresses.splice(foundId, 1);\r\n        localStorage.setItem(this.collectionKey, JSON.stringify(addresses));\r\n        return addresses;\r\n    }\r\n\r\n    private checkName(addresses, name) {\r\n\r\n        if (!/^[a-zA-Z0-9 ]{2,32}$/.test(name)) {\r\n\r\n            this.toasterServ.toastMessage$.next({\r\n                type: 'danger',\r\n                message: 'Name must be alphanumeric (spaces allowed), between 2 and 40 characters long',\r\n                duration: 'long'\r\n            });\r\n            return false;\r\n        }\r\n\r\n        let found = addresses.find(addr => addr.label == name);\r\n        if (found) {\r\n\r\n            this.toasterServ.toastMessage$.next({\r\n                type: 'danger',\r\n                message: `Name already in the list. Please provide a new one.`,\r\n                duration: 'long'\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private checkAddress(addresses, address) {\r\n\r\n        if (!this.contractServ.isValidAddress(address)) {\r\n\r\n            this.toasterServ.toastMessage$.next({\r\n                type: 'danger',\r\n                message: 'Address provided is invalid, please retry.',\r\n                duration: 'long'\r\n            });\r\n            return false;\r\n        }\r\n\r\n        let found = addresses.find(addr => addr.address == address);\r\n        if (found) {\r\n\r\n            this.toasterServ.toastMessage$.next({\r\n                type: 'danger',\r\n                message: `Address already in the list. Please provide a new one.`,\r\n                duration: 'long'\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfirmOptions } from '../interfaces';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ConfirmDialogService {\r\n\r\n    transitionDelay = 250;\r\n\r\n    constructor() { }\r\n\r\n    spawn({ dialogName, message, confirmButtonName, cancelButtonName }: ConfirmOptions) {\r\n\r\n        if (!message) {\r\n            throw new Error('Message is required.');\r\n        }\r\n\r\n        // Some defaults\r\n        dialogName = dialogName || 'Are you sure?';\r\n        confirmButtonName = confirmButtonName || 'Proceed';\r\n        cancelButtonName = cancelButtonName || 'Cancel';\r\n\r\n        // The id is used to generate a unique dialog and to retrieve it during the removal\r\n        let randomId = Math.random().toString(36).substring(2);\r\n\r\n        // Making the dialog\r\n        let newEl = document.createElement('div');\r\n        newEl.innerHTML = this.getTemplate(randomId, dialogName, message, confirmButtonName, cancelButtonName);\r\n        let dialogWrapper: any = newEl.firstElementChild;\r\n        let dialog = dialogWrapper.firstElementChild;\r\n\r\n        // This is so I can code the click-outside-to-close feature\r\n        dialog.addEventListener('click', evt => evt.stopPropagation());\r\n\r\n        // Appending the dialog\r\n        document.body.appendChild(dialogWrapper);\r\n        setTimeout(() => {\r\n            dialogWrapper.style.opacity = '1';\r\n            dialog.style.opacity = '1';\r\n            document.body.style.overflow = 'hidden';\r\n        }, 25);\r\n\r\n\r\n        // Making a promise that will resolve on button clicked\r\n        let resolve;\r\n        let closePromise = new Promise(_resolve => {\r\n            // Saving the reference so it can be used outside\r\n            resolve = _resolve;\r\n        });\r\n\r\n        // Attaching to the window the callback for the buttons\r\n        window[`onConfirm${randomId}`] = isConfirmed => {\r\n            resolve(isConfirmed);\r\n            // Deleting the resolve function from the window\r\n            delete window[`onConfirm${randomId}`];\r\n            // Removing the dialog\r\n            let dialogWrapper: any = document.querySelector(`#confirm_${randomId}`);\r\n            let dialog = dialogWrapper.firstElementChild;\r\n            dialogWrapper.style.opacity = '0';\r\n            dialog.style.opacity = '0';\r\n            setTimeout(() => {\r\n                dialogWrapper.remove();\r\n                document.body.style.overflow = 'visible';\r\n            }, this.transitionDelay);\r\n        };\r\n\r\n        return closePromise;\r\n    }\r\n\r\n    private getTemplate(id, dialogName, message, confirmButtonName, cancelButtonName) {\r\n        return `\r\n        <div id=\"confirm_${id}\" class=\"d-flex align-items-center justify-content-center position-fixed p-3\" style=\"opacity: 0; top: 0; left: 0; bottom: 0; right: 0; background-color: rgba(0, 0, 0, .5); z-index: 1669; transition: all ${this.transitionDelay}ms ease-out\" onclick=\"onConfirm${id}(false)\">\r\n            <div class=\"bg-white container-small rounded-alot\" style=\"opacity: 0; z-index: 1670; transition: all ${this.transitionDelay}ms ease-out\">\r\n                <header class=\"d-flex align-items-center p-3 border-bottom\">\r\n                    <div class=\"fs-5 me-auto\">${dialogName}</div>\r\n                    <button onclick=\"onConfirm${id}(false)\" class=\"btn-close\"></button>\r\n                </header>\r\n                <div class=\"p-3 pb-0\">\r\n                    <p>${message}</p>\r\n                </div>\r\n                <footer class=\"p-3 border-top text-end\">\r\n                    <button onclick=\"onConfirm${id}(false)\" class=\"btn btn-outline-eboxprimary rounded-alot me-2\">${cancelButtonName}</button>\r\n                    <button onclick=\"onConfirm${id}(true)\" class=\"btn btn-eboxprimary rounded-alot\">${confirmButtonName}</button>\r\n                </footer>\r\n            </div>\r\n        </div>`;\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { ADDRESS_ZERO, ZERO, MAX_VALUE } from '../constants/various';\r\nimport { STAKING, ETHBOX, TOKEN_DISPENSER, ERC20_ABI } from '../constants/abis';\r\nimport { chainTokenDictionary } from '../constants/tokens';\r\nimport { TokenData, TokenBalance, Box, BoxInputs } from '../interfaces';\r\nimport { LoadingIndicatorService } from './loading-indicator.service';\r\nimport { ToasterService } from './toaster.service';\r\nimport { ConfirmDialogService } from './confirm-dialog.service';\r\nimport { ViewConsoleService } from './view-console.service';\r\nimport BigNumber from 'bignumber.js';\r\n\r\n// Web3Utils is used exclusively for soliditySha3 function\r\nlet Web3Utils = require('web3-utils');\r\n\r\nlet { ObsEmitter, ObsCacher } = require(\"bada55asyncutils\");\r\nlet SmartInterval = require(\"smartinterval\");\r\nlet EthersModal = require(\"ethersmodal\");\r\n\r\n// For Coinbase Wallet\r\nimport WalletLink from \"walletlink\";\r\n\r\n// For Fortmatic\r\nimport Fortmatic from \"fortmatic\";\r\n\r\n// For WalletConnect\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\n// For Polkadot Wallet\r\nimport * as PolkadotExtensionDapp from \"@polkadot/extension-dapp\";\r\nimport * as ReefDefiEvmProvider from \"@reef-defi/evm-provider\";\r\nimport * as PolkadotApi from \"@polkadot/api\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContractService {\r\n\r\n    APP_NAME = \"ethbox\";\r\n    INFURA_API_KEY = \"b5b51030cf3e451bb523a3f2ca10e3ff\";\r\n    FORTMATIC_API_KEY = \"pk_test_ADCE42E053643A95\";\r\n\r\n    // To know more about ObsEmitter, ObsCacher and ObsReplayer see https://github.com/4skinSkywalker/AsyncUtils\r\n    tokens$ = new ObsCacher(null);\r\n    tokensMap;\r\n\r\n    // Connection will hold a connection object by EthersModal, see more https://github.com/4skinSkywalker/EthersModal\r\n    connection;\r\n    chainId$ = new ObsCacher(null);; // This is a relayer for connection.chainId$\r\n    selectedAccount$ = new ObsCacher(null);; // This is a relayer for connection.selectedAccount$\r\n\r\n    incomingBoxes$ = new ObsCacher(null);\r\n    outgoingBoxes$ = new ObsCacher(null);\r\n\r\n    isChainSupported$ = new ObsCacher(false);\r\n    isReefMainnet$ = new ObsCacher(false);\r\n    isEthereumMainnet$ = new ObsCacher(false);\r\n    isBinanceMainnet$ = new ObsCacher(false);\r\n    isMaticMainnet$ = new ObsCacher(false);\r\n\r\n    isAppReady$ = new ObsCacher(false);\r\n    isStakingReady$ = new ObsCacher(false);\r\n\r\n    approvalInteraction$ = new ObsEmitter();\r\n    boxInteraction$ = new ObsEmitter();\r\n    stakingInteraction$ = new ObsEmitter();\r\n    tokenDispenserInteraction$ = new ObsEmitter();\r\n\r\n    // These variables are just for the boxes loop, it uses SmartInterval under the hood, to know more see https://github.com/4skinSkywalker/SmartInterval\r\n    private boxesIntervalCycleDelay = 2e3;\r\n    private boxesInterval;\r\n\r\n    // These fields are variables initialized by setVariables\r\n    private ethboxAddress;\r\n    private ethboxContract;\r\n    private stakingAddress;\r\n    private stakingContract;\r\n    private tokenDispenserAddress;\r\n    private tokenDispenserContract;\r\n\r\n    private em; // This variable holds the instance of EthersModal\r\n\r\n    constructor(\r\n        private ngZone: NgZone,\r\n        private loadingIndicatorServ: LoadingIndicatorService,\r\n        private toasterServ: ToasterService,\r\n        private confirmDialogServ: ConfirmDialogService,\r\n        private viewConsoleServ: ViewConsoleService\r\n    ) {\r\n        this.init();\r\n    }\r\n\r\n    // Connect the user to the dapp\r\n    // Run on user interaction\r\n    async connect(): Promise<void> {\r\n        this.loadingIndicatorServ.on();\r\n        try {\r\n            await this.em.connect();\r\n        }\r\n        catch (err) {\r\n            this.loadingIndicatorServ.off();\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: err,\r\n                duration: \"long\"\r\n            });\r\n            throw err;\r\n        }\r\n        this.loadingIndicatorServ.off();\r\n    }\r\n\r\n    // Disconnect the user from the dapp\r\n    // Run on user interaction\r\n    async disconnect(): Promise<void> {\r\n        this.em.disconnect();\r\n        this.reset();\r\n    }\r\n\r\n    // Setup EthersModal and launch the box interval\r\n    private init(): void {\r\n\r\n        let myWallets = EthersModal.providers.array;\r\n\r\n        // Setup of Coinbase configurations\r\n        let coinbaseCfg = EthersModal.providers.dictionary.CoinbaseCfg;\r\n        coinbaseCfg.options.appName = this.APP_NAME;\r\n        coinbaseCfg.options.infuraApiKey = this.INFURA_API_KEY;\r\n        coinbaseCfg.package = WalletLink;\r\n        myWallets.push(coinbaseCfg);\r\n\r\n        // Setup of Fortmatic configurations\r\n        let fortmaticCfg = EthersModal.providers.dictionary.FortmaticCfg;\r\n        fortmaticCfg.options.fortmaticApiKey = this.FORTMATIC_API_KEY;\r\n        fortmaticCfg.options.infuraApiKey = this.INFURA_API_KEY;\r\n        fortmaticCfg.package = Fortmatic;\r\n        myWallets.push(fortmaticCfg);\r\n\r\n        // Setup of WalletConnect configurations\r\n        let walletConnectCfg = EthersModal.providers.dictionary.WalletConnectCfg;\r\n        walletConnectCfg.options.infuraApiKey = this.INFURA_API_KEY;\r\n        walletConnectCfg.package = WalletConnectProvider;\r\n        myWallets.push(walletConnectCfg);\r\n\r\n        // Setup of Polkadot configurations\r\n        let polkadotCfg = EthersModal.providers.dictionary.PolkadotCfg;\r\n        polkadotCfg.options.appName = this.APP_NAME;\r\n        polkadotCfg.package = [\r\n            PolkadotExtensionDapp,\r\n            ReefDefiEvmProvider,\r\n            PolkadotApi\r\n        ];\r\n        myWallets.push(polkadotCfg);\r\n\r\n        // Instantiate EthersModal and get the connection\r\n        this.em = new EthersModal({\r\n            providerOpts: myWallets,\r\n            cacheProvider: true\r\n        });\r\n        this.connection = this.em.connection;\r\n\r\n        // The following code is to setup relayers for retro-compatibility\r\n        this.connection.chainId$\r\n            .subscribe(newChainId => this.chainId$.next(newChainId));\r\n        this.connection.selectedAccount$\r\n            .subscribe(newSelectedAccount => this.selectedAccount$.next(newSelectedAccount));\r\n\r\n        // Instantiate SmartInterval for fetching boxes at regular intervals\r\n        this.boxesInterval = new SmartInterval(\r\n            async () => {\r\n\r\n                await new Promise((resolve) => {\r\n                    this.ngZone.run(async () => {\r\n\r\n                        // \"try\" is used here because it's expected to see boxes getters to fail from time to time due to network changes\r\n                        try {\r\n                            this.incomingBoxes$.next(await this.getIncomingBoxes());\r\n                            this.outgoingBoxes$.next(await this.getOutgoingBoxes());\r\n                        } catch (err) {\r\n                            console.warn(\"Box getters failed.\");\r\n                        }\r\n                        resolve(1);\r\n                    });\r\n                });\r\n            },\r\n            this.boxesIntervalCycleDelay\r\n        );\r\n\r\n        // Force boxes to be fetched on boxInteraction$\r\n        this.boxInteraction$.subscribe(() =>\r\n            this.boxesInterval.forceExecution()\r\n        );\r\n\r\n        // Setup automatic fetching of boxes and setting of variables\r\n        [\r\n            this.connection.isConnected$,\r\n            this.connection.networkChangeNotification$\r\n        ].forEach(obs =>\r\n            obs.subscribe(() => {\r\n                this.boxesInterval.forceExecution();\r\n                this.setVariables();\r\n            })    \r\n        );\r\n\r\n        // Automatically connect if there's a cached provider\r\n        // Must defer this because it could run before the provider is injected into the page\r\n        setTimeout(() => {\r\n            if (localStorage.getItem(\"ETHERS_MODAL_CACHED_PROVIDER\")) {\r\n                this.connect();\r\n            }\r\n        }, 1500);\r\n    }\r\n\r\n    // Load supported tokens, instantiate contracts and start boxes fetching\r\n    private async setVariables(): Promise<void> {\r\n\r\n        if (!this.connection.isConnected$.getValue()) {\r\n            this.reset();\r\n            return;\r\n        }\r\n\r\n        // The following code sets contracts depending on the current chain\r\n        let chainId = this.connection.chainId$.getValue();\r\n        switch ((chainId || {}).toString()) {\r\n            case \"reef-mainnet\": // Reef Mainnet\r\n                this.isReefMainnet$.next(true);\r\n                this.ethboxAddress = ETHBOX.ADDRESSES.REEF;\r\n                break;\r\n            case \"reef-testnet\": // Reef Testnet\r\n                this.ethboxAddress = ETHBOX.ADDRESSES.REEF_TESTNET;\r\n                this.tokenDispenserAddress = TOKEN_DISPENSER.ADDRESSES.REEF_TESTNET;\r\n                break;\r\n            case \"1\":            // Ethereum Mainnet\r\n                this.isEthereumMainnet$.next(true);\r\n                this.ethboxAddress = ETHBOX.ADDRESSES.ETHEREUM;\r\n                this.stakingAddress = STAKING.ADDRESSES.ETHEREUM;\r\n                break;\r\n            case \"4\":            // Ethereum Testnet\r\n                this.ethboxAddress = ETHBOX.ADDRESSES.ETHEREUM_TESTNET;\r\n                this.tokenDispenserAddress = TOKEN_DISPENSER.ADDRESSES.ETHEREUM_TESTNET;\r\n                break;\r\n            case \"56\":           // Binance Mainnet\r\n                this.isBinanceMainnet$.next(true);\r\n                this.ethboxAddress = ETHBOX.ADDRESSES.BINANCE;\r\n                this.stakingAddress = STAKING.ADDRESSES.BINANCE;\r\n                break;\r\n            case \"97\":           // Binance Testnet\r\n                this.ethboxAddress = ETHBOX.ADDRESSES.BINANCE_TESTNET;\r\n                this.tokenDispenserAddress = TOKEN_DISPENSER.ADDRESSES.BINANCE_TESTNET;\r\n                break;\r\n            case \"137\":          // Matic Mainnet\r\n                this.isMaticMainnet$.next(true);\r\n                this.ethboxAddress = ETHBOX.ADDRESSES.MATIC;\r\n                break;\r\n            case \"80001\":        // Matic Testnet\r\n                this.ethboxAddress = ETHBOX.ADDRESSES.MATIC_TESTNET;\r\n                this.tokenDispenserAddress = TOKEN_DISPENSER.ADDRESSES.MATIC_TESTNET;\r\n                break;\r\n            default:\r\n                this.reset();\r\n                throw new Error(\"Network not recognized.\");\r\n        }\r\n\r\n        this.ethboxContract = new this.connection.ethers.Contract(\r\n            this.ethboxAddress,\r\n            ETHBOX.ABI,\r\n            this.connection.signer$.getValue()\r\n        );\r\n\r\n        if (this.stakingAddress) {\r\n            this.stakingContract = new this.connection.ethers.Contract(\r\n                this.stakingAddress,\r\n                STAKING.ABI,\r\n                this.connection.signer$.getValue()\r\n            );\r\n            this.isStakingReady$.next(true);\r\n        }\r\n\r\n        if (this.tokenDispenserAddress) {\r\n            this.tokenDispenserContract = new this.connection.ethers.Contract(\r\n                this.tokenDispenserAddress,\r\n                TOKEN_DISPENSER.ABI,\r\n                this.connection.signer$.getValue()\r\n            );\r\n        }\r\n\r\n        this.isChainSupported$.next(true);\r\n        this.isAppReady$.next(true);\r\n\r\n        this.viewConsoleServ.log(`Ethbox contract: ${this.ethboxAddress}`);\r\n        this.viewConsoleServ.log(`Staking contract: ${this.stakingAddress}`);\r\n\r\n        this.loadTokens();\r\n\r\n        // Start the newly created SmartInterval instance\r\n        this.boxesInterval.start();\r\n    }\r\n\r\n    // Get custom tokens from LS and merge them with curated ones\r\n    loadTokens() {\r\n\r\n        let LSKey = `customTokens${this.connection.chainId$.getValue()}`;\r\n\r\n        let customTokens = [],\r\n            curatedTokens = [];\r\n\r\n        // Take custom tokens from localStorage and give them the unknown icon\r\n        let customTokensLS = localStorage.getItem(LSKey);\r\n        if (customTokensLS) {\r\n            customTokens = JSON.parse(customTokensLS);\r\n            customTokens.forEach(token => token.thumb = 'assets/img/unknown-icon.png');\r\n        }\r\n\r\n        // Take tokens from curated lists for the current network\r\n        let currentChainTokens = chainTokenDictionary[this.connection.chainId$.getValue()];\r\n        if (currentChainTokens) {\r\n            curatedTokens = currentChainTokens;\r\n        }\r\n\r\n        let mergedResults = [...customTokens, ...curatedTokens];\r\n        this.tokensMap = mergedResults.reduce((a, b) => (a[b.address] = b, a), {});;\r\n        this.tokens$.next(mergedResults);\r\n    }\r\n\r\n    private reset() {\r\n        this.isAppReady$.next(false);\r\n        this.isChainSupported$.next(false);\r\n\r\n        this.boxesInterval.stop();\r\n        this.incomingBoxes$.next(null);\r\n        this.outgoingBoxes$.next(null);\r\n        this.tokens$.next(null);\r\n\r\n        this.tokenDispenserContract = null;\r\n        this.isStakingReady$.next(false);\r\n        this.stakingContract = null;\r\n        this.ethboxContract = null;\r\n\r\n        this.isMaticMainnet$.next(false);\r\n        this.isBinanceMainnet$.next(false);\r\n        this.isEthereumMainnet$.next(false);\r\n    }\r\n\r\n    networkInfo(chainId) {\r\n        switch ((chainId || {}).toString()) {\r\n            case \"reef-mainnet\":\r\n                return {\r\n                    name: \"Reef Testnet\",\r\n                    baseTokenThumb: \"https://assets.coingecko.com/coins/images/13504/small/Group_10572.png?1610534130\",\r\n                    accountScannerUrl: (address) => `https://reefscan.com/account/${address}`,\r\n                    transactionScannerUrl: (hash) => ``\r\n                };\r\n            case \"reef-testnet\":\r\n                return {\r\n                    name: \"Reef Testnet\",\r\n                    baseTokenThumb: \"https://assets.coingecko.com/coins/images/13504/small/Group_10572.png?1610534130\",\r\n                    accountScannerUrl: (address) => `https://testnet.reefscan.com/account/${address}`,\r\n                    transactionScannerUrl: (hash) => ``\r\n                };\r\n            case \"1\":\r\n                return {\r\n                    name: \"Ethereum Mainnet\",\r\n                    baseTokenThumb: \"https://assets.coingecko.com/coins/images/279/thumb/ethereum.png\",\r\n                    accountScannerUrl: (address) => `https://etherscan.io/address/${address}`,\r\n                    transactionScannerUrl: (hash) => ``\r\n                };\r\n            case \"4\":\r\n                return {\r\n                    name: \"Ethereum Testnet\",\r\n                    baseTokenThumb: \"https://assets.coingecko.com/coins/images/279/thumb/ethereum.png\",\r\n                    accountScannerUrl: (address) => `https://rinkeby.etherscan.io/address/${address}`,\r\n                    transactionScannerUrl: (hash) => ``\r\n                };\r\n            case \"56\":\r\n                return {\r\n                    name: \"Binance Mainnet\",\r\n                    baseTokenThumb: \"https://v1exchange.pancakeswap.finance/images/coins/bnb.png\",\r\n                    accountScannerUrl: (address) => `https://bscscan.com/address/${address}`,\r\n                    transactionScannerUrl: (hash) => ``\r\n                };\r\n            case \"97\":\r\n                return {\r\n                    name: \"Binance Testnet\",\r\n                    baseTokenThumb: \"https://v1exchange.pancakeswap.finance/images/coins/bnb.png\",\r\n                    accountScannerUrl: (address) => `https://testnet.bscscan.com/address/${address}`,\r\n                    transactionScannerUrl: (hash) => ``\r\n                };\r\n            case \"137\":\r\n                return {\r\n                    name: \"Matic Mainnet\",\r\n                    baseTokenThumb: \"https://assets.coingecko.com/coins/images/4713/thumb/matic___polygon.jpg\",\r\n                    accountScannerUrl: (address) => `https://polygonscan.com/address/${address}`,\r\n                    transactionScannerUrl: (hash) => ``\r\n                };\r\n            case \"80001\":\r\n                return {\r\n                    name: \"Matic Testnet\",\r\n                    baseTokenThumb: \"https://assets.coingecko.com/coins/images/4713/thumb/matic___polygon.jpg\",\r\n                    accountScannerUrl: (address) => `https://mumbai.polygonscan.com/address/${address}`,\r\n                    transactionScannerUrl: (hash) => ``\r\n                };\r\n            default:\r\n                return {\r\n                    name: \"Not supported\",\r\n                    baseTokenThumb: null,\r\n                    accountScannerUrl: () => ``,\r\n                    transactionScannerUrl: () => ``\r\n                };\r\n        }\r\n    }\r\n\r\n    isEthereum(): boolean {\r\n        return [1, 4].includes(this.connection.chainId$.getValue());\r\n    }\r\n\r\n    isBinance(): boolean {\r\n        return [56, 97].includes(this.connection.chainId$.getValue());\r\n    }\r\n\r\n    isMatic(): boolean {\r\n        return [137, 80001].includes(this.connection.chainId$.getValue());\r\n    }\r\n\r\n    isReef(): boolean {\r\n        return [\"reef-testnet\", \"reef-mainnet\"].includes(this.connection.chainId$.getValue());\r\n    }\r\n\r\n    isReefMainnet(): boolean {\r\n        return this.connection.chainId$.getValue() === \"reef-mainnet\";\r\n    }\r\n\r\n    isEthereumMainnet(): boolean {\r\n        return this.connection.chainId$.getValue() == 1;\r\n    }\r\n\r\n    isBinanceMainnet(): boolean {\r\n        return this.connection.chainId$.getValue() == 56;\r\n    }\r\n\r\n    isMaticMainnet(): boolean {\r\n        return this.connection.chainId$.getValue() == 137;\r\n    }\r\n\r\n    isReefTestnet(): boolean {\r\n        return this.connection.chainId$.getValue() === \"reef-testnet\";\r\n    }\r\n\r\n    isEthereumTestnet(): boolean {\r\n        return this.connection.chainId$.getValue() == 4;\r\n    }\r\n\r\n    isBinanceTestnet(): boolean {\r\n        return this.connection.chainId$.getValue() == 97;\r\n    }\r\n\r\n    isMaticTestnet(): boolean {\r\n        return this.connection.chainId$.getValue() == 80001;\r\n    }\r\n\r\n    isTestnet(): boolean {\r\n        return this.isReefTestnet() ||\r\n               this.isEthereumTestnet() ||\r\n               this.isBinanceTestnet() ||\r\n               this.isMaticTestnet();\r\n    }\r\n\r\n    // Give the user 100 of the selected test token\r\n    // State changing operation\r\n    async give100TestToken(testTokenIndex: string) {\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // I decided to refactor the code below and have just the code that can throw exception inside the try/catch block, and to use throw to stop the execution in catch\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await this.tokenDispenserContract.giveToken(\r\n                testTokenIndex,\r\n                this.connection.ethers.utils.parseUnits(\"100\", 18)\r\n            );\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Token dispending aborted by user.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Token dispensing aborted\");\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"You have received 100 test tokens!\",\r\n            duration: \"long\"\r\n        });\r\n        this.viewConsoleServ.log(\r\n            `Received 100 test tokens (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.tokenDispenserInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    // Check if the given address is syntatically valid\r\n    isValidAddress(address: string): boolean {\r\n        return this.connection.ethers.utils.isAddress(address);\r\n    }\r\n\r\n    private hash(string) {\r\n        return Web3Utils.soliditySha3(string);\r\n    }\r\n\r\n    private doubleHash(string) {\r\n        return this.hash(this.hash(string));\r\n    }\r\n\r\n    // Check if the password provided fits the one that encrypted the box\r\n    isValidPassword(box: Box, password: string): boolean {\r\n        return box.passHashHash === this.doubleHash(password);\r\n    }\r\n\r\n    // What about using ethers.utils.formatEthers() instead?\r\n    weiToDecimal(wei: string, decimals: string | number): string {\r\n        let multiplier = \"1\" + ZERO.repeat(Number(decimals));\r\n        let _wei = new BigNumber(wei);\r\n        return _wei.dividedBy(multiplier).toFixed();\r\n    }\r\n\r\n    // What about using ethers.utils.parseUnits() instead?\r\n    decimalToWei(decimalValue: string, decimals: string | number): string {\r\n        let multiplier = \"1\" + ZERO.repeat(Number(decimals));\r\n        let _decimal = new BigNumber(decimalValue);\r\n        return _decimal.multipliedBy(multiplier).toFixed();\r\n    }\r\n\r\n    // Read only query\r\n    private async getWeiAllowance(tokenAddress: string): Promise<string> {\r\n\r\n        let tokenContract = new this.connection.ethers.Contract(\r\n            tokenAddress,\r\n            ERC20_ABI,\r\n            this.connection.provider$.getValue()\r\n        );\r\n\r\n        let allowance = await tokenContract.allowance(\r\n            this.connection.selectedAccount$.getValue(),\r\n            this.ethboxAddress\r\n        );\r\n\r\n        return allowance.toString();\r\n    }\r\n\r\n    // Read only query\r\n    async getTokenData(tokenAddress: string): Promise<TokenData> {\r\n\r\n        let name, symbol, decimals;\r\n        let thumb = \"assets/img/unknown-icon.png\";\r\n\r\n        // If the token resides in the curated list, then take the data from there\r\n        if (this.tokensMap[tokenAddress]) {\r\n            name = this.tokensMap[tokenAddress].name;\r\n            symbol = this.tokensMap[tokenAddress].symbol;\r\n            decimals = this.tokensMap[tokenAddress].decimals;\r\n            thumb = this.tokensMap[tokenAddress].thumb;\r\n        }\r\n        // Otherwise take the data from the blockchain\r\n        else {\r\n\r\n            let tokenContract = new this.connection.ethers.Contract(\r\n                tokenAddress,\r\n                ERC20_ABI,\r\n                this.connection.provider$.getValue()\r\n            );\r\n\r\n            decimals = await tokenContract.decimals();\r\n            name = await tokenContract.name();\r\n            symbol = await tokenContract.symbol();\r\n        }\r\n\r\n        return {\r\n            address: tokenAddress,\r\n            name,\r\n            symbol,\r\n            decimals,\r\n            thumb\r\n        };\r\n\r\n    }\r\n\r\n    // Read only query\r\n    async getTokenBalance(tokenAddress: string): Promise<TokenBalance> {\r\n\r\n        let tokenData = await this.getTokenData(tokenAddress);\r\n        let selectedAccount = this.connection.selectedAccount$.getValue();\r\n\r\n        let wei, weiAllowance;\r\n\r\n        // If it's the base token, then mocks the allowance as unlimited (MAX_VALUE)\r\n        if (tokenAddress == ADDRESS_ZERO) {\r\n            wei = (await this.connection.provider$.getValue().getBalance(selectedAccount)).toString();\r\n            weiAllowance = MAX_VALUE;\r\n        }\r\n        else {\r\n\r\n            let tokenContract = new this.connection.ethers.Contract(\r\n                tokenAddress,\r\n                ERC20_ABI,\r\n                this.connection.provider$.getValue()\r\n            );\r\n\r\n            wei = (await tokenContract.balanceOf(selectedAccount)).toString();\r\n            weiAllowance = await this.getWeiAllowance(tokenAddress);\r\n        }\r\n\r\n        return {\r\n            address: tokenAddress,\r\n            wei,\r\n            weiAllowance,\r\n            decimalValue: this.weiToDecimal(wei, tokenData.decimals),\r\n            decimalAllowance: this.weiToDecimal(weiAllowance, tokenData.decimals)\r\n        };\r\n    }\r\n\r\n    // Approve unlimited spending for the given address\r\n    // State changing operation\r\n    async approveMax(tokenAddress: string): Promise<void> {\r\n\r\n        let tokenContract = new this.connection.ethers.Contract(\r\n            tokenAddress,\r\n            ERC20_ABI,\r\n            this.connection.signer$.getValue()\r\n        );\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await tokenContract.approve(this.ethboxAddress, MAX_VALUE);\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Token approval aborted by user.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\r\n                `Approval for unlimited allowance of ${tokenAddress} aborted`\r\n            );\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"Approval successful – You can now send / trade this token!\",\r\n            duration: \"long\"\r\n        });\r\n        this.viewConsoleServ.log(\r\n            `Successfully approved unlimited allowance of ${tokenAddress} (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.approvalInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    // It takes the backend data and adapt it to the frontend needs\r\n    // bcBox stands for \"blockchain box\" while appBox stands for \"application box\"\r\n    private async bcBox2appBox(bcBox, override) {\r\n\r\n        let appBox: any = {}; // I should make a type here\r\n        for (let key in bcBox) {\r\n            if (bcBox.hasOwnProperty(key)) {\r\n\r\n                // Filter out numeric keys (why those are there?)\r\n                if (!isNaN(Number(key))) {\r\n                    continue;\r\n                }\r\n\r\n                // Evaluate BigNumber(s) to numeric strings in base-10\r\n                // This is just to implement this feature faster as the code migrated from web3 to this.connection.ethers, in future should be refactored to work with BigNumber at all times\r\n                if (bcBox[key]._isBigNumber) {\r\n                    appBox[key] = bcBox[key].toString();\r\n                    continue;\r\n                }\r\n                appBox[key] = bcBox[key];\r\n            }\r\n        }\r\n\r\n        Object.assign(appBox, override);\r\n\r\n        appBox.readableTimestamp = new Date(appBox.timestamp * 1e3)\r\n            .toLocaleDateString(\r\n                undefined, // Fallbacks to the user's locale\r\n                {\r\n                    year: 'numeric',\r\n                    month: 'short',\r\n                    day: 'numeric',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit'\r\n                }\r\n            );\r\n\r\n        appBox.sendTokenInfo = await this.getTokenData(appBox.sendToken);\r\n        appBox.sendDecimalValue = this.weiToDecimal(\r\n            appBox.sendValue,\r\n            appBox.sendTokenInfo.decimals\r\n        );\r\n\r\n        if (appBox.requestToken) {\r\n            appBox.requestTokenInfo = await this.getTokenData(appBox.requestToken);\r\n            appBox.requestDecimalValue = this.weiToDecimal(\r\n                appBox.requestValue,\r\n                appBox.requestTokenInfo.decimals\r\n            );\r\n        } else {\r\n            appBox.requestValue = \"0\";\r\n        }\r\n\r\n        return appBox;\r\n    }\r\n\r\n    // Fetch the outgoing boxes (both privacy and non)\r\n    // Read only query\r\n    async getIncomingBoxes(): Promise<Box[]> {\r\n\r\n        let boxes = [];\r\n\r\n        let normalBoxes = await this.ethboxContract.getBoxesIncoming();\r\n        for (let index of normalBoxes) {\r\n\r\n            let appBox = await this.bcBox2appBox(\r\n                await this.ethboxContract.getBox(index),\r\n                {\r\n                    index: index.toString(),\r\n                    hasPrivacy: false,\r\n                    recipientHash: null,\r\n                    senderHash: null\r\n                }\r\n            );\r\n\r\n            if (appBox.sender == this.connection.selectedAccount$.getValue()) {\r\n                continue;\r\n            }\r\n\r\n            boxes.push(appBox);\r\n        }\r\n\r\n        let privacyBoxes = await this.ethboxContract.getBoxesIncomingWithPrivacy();\r\n        for (let index of privacyBoxes) {\r\n\r\n            let appBox = await this.bcBox2appBox(\r\n                await this.ethboxContract.getBoxWithPrivacy(index),\r\n                {\r\n                    index: index.toString(),\r\n                    hasPrivacy: true,\r\n                    requestToken: null,\r\n                    requestValue: null\r\n                }\r\n            );\r\n\r\n            if (appBox.senderHash == this.hash(this.connection.selectedAccount$.getValue())) {\r\n                continue;\r\n            }\r\n\r\n            boxes.push(appBox);\r\n        }\r\n\r\n        // Sort boxes by date from newest to oldest\r\n        boxes.sort((a, b) => b.timestamp - a.timestamp);\r\n        window[\"_incBox\"] = boxes;\r\n        // console.log(\"Incoming boxes\", boxes);\r\n\r\n        return boxes;\r\n    }\r\n\r\n    // Fetch the outgoing boxes (both privacy and non)\r\n    // Read only query\r\n    async getOutgoingBoxes(): Promise<Box[]> {\r\n\r\n        let boxes = [];\r\n\r\n        let normalBoxes = await this.ethboxContract.getBoxesOutgoing();\r\n        for (let index of normalBoxes) {\r\n\r\n            let appBox = await this.bcBox2appBox(\r\n                await this.ethboxContract.getBox(index),\r\n                {\r\n                    index: index.toString(),\r\n                    isPrivacy: false,\r\n                    recipientHash: null,\r\n                    senderHash: null\r\n                }\r\n            );\r\n            boxes.push(appBox);\r\n        }\r\n\r\n        let privacyBoxes = await this.ethboxContract.getBoxesOutgoingWithPrivacy();\r\n        for (let index of privacyBoxes) {\r\n\r\n            let appBox = await this.bcBox2appBox(\r\n                await this.ethboxContract.getBoxWithPrivacy(index),\r\n                {\r\n                    index: index.toString(),\r\n                    hasPrivacy: true,\r\n                    requestToken: null,\r\n                    requestValue: null\r\n                }\r\n            );\r\n            boxes.push(appBox);\r\n        }\r\n\r\n        // Sort boxes by date from newest to oldest\r\n        boxes.sort((a, b) => b.timestamp - a.timestamp);\r\n        window[\"_outBox\"] = boxes;\r\n        // console.log(\"Outgoing boxes\", boxes);\r\n\r\n        return boxes;\r\n    }\r\n\r\n    // Make a box\r\n    // State changing operation\r\n    async createBox(boxInputs: BoxInputs): Promise<void> {\r\n\r\n        // Double hash the password\r\n        let passHashHash = this.doubleHash(boxInputs.password);\r\n\r\n        // Get send token details\r\n        let sendTokenData = await this.getTokenData(boxInputs.sendTokenAddress);\r\n        let sendWei = this.decimalToWei(\r\n            boxInputs.sendDecimalValue,\r\n            sendTokenData.decimals\r\n        );\r\n\r\n        // Get request token details\r\n        let requestTokenData = await this.getTokenData(boxInputs.requestTokenAddress);\r\n        let requestWei = this.decimalToWei(\r\n            boxInputs.requestDecimalValue,\r\n            requestTokenData.decimals\r\n        );\r\n\r\n        // If box is one-way, then baseTokenWei is defined\r\n        // Conversely if box is OTC, then baseTokenWei is ZERO\r\n        let baseTokenWei = ZERO;\r\n        if (boxInputs.sendTokenAddress == ADDRESS_ZERO) {\r\n            baseTokenWei = sendWei;\r\n        }\r\n\r\n        // Overrides in ethers are similar to .send({ value: ethValue }) in web3\r\n        let overrides = {\r\n            value: baseTokenWei\r\n        };\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await this.ethboxContract.createBox(\r\n                boxInputs.recipient,\r\n                boxInputs.sendTokenAddress,\r\n                sendWei,\r\n                boxInputs.requestTokenAddress,\r\n                requestWei,\r\n                passHashHash,\r\n                overrides\r\n            );\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Sending aborted.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Box creation aborted\");\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Monitor box via Telegram\r\n        this.sendBoxToPipedream(tx.hash, boxInputs);\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"Your outgoing transaction has been confirmed!\",\r\n            duration: \"long\"\r\n        });\r\n        this.viewConsoleServ.log(\r\n            `Box creation confirmed (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.boxInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    // Make a privacy-preserving box\r\n    // State changing operation\r\n    async createBoxWithPrivacy(boxInputs: BoxInputs): Promise<void> {\r\n\r\n        // Hash the recipient for privacy\r\n        let recipientHash = this.hash(boxInputs.recipient);\r\n\r\n        // Double hash the password\r\n        let passHashHash = this.doubleHash(boxInputs.password);\r\n\r\n        // Get send token details\r\n        let sendTokenData = await this.getTokenData(boxInputs.sendTokenAddress);\r\n        let sendWei = this.decimalToWei(\r\n            boxInputs.sendDecimalValue,\r\n            sendTokenData.decimals\r\n        );\r\n\r\n        // If box is one-way, then baseTokenWei is defined\r\n        // Conversely if box is OTC, then baseTokenWei is ZERO\r\n        let baseTokenWei = ZERO;\r\n        if (boxInputs.sendTokenAddress == ADDRESS_ZERO) {\r\n            baseTokenWei = sendWei;\r\n        }\r\n\r\n        // Overrides in ethers are similar to .send({ value: ethValue }) in web3\r\n        let overrides = {\r\n            value: baseTokenWei\r\n        };\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await this.ethboxContract.createBoxWithPrivacy(\r\n                recipientHash,\r\n                boxInputs.sendTokenAddress,\r\n                sendWei,\r\n                passHashHash,\r\n                overrides\r\n            );\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Sending aborted.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Box creation aborted\");\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Monitor box via Telegram\r\n        this.sendBoxToPipedream(tx.hash, boxInputs);\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"Your outgoing transaction has been confirmed!\",\r\n            duration: \"long\"\r\n        });\r\n        this.viewConsoleServ.log(\r\n            `Box creation confirmed (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.boxInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    // Cancel a box\r\n    // State changing operation\r\n    async cancelBox(boxIndex: number): Promise<void> {\r\n\r\n        // Overrides in ethers are similar to .send({ value: ethValue }) in web3\r\n        let overrides = {\r\n            value: ZERO // Do I really need this?\r\n        };\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await this.ethboxContract.cancelBox(\r\n                boxIndex,\r\n                overrides\r\n            );\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Sending aborted.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Box creation aborted\");\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"Cancelling transaction successful!\",\r\n            duration: \"long\"\r\n        });\r\n\r\n        this.viewConsoleServ.log(\r\n            `Box cancellation confirmed (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.boxInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    // Cancel a privacy-preserving box\r\n    // State changing operation\r\n    async cancelBoxWithPrivacy(boxIndex: number): Promise<void> {\r\n\r\n        // Overrides in ethers are similar to .send({ value: ethValue }) in web3\r\n        let overrides = {\r\n            value: ZERO // Do I really need this?\r\n        };\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await this.ethboxContract.cancelBoxWithPrivacy(\r\n                boxIndex,\r\n                overrides\r\n            );\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Sending aborted.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Box creation aborted\");\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"Cancelling transaction successful!\",\r\n            duration: \"long\"\r\n        });\r\n\r\n        this.viewConsoleServ.log(\r\n            `Box cancellation confirmed (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.boxInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    // Accept a box\r\n    // State changing operation\r\n    async acceptBox(box: Box, password: string): Promise<void> {\r\n\r\n        // Hash the password to check if the user has unlocked the box\r\n        let passHash = this.hash(password);\r\n\r\n        // If the requestedToken is the base token, then there's no need to approve\r\n        let baseTokenWei = ZERO;\r\n        if (box.requestToken == ADDRESS_ZERO) {\r\n            baseTokenWei = box.requestValue;\r\n        } else {\r\n\r\n            // Getting the user balance of the requestedToken\r\n            let tokenBalance = await this.getTokenBalance(box.requestToken);\r\n\r\n            // If the balance is not enough, then reject the operation\r\n            if ((new BigNumber(box.requestValue)).gt(tokenBalance.wei)) {\r\n                this.toasterServ.toastMessage$.next({\r\n                    type: \"danger\",\r\n                    message: `Your have ${tokenBalance.decimalValue} ${box.requestTokenInfo.symbol}, not enough for the exchange.`,\r\n                    duration: \"long\"\r\n                });\r\n                return;\r\n            }\r\n\r\n            // If the allowance is not enough, then ask for the approval\r\n            if ((new BigNumber(box.requestValue)).gt(tokenBalance.weiAllowance)) {\r\n\r\n                // Spawn a dialog\r\n                let isConfirmed = await this.confirmDialogServ.spawn({\r\n                    dialogName: \"Do you want to approve?\",\r\n                    message: 'To accept the exchange you need to approve the requested token first. The approval is required only once per token.<br><span class=\"fw-bold\">Do you want to approve?<span>',\r\n                    confirmButtonName: \"Approve\"\r\n                });\r\n\r\n                // Confirm dialog dismissed\r\n                if (!isConfirmed) return;\r\n\r\n                await this.approveMax(box.requestToken);\r\n                // Stopping here, the user has to click again (clearer from UX perspective)\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Overrides in ethers are similar to .send({ value: ethValue }) in web3\r\n        let overrides = {\r\n            value: baseTokenWei\r\n        };\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await this.ethboxContract.clearBox(\r\n                box.index,\r\n                passHash,\r\n                overrides\r\n            );\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Box approval aborted. Details in the console.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Box approval aborted\");\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"The box has been accepted!\",\r\n            duration: \"long\"\r\n        });\r\n        this.viewConsoleServ.log(\r\n            `Box approval confirmed (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.boxInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    // Accept a privacy-preserving box\r\n    // State changing operation\r\n    async acceptBoxWithPrivacy(box: Box, password: string): Promise<void> {\r\n\r\n        // Hash the password to check if the user has unlocked the box\r\n        let passHash = this.hash(password);\r\n\r\n        // Overrides in ethers are similar to .send({ value: ethValue }) in web3\r\n        let overrides = {\r\n            value: ZERO // Do I really need this?\r\n        };\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await this.ethboxContract.clearBoxWithPrivacy(\r\n                box.index,\r\n                passHash,\r\n                overrides\r\n            );\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Box approval aborted. Details in the console.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Box approval aborted\");\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"The box has been accepted!\",\r\n            duration: \"long\"\r\n        });\r\n        this.viewConsoleServ.log(\r\n            `Box approval confirmed (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.boxInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    async signMessage(message) {\r\n\r\n        let signature;\r\n        try {\r\n            signature = await this.connection.signer$.getValue().signMessage(message);\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Sign of message aborted. Details in the console\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Sign of message aborted\");\r\n        }\r\n\r\n        this.viewConsoleServ.log(\r\n            `A message was signed successfully (message: ${message}, sign: ${signature})`\r\n        );\r\n\r\n        // Return the signature to the consumer\r\n        return signature;\r\n    }\r\n\r\n    // Return the decimal value for the staking rewards the user can claim\r\n    // Read only query\r\n    async getReward() {\r\n        let bn = await this.stakingContract.getUnclaimedReward();\r\n        return this.weiToDecimal(bn.toString(), 18);\r\n    }\r\n\r\n    // State changing operation\r\n    async claimReward() {\r\n\r\n        // Start loading\r\n        this.loadingIndicatorServ.on();\r\n\r\n        // Making of the transaction\r\n        let tx;\r\n        try {\r\n            tx = await this.stakingContract.claimReward();\r\n        }\r\n        catch (err) {\r\n            this.toasterServ.toastMessage$.next({\r\n                type: \"danger\",\r\n                message: \"Reward claiming aborted. Details in the console.\",\r\n                duration: \"long\"\r\n            });\r\n            this.viewConsoleServ.error(\"Reward claiming aborted\");\r\n\r\n            this.loadingIndicatorServ.off();\r\n            throw err;\r\n        }\r\n\r\n        // Waiting for transaction confirmation\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"secondary\",\r\n            message: \"Waiting for transaction to confirm (may take a while, depending on network load)...\",\r\n            duration: \"short\"\r\n        });\r\n        this.viewConsoleServ.warning(\r\n            `Waiting for transaction to confirm (tx hash: ${tx.hash})`\r\n        );\r\n\r\n        let receipt = await tx.wait();\r\n\r\n        // Transaction confirmed\r\n        this.toasterServ.toastMessage$.next({\r\n            type: \"success\",\r\n            message: \"Reward has been claimed!\",\r\n            duration: \"long\"\r\n        });\r\n        this.viewConsoleServ.log(\r\n            `Rewards claimed successfully (gas used: ${receipt.gasUsed}, tx hash: ${receipt.transactionHash})`\r\n        );\r\n\r\n        // Stop loading\r\n        this.stakingInteraction$.next(true);\r\n        this.loadingIndicatorServ.off();\r\n\r\n        // Return receipt to the consumer\r\n        return receipt;\r\n    }\r\n\r\n    private async sendBoxToPipedream(hash, boxInputs: BoxInputs) {\r\n\r\n        // Make a deep copy\r\n        let copy: any = JSON.parse(JSON.stringify(boxInputs));\r\n\r\n        // Delete password\r\n        delete copy.password;\r\n        delete copy.sender;\r\n        delete copy.recipient;\r\n\r\n        // Create props\r\n        copy.senderHash = this.hash(boxInputs.sender);;\r\n        copy.recipientHash = this.hash(boxInputs.recipient);;\r\n        copy.hash = hash;\r\n        copy.chainId = this.connection.chainId$.getValue();\r\n        copy.timestamp = Date.now() / 1000;\r\n\r\n        // Ping lambda on Pipedream to record box\r\n        await fetch(\"https://enfi7jzu8p3znh.m.pipedream.net\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(copy)\r\n        });\r\n    }\r\n\r\n    async receiveBoxFromPipedream(box) {\r\n\r\n        // Ping lambda on Pipedream to retrieve box\r\n        let response = await fetch(\"https://enyh65xizxc4ohf.m.pipedream.net\", {\r\n            method: \"POST\",\r\n            headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                chainId: this.connection.chainId$.getValue(),\r\n                senderHash: box.senderHash || this.hash(box.sender),\r\n                recipientHash: box.recipientHash || this.hash(box.recipient),\r\n                timestamp: box.timestamp\r\n            })\r\n        });\r\n        return await response.json();\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContractService } from './contract.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GovernanceService {\r\n\r\n    endpoint = 'https://www.ethbox.org/gov/voting.php';\r\n\r\n    constructor(private contractServ: ContractService) { }\r\n\r\n    async getVotings(options) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'get_votings');\r\n        \r\n        if (options.isCommunity) {\r\n            formData.append('community', '1');\r\n        }\r\n\r\n        let response = await fetch(this.endpoint, { method: 'POST', body: formData });\r\n        let { data: proposals } = await response.json();\r\n\r\n        // Parsing answers from string to array\r\n        proposals.forEach(proposal =>\r\n            proposal.answers = JSON.parse(proposal.answers));\r\n        return proposals;\r\n    }\r\n\r\n    async isEligible(options) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'is_eligible');\r\n        formData.append('voting', options.votingNumber);\r\n        formData.append('address', this.contractServ.selectedAccount$.getValue());\r\n        \r\n        if (options.isCommunity) {\r\n            formData.append('community', '1');\r\n        }\r\n\r\n        let response = await fetch(this.endpoint, { method: 'POST', body: formData });\r\n        let { result: isEligible } = await response.json();\r\n        return isEligible;\r\n    }\r\n\r\n    async hasVoted(options) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'has_voted');\r\n        formData.append('voting', options.votingNumber);\r\n        formData.append('address', this.contractServ.selectedAccount$.getValue());\r\n\r\n        if (options.isCommunity) {\r\n            formData.append('community', '1');\r\n        }\r\n\r\n        let response = await fetch(this.endpoint, { method: 'POST', body: formData });\r\n        let { result: hasVoted } = await response.json();\r\n        return hasVoted;\r\n    }\r\n\r\n    async getVotes(options) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'get_votes');\r\n        formData.append('voting', options.votingNumber);\r\n\r\n        if (options.isCommunity) {\r\n            formData.append('community', '1');\r\n        }\r\n\r\n        // I can't standardize the response into a type unless we standardize our BE API, therefore I have to cheat with : \"any\" in order to access it's properties without TS complaining about it\r\n        let response: any = await fetch(this.endpoint, { method: 'POST', body: formData });\r\n        let json = await response.json();\r\n\r\n        // Be careful, those votings that haven't yet started have a the following payload: {\"error\":\"Results not verified yet\"}\r\n        if (json.error === \"Results not verified yet\") {\r\n            return { sum: null, votes: null };\r\n        }\r\n\r\n        let votes = json.data;\r\n        return {\r\n            sum: votes.reduce((a, b) => a + b.answer, 0),\r\n            votes\r\n        };\r\n    }\r\n\r\n    async getVoters(options) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'get_voters');\r\n        formData.append('voting', options.votingNumber);\r\n\r\n        if (options.isCommunity) {\r\n            formData.append('community', '1');\r\n        }\r\n\r\n        let response = await fetch(this.endpoint, { method: 'POST', body: formData });\r\n        let { data: eligibleUsers } = await response.json();\r\n        return eligibleUsers\r\n            .sort((a, b) => b.voting_power - a.voting_power);\r\n    }\r\n\r\n    async getVotesDetails(options) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'get_votes_detail');\r\n        formData.append('voting', options.votingNumber);\r\n\r\n        if (options.isCommunity) {\r\n            formData.append('community', '1');\r\n        }\r\n\r\n        let response = await fetch(this.endpoint, { method: 'POST', body: formData });\r\n        let { data: votesDetail } = await response.json();\r\n        return votesDetail;\r\n    }\r\n\r\n    async vote(proposal, selectedChoice) {\r\n\r\n        let selectedAccount = this.contractServ.selectedAccount$.getValue();\r\n\r\n        let response: any = await this.contractServ\r\n            .signMessage(`ethbox Vote #${proposal.n}`);\r\n        let signedMessage = response.result;\r\n\r\n        console.log('Signed message is', signedMessage);\r\n\r\n        this.castVote(\r\n            proposal,\r\n            selectedChoice,\r\n            selectedAccount,\r\n            signedMessage);\r\n    }\r\n\r\n    private async castVote(proposal, vote, account, signedMessage) {\r\n\r\n        console.log('Proposal is', proposal);\r\n        console.log('Choosen vote is', vote);\r\n        console.log('Connected account is', account);\r\n        console.log('Signed message is', signedMessage);\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'cast_vote');\r\n        formData.append('voting', proposal.n);\r\n        formData.append('address', account);\r\n        formData.append('signed_msg', signedMessage);\r\n        formData.append('vote', vote);\r\n\r\n        // I have no idea what's the response looks like (json or text or both depending on the execution?)\r\n        let response = await fetch(this.endpoint, { method: 'POST', body: formData });\r\n        return response;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoadingIndicatorService {\r\n\r\n    counter = 0;\r\n    isLoading$ = new BehaviorSubject(false);\r\n\r\n    constructor() { }\r\n\r\n    on() {\r\n        // Turning it on as long as it's untouched\r\n        if (this.counter < 1) {\r\n            this.isLoading$.next(true);\r\n        }\r\n        this.counter++;\r\n    }\r\n\r\n    off() {\r\n        if (this.counter > 0) {\r\n            this.counter--;\r\n        }\r\n        // Turning it off as soon as all offs as been called\r\n        if (this.counter < 1) {\r\n            this.isLoading$.next(false);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PromptOptions } from '../interfaces';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PromptDialogService {\r\n\r\n    transitionDelay = 250;\r\n\r\n    constructor() { }\r\n\r\n    spawn({ dialogName, message, messageColor, inputs, submitButtonName, cancelButtonName }: PromptOptions) {\r\n\r\n        if (!message) {\r\n            throw new Error('Message is required.');\r\n        }\r\n\r\n        if (!inputs || Object.keys(inputs).length < 1) {\r\n            throw new Error('At least an input is required.');\r\n        }\r\n\r\n        // Some defaults\r\n        dialogName = dialogName || 'Please enter the values';\r\n        submitButtonName = submitButtonName || 'Submit';\r\n        cancelButtonName = 'Cancel';\r\n\r\n        // The id is used to generate a unique dialog and to retrieve it during the removal\r\n        let randomId = Math.random().toString(36).substring(2);\r\n\r\n        // Making the dialog\r\n        let newEl = document.createElement('div');\r\n        newEl.innerHTML = this.getTemplate(randomId, dialogName, message, messageColor, inputs, submitButtonName, cancelButtonName);\r\n        let dialogWrapper: any = newEl.firstElementChild;\r\n        let dialog = dialogWrapper.firstElementChild;\r\n\r\n        // This is so I can code the click-outside-to-close feature\r\n        dialog.addEventListener('click', evt => evt.stopPropagation());\r\n\r\n        // Appending the dialog\r\n        document.body.appendChild(dialogWrapper);\r\n        setTimeout(() => {\r\n            dialogWrapper.style.opacity = '1';\r\n            dialog.style.opacity = '1';\r\n            document.body.style.overflow = 'hidden';\r\n        }, 25);\r\n\r\n\r\n        // Making a promise that will resolve on button clicked\r\n        let resolve;\r\n        let closePromise = new Promise(_resolve => {\r\n            // Saving the reference so it can be used outside\r\n            resolve = _resolve;\r\n        });\r\n\r\n        // Attaching to the window the callback for the buttons\r\n        window[`promptInputs${randomId}`] = inputs;\r\n        window[`onPrompt${randomId}`] = data => {\r\n            resolve(data);\r\n            // Deleting the prompt related stuff from the window\r\n            delete window[`promptInputs${randomId}`];\r\n            delete window[`onPrompt${randomId}`];\r\n            // Removing the dialog\r\n            let dialogWrapper: any = document.querySelector(`#prompt_${randomId}`);\r\n            let dialog = dialogWrapper.firstElementChild;\r\n            dialogWrapper.style.opacity = '0';\r\n            dialog.style.opacity = '0';\r\n            setTimeout(() => {\r\n                dialogWrapper.remove();\r\n                document.body.style.overflow = 'visible';\r\n            }, this.transitionDelay);\r\n        };\r\n\r\n        return closePromise;\r\n    }\r\n\r\n    private getTemplate(id, dialogName, message, messageColor = 'dark', inputs, submitButtonName, cancelButtonName) {\r\n\r\n        let inputsTemplate = Object.entries<any>(inputs)\r\n            .reduce((result, [fieldName, { type, label, value }]) => {\r\n                result += this.getInputTemplate(id, type, fieldName, label, value);\r\n                return result;\r\n            }, '');\r\n\r\n        return `\r\n        <div id=\"prompt_${id}\" class=\"d-flex align-items-center justify-content-center position-fixed p-3\" style=\"opacity: 0; top: 0; left: 0; bottom: 0; right: 0; background-color: rgba(0, 0, 0, .5); z-index: 1669; transition: all ${this.transitionDelay}ms ease-out\" onclick=\"onPrompt${id}(null)\">\r\n            <div class=\"bg-white container-small rounded-alot\" style=\"opacity: 0; z-index: 1670; transition: all ${this.transitionDelay}ms ease-out\">\r\n                <header class=\"d-flex align-items-center p-3 border-bottom\">\r\n                    <div class=\"fs-5 me-auto\">${dialogName}</div>\r\n                    <button onclick=\"onPrompt${id}(null)\" class=\"btn-close\"></button>\r\n                </header>\r\n                <div class=\"p-3 pb-0\">\r\n                    <p class=\"text-${messageColor}\">${message}</p>\r\n                    ${inputsTemplate}\r\n                </div>\r\n                <footer class=\"p-3 border-top text-end\">\r\n                    <button onclick=\"onPrompt${id}(null)\" class=\"btn btn-outline-eboxprimary rounded-alot me-2\">${cancelButtonName}</button>\r\n                    <button onclick=\"onPrompt${id}(window.promptInputs${id})\" class=\"btn btn-eboxprimary rounded-alot\">${submitButtonName}</button>\r\n                </footer>\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    private getInputTemplate(id, type = 'text', fieldName, label, value = '') {\r\n        return `\r\n            <div class=\"form-floating mb-3\">\r\n                <input type=\"${type}\" class=\"form-control rounded-alot\" value=\"${value}\" placeholder=\"${label}\" oninput=\"promptInputs${id}['${fieldName}'].value = this.value\">\r\n                <label>${label}</label>\r\n            </div>`;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StakingService {\r\n\r\n    constructor() { }\r\n\r\n    async getDateLimits() {\r\n\r\n        let endpoint = 'https://www.ethbox.org/staking/fetch_data.php';\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'get_date_limits');\r\n\r\n        let response = await fetch(endpoint, { method: 'POST', body: formData });\r\n        let { data: result } = await response.json();\r\n        return result;\r\n    }\r\n\r\n    async getData(pageMonth, pageDate) {\r\n\r\n        let endpoint = 'https://www.ethbox.org/staking/fetch_data.php';\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'get_data');\r\n        formData.append('month', pageMonth + 1);\r\n        formData.append('day', pageDate);\r\n\r\n        let response = await fetch(endpoint, { method: 'POST', body: formData });\r\n        let { data: result } = await response.json();\r\n        return result;\r\n    }\r\n\r\n    async getPayoutReward(address) {\r\n        let endpoint = 'https://www.ethbox.org/api/payout.php';\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'payout_get_unclaimed');\r\n        formData.append('address', address);\r\n\r\n        let response = await fetch(endpoint, { method: 'POST', body: formData });\r\n        let result = await response.json();\r\n        return result;\r\n    }\r\n\r\n    async setPayoutReward(address) {\r\n        let endpoint = 'https://www.ethbox.org/api/payout.php';\r\n\r\n        let formData = new FormData();\r\n        formData.append('action', 'payout_set_claimed');\r\n        formData.append('address', address);\r\n\r\n        let response = await fetch(endpoint, { method: 'POST', body: formData });\r\n        let result = await response.json();\r\n        return result;\r\n    }\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ToastData } from '../interfaces';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ToasterService {\r\n\r\n    toastMessage$ = new Subject<ToastData>();\r\n\r\n    constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ViewConsoleService {\r\n\r\n\tpublic messages: { type: \"info\"|\"warn\"|\"err\", timestamp: Number | String, message: String }[] = [];\r\n\r\n\tconstructor() { }\r\n\r\n\tlog(message) {\r\n\t\tthis.messages.unshift({ type: \"info\", timestamp: Date.now(), message });\r\n\t}\r\n\r\n\twarning(message) {\r\n\t\tthis.messages.unshift({ type: \"warn\", timestamp: Date.now(), message });\r\n\t}\r\n\r\n\terror(message) {\r\n\t\tthis.messages.unshift({ type: \"err\", timestamp: Date.now(), message });\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":"webpack:///"}